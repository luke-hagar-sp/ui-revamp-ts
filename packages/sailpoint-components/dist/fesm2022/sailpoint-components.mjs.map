{"version":3,"file":"sailpoint-components.mjs","sources":["../../src/lib/sailpoint-sdk.service.ts","../../src/lib/generic-dialog/generic-dialog.component.ts","../../src/lib/identities/utils/search-bar/search-bar.component.ts","../../src/lib/identities/utils/search-bar/search-bar.component.html","../../src/lib/identities/utils/column-customizer/column-customizer.component.ts","../../src/lib/identities/utils/column-customizer/column-customizer.component.html","../../src/lib/identities/identities.component.ts","../../src/lib/identities/identities.component.html","../../src/lib/report-example/report-data.service.ts","../../src/lib/report-example/identity-detail-view/identity-detail-view.component.ts","../../src/lib/report-example/identity-detail-view/identity-detail-view.component.html","../../src/lib/theme/theme.service.ts","../../src/lib/report-example/identity-status-chart/identity-status-chart.component.ts","../../src/lib/report-example/identity-status-chart/identity-status-chart.component.html","../../src/lib/report-example/manager-distribution-chart/manager-distribution-chart.component.ts","../../src/lib/report-example/manager-distribution-chart/manager-distribution-chart.component.html","../../src/lib/report-example/lifecycle-state-chart/lifecycle-state-chart.component.ts","../../src/lib/report-example/lifecycle-state-chart/lifecycle-state-chart.component.html","../../src/lib/report-example/report-example.component.ts","../../src/lib/report-example/report-example.component.html","../../src/lib/report-example/report-example-routes.ts","../../src/lib/sailpoint-components.component.ts","../../src/lib/sailpoint-components.service.ts","../../src/lib/theme-picker/theme-picker.component.ts","../../src/lib/theme-picker/theme-picker.component.html","../../src/lib/transforms/transform-builder/models/account-attribute.ts","../../src/lib/transforms/transform-builder/models/concat.ts","../../src/lib/transforms/transform-builder/models/static.ts","../../src/lib/velocity-editor-dialog/velocity-editor-dialog.component.ts","../../src/lib/velocity-editor-dialog/velocity-editor-dialog.component.html","../../src/lib/transforms/transform-builder/utils/autosave.service.ts","../../src/lib/transforms/transform-builder/models/base-64-decode.ts","../../src/lib/transforms/transform-builder/models/base-64-encode.ts","../../src/lib/transforms/transform-builder/models/conditional.ts","../../src/lib/transforms/transform-builder/models/date-compare.ts","../../src/lib/transforms/transform-builder/models/date-format.ts","../../src/lib/transforms/transform-builder/models/date-math.ts","../../src/lib/transforms/transform-builder/models/decompose-diacritical-marks.ts","../../src/lib/transforms/transform-builder/models/e164-phone.ts","../../src/lib/transforms/transform-builder/utils/utils.ts","../../src/lib/transforms/transform-builder/models/first-valid.ts","../../src/lib/transforms/transform-builder/models/generate-random-string.ts","../../src/lib/transforms/transform-builder/models/get-end-of-string.ts","../../src/lib/transforms/transform-builder/models/get-reference-identity-attribute.ts","../../src/lib/transforms/transform-builder/models/identity-attribute.ts","../../src/lib/transforms/transform-builder/models/index-of.ts","../../src/lib/transforms/transform-builder/models/iso-3166.ts","../../src/lib/transforms/transform-builder/models/last-index-of.ts","../../src/lib/transforms/transform-builder/models/left-pad.ts","../../src/lib/transforms/transform-builder/models/lookup.ts","../../src/lib/transforms/transform-builder/models/lower.ts","../../src/lib/transforms/transform-builder/models/name-normalizer.ts","../../src/lib/transforms/transform-builder/models/random-alphanumeric.ts","../../src/lib/transforms/transform-builder/models/random-numeric.ts","../../src/lib/transforms/transform-builder/models/reference.ts","../../src/lib/transforms/transform-builder/models/replace.ts","../../src/lib/transforms/transform-builder/models/replace-all.ts","../../src/lib/transforms/transform-builder/models/rfc-5646.ts","../../src/lib/transforms/transform-builder/models/right-pad.ts","../../src/lib/transforms/transform-builder/models/rule.ts","../../src/lib/transforms/transform-builder/models/split.ts","../../src/lib/transforms/transform-builder/models/string.ts","../../src/lib/transforms/transform-builder/models/substring.ts","../../src/lib/transforms/transform-builder/models/trim.ts","../../src/lib/transforms/transform-builder/models/upper.ts","../../src/lib/transforms/transform-builder/models/uuid.ts","../../src/lib/transforms/transform-builder/utils/map-editor-dialog.component.ts","../../src/lib/transforms/transform-builder/utils/map-editor-dialog.component.html","../../src/lib/transforms/transform-builder/utils/identity-service.ts","../../src/lib/transforms/transform-builder/utils/identity-search.component.ts","../../src/lib/transforms/transform-builder/utils/identity-search.component.html","../../src/lib/transforms/transform-builder/utils/transform-results.component.ts","../../src/lib/transforms/transform-builder/utils/transform-results.component.html","../../src/lib/transforms/transform-builder/utils/transform-preview.component.ts","../../src/lib/transforms/transform-builder/utils/transform-preview.component.html","../../src/lib/transforms/transform-builder/transform-builder.component.ts","../../src/lib/transforms/transform-builder/transform-builder.component.html","../../src/lib/transforms/transforms.component.ts","../../src/lib/transforms/transforms.component.html","../../src/public-api.ts","../../src/sailpoint-components.ts"],"sourcesContent":["/// <reference path=\"../global.ts\" />\r\nimport { Injectable } from '@angular/core';\r\nimport { AxiosResponse } from 'axios';\r\nimport * as sdk from 'sailpoint-api-client';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SailPointSDKService {\r\n  private electronAPI: any;\r\n\r\n  constructor() {\r\n    if (window.electronAPI) {\r\n      this.electronAPI = window.electronAPI;\r\n    } else {\r\n      console.error('Electron API is not available');\r\n    }\r\n  }\r\n\r\n\r\ngetAccessModelMetadataAttribute(requestParameters: sdk.AccessModelMetadataV2025ApiGetAccessModelMetadataAttributeRequest): Promise<AxiosResponse<sdk.AttributeDTOV2025, any>> {\r\n    return this.electronAPI.getAccessModelMetadataAttribute(requestParameters) as Promise<AxiosResponse<sdk.AttributeDTOV2025, any>>;\r\n}\r\ngetAccessModelMetadataAttributeValue(requestParameters: sdk.AccessModelMetadataV2025ApiGetAccessModelMetadataAttributeValueRequest): Promise<AxiosResponse<sdk.AttributeValueDTOV2025, any>> {\r\n    return this.electronAPI.getAccessModelMetadataAttributeValue(requestParameters) as Promise<AxiosResponse<sdk.AttributeValueDTOV2025, any>>;\r\n}\r\nlistAccessModelMetadataAttribute(requestParameters: sdk.AccessModelMetadataV2025ApiListAccessModelMetadataAttributeRequest = {}): Promise<AxiosResponse<Array<sdk.AttributeDTOV2025>, any>> {\r\n    return this.electronAPI.listAccessModelMetadataAttribute(requestParameters) as Promise<AxiosResponse<Array<sdk.AttributeDTOV2025>, any>>;\r\n}\r\nlistAccessModelMetadataAttributeValue(requestParameters: sdk.AccessModelMetadataV2025ApiListAccessModelMetadataAttributeValueRequest): Promise<AxiosResponse<Array<sdk.AttributeValueDTOV2025>, any>> {\r\n    return this.electronAPI.listAccessModelMetadataAttributeValue(requestParameters) as Promise<AxiosResponse<Array<sdk.AttributeValueDTOV2025>, any>>;\r\n}\r\n\r\ncreateAccessProfile(requestParameters: sdk.AccessProfilesV2025ApiCreateAccessProfileRequest): Promise<AxiosResponse<sdk.AccessProfileV2025, any>> {\r\n    return this.electronAPI.createAccessProfile(requestParameters) as Promise<AxiosResponse<sdk.AccessProfileV2025, any>>;\r\n}\r\ndeleteAccessProfile(requestParameters: sdk.AccessProfilesV2025ApiDeleteAccessProfileRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteAccessProfile(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteAccessProfilesInBulk(requestParameters: sdk.AccessProfilesV2025ApiDeleteAccessProfilesInBulkRequest): Promise<AxiosResponse<sdk.AccessProfileBulkDeleteResponseV2025, any>> {\r\n    return this.electronAPI.deleteAccessProfilesInBulk(requestParameters) as Promise<AxiosResponse<sdk.AccessProfileBulkDeleteResponseV2025, any>>;\r\n}\r\ngetAccessProfile(requestParameters: sdk.AccessProfilesV2025ApiGetAccessProfileRequest): Promise<AxiosResponse<sdk.AccessProfileV2025, any>> {\r\n    return this.electronAPI.getAccessProfile(requestParameters) as Promise<AxiosResponse<sdk.AccessProfileV2025, any>>;\r\n}\r\ngetAccessProfileEntitlements(requestParameters: sdk.AccessProfilesV2025ApiGetAccessProfileEntitlementsRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.getAccessProfileEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistAccessProfiles(requestParameters: sdk.AccessProfilesV2025ApiListAccessProfilesRequest = {}): Promise<AxiosResponse<Array<sdk.AccessProfileV2025>, any>> {\r\n    return this.electronAPI.listAccessProfiles(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessProfileV2025>, any>>;\r\n}\r\npatchAccessProfile(requestParameters: sdk.AccessProfilesV2025ApiPatchAccessProfileRequest): Promise<AxiosResponse<sdk.AccessProfileV2025, any>> {\r\n    return this.electronAPI.patchAccessProfile(requestParameters) as Promise<AxiosResponse<sdk.AccessProfileV2025, any>>;\r\n}\r\nupdateAccessProfilesInBulk(requestParameters: sdk.AccessProfilesV2025ApiUpdateAccessProfilesInBulkRequest): Promise<AxiosResponse<Array<sdk.AccessProfileUpdateItemV2025>, any>> {\r\n    return this.electronAPI.updateAccessProfilesInBulk(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessProfileUpdateItemV2025>, any>>;\r\n}\r\n\r\napproveAccessRequest(requestParameters: sdk.AccessRequestApprovalsV2025ApiApproveAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.approveAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nforwardAccessRequest(requestParameters: sdk.AccessRequestApprovalsV2025ApiForwardAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.forwardAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ngetAccessRequestApprovalSummary(requestParameters: sdk.AccessRequestApprovalsV2025ApiGetAccessRequestApprovalSummaryRequest = {}): Promise<AxiosResponse<sdk.ApprovalSummaryV2025, any>> {\r\n    return this.electronAPI.getAccessRequestApprovalSummary(requestParameters) as Promise<AxiosResponse<sdk.ApprovalSummaryV2025, any>>;\r\n}\r\nlistAccessRequestApprovers(requestParameters: sdk.AccessRequestApprovalsV2025ApiListAccessRequestApproversRequest): Promise<AxiosResponse<Array<sdk.AccessRequestApproversListResponseV2025>, any>> {\r\n    return this.electronAPI.listAccessRequestApprovers(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestApproversListResponseV2025>, any>>;\r\n}\r\nlistCompletedApprovals(requestParameters: sdk.AccessRequestApprovalsV2025ApiListCompletedApprovalsRequest = {}): Promise<AxiosResponse<Array<sdk.CompletedApprovalV2025>, any>> {\r\n    return this.electronAPI.listCompletedApprovals(requestParameters) as Promise<AxiosResponse<Array<sdk.CompletedApprovalV2025>, any>>;\r\n}\r\nlistPendingApprovals(requestParameters: sdk.AccessRequestApprovalsV2025ApiListPendingApprovalsRequest = {}): Promise<AxiosResponse<Array<sdk.PendingApprovalV2025>, any>> {\r\n    return this.electronAPI.listPendingApprovals(requestParameters) as Promise<AxiosResponse<Array<sdk.PendingApprovalV2025>, any>>;\r\n}\r\nrejectAccessRequest(requestParameters: sdk.AccessRequestApprovalsV2025ApiRejectAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.rejectAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\n\r\ngetAccessRequestIdentityMetrics(requestParameters: sdk.AccessRequestIdentityMetricsV2025ApiGetAccessRequestIdentityMetricsRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.getAccessRequestIdentityMetrics(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\n\r\napproveBulkAccessRequest(requestParameters: sdk.AccessRequestsV2025ApiApproveBulkAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.approveBulkAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ncancelAccessRequest(requestParameters: sdk.AccessRequestsV2025ApiCancelAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.cancelAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ncancelAccessRequestInBulk(requestParameters: sdk.AccessRequestsV2025ApiCancelAccessRequestInBulkRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.cancelAccessRequestInBulk(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ncloseAccessRequest(requestParameters: sdk.AccessRequestsV2025ApiCloseAccessRequestRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.closeAccessRequest(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ncreateAccessRequest(requestParameters: sdk.AccessRequestsV2025ApiCreateAccessRequestRequest): Promise<AxiosResponse<sdk.AccessRequestResponseV2025, any>> {\r\n    return this.electronAPI.createAccessRequest(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestResponseV2025, any>>;\r\n}\r\ngetAccessRequestConfig(): Promise<AxiosResponse<sdk.AccessRequestConfigV2025, any>> {\r\n    return this.electronAPI.getAccessRequestConfig() as Promise<AxiosResponse<sdk.AccessRequestConfigV2025, any>>;\r\n}\r\ngetEntitlementDetailsForIdentity(requestParameters: sdk.AccessRequestsV2025ApiGetEntitlementDetailsForIdentityRequest): Promise<AxiosResponse<sdk.IdentityEntitlementDetailsV2025, any>> {\r\n    return this.electronAPI.getEntitlementDetailsForIdentity(requestParameters) as Promise<AxiosResponse<sdk.IdentityEntitlementDetailsV2025, any>>;\r\n}\r\nlistAccessRequestStatus(requestParameters: sdk.AccessRequestsV2025ApiListAccessRequestStatusRequest = {}): Promise<AxiosResponse<Array<sdk.RequestedItemStatusV2025>, any>> {\r\n    return this.electronAPI.listAccessRequestStatus(requestParameters) as Promise<AxiosResponse<Array<sdk.RequestedItemStatusV2025>, any>>;\r\n}\r\nlistAdministratorsAccessRequestStatus(requestParameters: sdk.AccessRequestsV2025ApiListAdministratorsAccessRequestStatusRequest = {}): Promise<AxiosResponse<Array<sdk.AccessRequestAdminItemStatusV2025>, any>> {\r\n    return this.electronAPI.listAdministratorsAccessRequestStatus(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestAdminItemStatusV2025>, any>>;\r\n}\r\nloadAccountSelections(requestParameters: sdk.AccessRequestsV2025ApiLoadAccountSelectionsRequest): Promise<AxiosResponse<sdk.AccountsSelectionResponseV2025, any>> {\r\n    return this.electronAPI.loadAccountSelections(requestParameters) as Promise<AxiosResponse<sdk.AccountsSelectionResponseV2025, any>>;\r\n}\r\nsetAccessRequestConfig(requestParameters: sdk.AccessRequestsV2025ApiSetAccessRequestConfigRequest): Promise<AxiosResponse<sdk.AccessRequestConfigV2025, any>> {\r\n    return this.electronAPI.setAccessRequestConfig(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestConfigV2025, any>>;\r\n}\r\n\r\ngetAccountActivity(requestParameters: sdk.AccountActivitiesV2025ApiGetAccountActivityRequest): Promise<AxiosResponse<sdk.AccountActivityV2025, any>> {\r\n    return this.electronAPI.getAccountActivity(requestParameters) as Promise<AxiosResponse<sdk.AccountActivityV2025, any>>;\r\n}\r\nlistAccountActivities(requestParameters: sdk.AccountActivitiesV2025ApiListAccountActivitiesRequest = {}): Promise<AxiosResponse<Array<sdk.AccountActivityV2025>, any>> {\r\n    return this.electronAPI.listAccountActivities(requestParameters) as Promise<AxiosResponse<Array<sdk.AccountActivityV2025>, any>>;\r\n}\r\n\r\ngetAccountAggregationStatus(requestParameters: sdk.AccountAggregationsV2025ApiGetAccountAggregationStatusRequest): Promise<AxiosResponse<sdk.AccountAggregationStatusV2025, any>> {\r\n    return this.electronAPI.getAccountAggregationStatus(requestParameters) as Promise<AxiosResponse<sdk.AccountAggregationStatusV2025, any>>;\r\n}\r\n\r\ngetUsagesByAccountId(requestParameters: sdk.AccountUsagesV2025ApiGetUsagesByAccountIdRequest): Promise<AxiosResponse<Array<sdk.AccountUsageV2025>, any>> {\r\n    return this.electronAPI.getUsagesByAccountId(requestParameters) as Promise<AxiosResponse<Array<sdk.AccountUsageV2025>, any>>;\r\n}\r\n\r\ncreateAccount(requestParameters: sdk.AccountsV2025ApiCreateAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.createAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\ndeleteAccount(requestParameters: sdk.AccountsV2025ApiDeleteAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.deleteAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\ndeleteAccountAsync(requestParameters: sdk.AccountsV2025ApiDeleteAccountAsyncRequest): Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>> {\r\n    return this.electronAPI.deleteAccountAsync(requestParameters) as Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>>;\r\n}\r\ndisableAccount(requestParameters: sdk.AccountsV2025ApiDisableAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.disableAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\ndisableAccountForIdentity(requestParameters: sdk.AccountsV2025ApiDisableAccountForIdentityRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.disableAccountForIdentity(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ndisableAccountsForIdentities(requestParameters: sdk.AccountsV2025ApiDisableAccountsForIdentitiesRequest): Promise<AxiosResponse<Array<sdk.BulkIdentitiesAccountsResponseV2025>, any>> {\r\n    return this.electronAPI.disableAccountsForIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.BulkIdentitiesAccountsResponseV2025>, any>>;\r\n}\r\nenableAccount(requestParameters: sdk.AccountsV2025ApiEnableAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.enableAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\nenableAccountForIdentity(requestParameters: sdk.AccountsV2025ApiEnableAccountForIdentityRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.enableAccountForIdentity(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nenableAccountsForIdentities(requestParameters: sdk.AccountsV2025ApiEnableAccountsForIdentitiesRequest): Promise<AxiosResponse<Array<sdk.BulkIdentitiesAccountsResponseV2025>, any>> {\r\n    return this.electronAPI.enableAccountsForIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.BulkIdentitiesAccountsResponseV2025>, any>>;\r\n}\r\ngetAccount(requestParameters: sdk.AccountsV2025ApiGetAccountRequest): Promise<AxiosResponse<sdk.AccountV2025, any>> {\r\n    return this.electronAPI.getAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountV2025, any>>;\r\n}\r\ngetAccountEntitlements(requestParameters: sdk.AccountsV2025ApiGetAccountEntitlementsRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.getAccountEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistAccounts(requestParameters: sdk.AccountsV2025ApiListAccountsRequest = {}): Promise<AxiosResponse<Array<sdk.AccountV2025>, any>> {\r\n    return this.electronAPI.listAccounts(requestParameters) as Promise<AxiosResponse<Array<sdk.AccountV2025>, any>>;\r\n}\r\nputAccount(requestParameters: sdk.AccountsV2025ApiPutAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.putAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\nsubmitReloadAccount(requestParameters: sdk.AccountsV2025ApiSubmitReloadAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.submitReloadAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\nunlockAccount(requestParameters: sdk.AccountsV2025ApiUnlockAccountRequest): Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>> {\r\n    return this.electronAPI.unlockAccount(requestParameters) as Promise<AxiosResponse<sdk.AccountsAsyncResultV2025, any>>;\r\n}\r\nupdateAccount(requestParameters: sdk.AccountsV2025ApiUpdateAccountRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.updateAccount(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\n\r\ngetDiscoveredApplications(requestParameters: sdk.ApplicationDiscoveryV2025ApiGetDiscoveredApplicationsRequest = {}): Promise<AxiosResponse<Array<sdk.GetDiscoveredApplications200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.getDiscoveredApplications(requestParameters) as Promise<AxiosResponse<Array<sdk.GetDiscoveredApplications200ResponseInnerV2025>, any>>;\r\n}\r\ngetManualDiscoverApplicationsCsvTemplate(): Promise<AxiosResponse<sdk.ManualDiscoverApplicationsTemplateV2025, any>> {\r\n    return this.electronAPI.getManualDiscoverApplicationsCsvTemplate() as Promise<AxiosResponse<sdk.ManualDiscoverApplicationsTemplateV2025, any>>;\r\n}\r\nsendManualDiscoverApplicationsCsvTemplate(requestParameters: sdk.ApplicationDiscoveryV2025ApiSendManualDiscoverApplicationsCsvTemplateRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.sendManualDiscoverApplicationsCsvTemplate(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ngetApproval(requestParameters: sdk.ApprovalsV2025ApiGetApprovalRequest): Promise<AxiosResponse<sdk.ApprovalV2025, any>> {\r\n    return this.electronAPI.getApproval(requestParameters) as Promise<AxiosResponse<sdk.ApprovalV2025, any>>;\r\n}\r\ngetApprovals(requestParameters: sdk.ApprovalsV2025ApiGetApprovalsRequest = {}): Promise<AxiosResponse<Array<sdk.ApprovalV2025>, any>> {\r\n    return this.electronAPI.getApprovals(requestParameters) as Promise<AxiosResponse<Array<sdk.ApprovalV2025>, any>>;\r\n}\r\n\r\ncreateSourceApp(requestParameters: sdk.AppsV2025ApiCreateSourceAppRequest): Promise<AxiosResponse<sdk.SourceAppV2025, any>> {\r\n    return this.electronAPI.createSourceApp(requestParameters) as Promise<AxiosResponse<sdk.SourceAppV2025, any>>;\r\n}\r\ndeleteAccessProfilesFromSourceAppByBulk(requestParameters: sdk.AppsV2025ApiDeleteAccessProfilesFromSourceAppByBulkRequest): Promise<AxiosResponse<Array<sdk.AccessProfileDetailsV2025>, any>> {\r\n    return this.electronAPI.deleteAccessProfilesFromSourceAppByBulk(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessProfileDetailsV2025>, any>>;\r\n}\r\ndeleteSourceApp(requestParameters: sdk.AppsV2025ApiDeleteSourceAppRequest): Promise<AxiosResponse<sdk.SourceAppV2025, any>> {\r\n    return this.electronAPI.deleteSourceApp(requestParameters) as Promise<AxiosResponse<sdk.SourceAppV2025, any>>;\r\n}\r\ngetSourceApp(requestParameters: sdk.AppsV2025ApiGetSourceAppRequest): Promise<AxiosResponse<sdk.SourceAppV2025, any>> {\r\n    return this.electronAPI.getSourceApp(requestParameters) as Promise<AxiosResponse<sdk.SourceAppV2025, any>>;\r\n}\r\nlistAccessProfilesForSourceApp(requestParameters: sdk.AppsV2025ApiListAccessProfilesForSourceAppRequest): Promise<AxiosResponse<Array<sdk.AccessProfileDetailsV2025>, any>> {\r\n    return this.electronAPI.listAccessProfilesForSourceApp(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessProfileDetailsV2025>, any>>;\r\n}\r\nlistAllSourceApp(requestParameters: sdk.AppsV2025ApiListAllSourceAppRequest = {}): Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>> {\r\n    return this.electronAPI.listAllSourceApp(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>>;\r\n}\r\nlistAllUserApps(requestParameters: sdk.AppsV2025ApiListAllUserAppsRequest): Promise<AxiosResponse<Array<sdk.UserAppV2025>, any>> {\r\n    return this.electronAPI.listAllUserApps(requestParameters) as Promise<AxiosResponse<Array<sdk.UserAppV2025>, any>>;\r\n}\r\nlistAssignedSourceApp(requestParameters: sdk.AppsV2025ApiListAssignedSourceAppRequest = {}): Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>> {\r\n    return this.electronAPI.listAssignedSourceApp(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>>;\r\n}\r\nlistAvailableAccountsForUserApp(requestParameters: sdk.AppsV2025ApiListAvailableAccountsForUserAppRequest): Promise<AxiosResponse<Array<sdk.AppAccountDetailsV2025>, any>> {\r\n    return this.electronAPI.listAvailableAccountsForUserApp(requestParameters) as Promise<AxiosResponse<Array<sdk.AppAccountDetailsV2025>, any>>;\r\n}\r\nlistAvailableSourceApps(requestParameters: sdk.AppsV2025ApiListAvailableSourceAppsRequest = {}): Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>> {\r\n    return this.electronAPI.listAvailableSourceApps(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceAppV2025>, any>>;\r\n}\r\nlistOwnedUserApps(requestParameters: sdk.AppsV2025ApiListOwnedUserAppsRequest = {}): Promise<AxiosResponse<Array<sdk.UserAppV2025>, any>> {\r\n    return this.electronAPI.listOwnedUserApps(requestParameters) as Promise<AxiosResponse<Array<sdk.UserAppV2025>, any>>;\r\n}\r\npatchSourceApp(requestParameters: sdk.AppsV2025ApiPatchSourceAppRequest): Promise<AxiosResponse<sdk.SourceAppPatchDtoV2025, any>> {\r\n    return this.electronAPI.patchSourceApp(requestParameters) as Promise<AxiosResponse<sdk.SourceAppPatchDtoV2025, any>>;\r\n}\r\npatchUserApp(requestParameters: sdk.AppsV2025ApiPatchUserAppRequest): Promise<AxiosResponse<sdk.UserAppV2025, any>> {\r\n    return this.electronAPI.patchUserApp(requestParameters) as Promise<AxiosResponse<sdk.UserAppV2025, any>>;\r\n}\r\nupdateSourceAppsInBulk(requestParameters: sdk.AppsV2025ApiUpdateSourceAppsInBulkRequest = {}): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.updateSourceAppsInBulk(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ngetProfileConfig(requestParameters: sdk.AuthProfileV2025ApiGetProfileConfigRequest): Promise<AxiosResponse<sdk.AuthProfileV2025, any>> {\r\n    return this.electronAPI.getProfileConfig(requestParameters) as Promise<AxiosResponse<sdk.AuthProfileV2025, any>>;\r\n}\r\ngetProfileConfigList(requestParameters: sdk.AuthProfileV2025ApiGetProfileConfigListRequest = {}): Promise<AxiosResponse<Array<sdk.AuthProfileSummaryV2025>, any>> {\r\n    return this.electronAPI.getProfileConfigList(requestParameters) as Promise<AxiosResponse<Array<sdk.AuthProfileSummaryV2025>, any>>;\r\n}\r\npatchProfileConfig(requestParameters: sdk.AuthProfileV2025ApiPatchProfileConfigRequest): Promise<AxiosResponse<sdk.AuthProfileV2025, any>> {\r\n    return this.electronAPI.patchProfileConfig(requestParameters) as Promise<AxiosResponse<sdk.AuthProfileV2025, any>>;\r\n}\r\n\r\ngetAuthUser(requestParameters: sdk.AuthUsersV2025ApiGetAuthUserRequest): Promise<AxiosResponse<sdk.AuthUserV2025, any>> {\r\n    return this.electronAPI.getAuthUser(requestParameters) as Promise<AxiosResponse<sdk.AuthUserV2025, any>>;\r\n}\r\npatchAuthUser(requestParameters: sdk.AuthUsersV2025ApiPatchAuthUserRequest): Promise<AxiosResponse<sdk.AuthUserV2025, any>> {\r\n    return this.electronAPI.patchAuthUser(requestParameters) as Promise<AxiosResponse<sdk.AuthUserV2025, any>>;\r\n}\r\n\r\ncreateBrandingItem(requestParameters: sdk.BrandingV2025ApiCreateBrandingItemRequest): Promise<AxiosResponse<sdk.BrandingItemV2025, any>> {\r\n    return this.electronAPI.createBrandingItem(requestParameters) as Promise<AxiosResponse<sdk.BrandingItemV2025, any>>;\r\n}\r\ndeleteBranding(requestParameters: sdk.BrandingV2025ApiDeleteBrandingRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteBranding(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetBranding(requestParameters: sdk.BrandingV2025ApiGetBrandingRequest): Promise<AxiosResponse<sdk.BrandingItemV2025, any>> {\r\n    return this.electronAPI.getBranding(requestParameters) as Promise<AxiosResponse<sdk.BrandingItemV2025, any>>;\r\n}\r\ngetBrandingList(): Promise<AxiosResponse<Array<sdk.BrandingItemV2025>, any>> {\r\n    return this.electronAPI.getBrandingList() as Promise<AxiosResponse<Array<sdk.BrandingItemV2025>, any>>;\r\n}\r\nsetBrandingItem(requestParameters: sdk.BrandingV2025ApiSetBrandingItemRequest): Promise<AxiosResponse<sdk.BrandingItemV2025, any>> {\r\n    return this.electronAPI.setBrandingItem(requestParameters) as Promise<AxiosResponse<sdk.BrandingItemV2025, any>>;\r\n}\r\n\r\ncreateCampaignFilter(requestParameters: sdk.CertificationCampaignFiltersV2025ApiCreateCampaignFilterRequest): Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>> {\r\n    return this.electronAPI.createCampaignFilter(requestParameters) as Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>>;\r\n}\r\ndeleteCampaignFilters(requestParameters: sdk.CertificationCampaignFiltersV2025ApiDeleteCampaignFiltersRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteCampaignFilters(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetCampaignFilterById(requestParameters: sdk.CertificationCampaignFiltersV2025ApiGetCampaignFilterByIdRequest): Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>> {\r\n    return this.electronAPI.getCampaignFilterById(requestParameters) as Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>>;\r\n}\r\nlistCampaignFilters(requestParameters: sdk.CertificationCampaignFiltersV2025ApiListCampaignFiltersRequest = {}): Promise<AxiosResponse<sdk.ListCampaignFilters200ResponseV2025, any>> {\r\n    return this.electronAPI.listCampaignFilters(requestParameters) as Promise<AxiosResponse<sdk.ListCampaignFilters200ResponseV2025, any>>;\r\n}\r\nupdateCampaignFilter(requestParameters: sdk.CertificationCampaignFiltersV2025ApiUpdateCampaignFilterRequest): Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>> {\r\n    return this.electronAPI.updateCampaignFilter(requestParameters) as Promise<AxiosResponse<sdk.CampaignFilterDetailsV2025, any>>;\r\n}\r\n\r\ncompleteCampaign(requestParameters: sdk.CertificationCampaignsV2025ApiCompleteCampaignRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.completeCampaign(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ncreateCampaign(requestParameters: sdk.CertificationCampaignsV2025ApiCreateCampaignRequest): Promise<AxiosResponse<sdk.CampaignV2025, any>> {\r\n    return this.electronAPI.createCampaign(requestParameters) as Promise<AxiosResponse<sdk.CampaignV2025, any>>;\r\n}\r\ncreateCampaignTemplate(requestParameters: sdk.CertificationCampaignsV2025ApiCreateCampaignTemplateRequest): Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>> {\r\n    return this.electronAPI.createCampaignTemplate(requestParameters) as Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>>;\r\n}\r\ndeleteCampaignTemplate(requestParameters: sdk.CertificationCampaignsV2025ApiDeleteCampaignTemplateRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteCampaignTemplate(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteCampaignTemplateSchedule(requestParameters: sdk.CertificationCampaignsV2025ApiDeleteCampaignTemplateScheduleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteCampaignTemplateSchedule(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteCampaigns(requestParameters: sdk.CertificationCampaignsV2025ApiDeleteCampaignsRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.deleteCampaigns(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ngetActiveCampaigns(requestParameters: sdk.CertificationCampaignsV2025ApiGetActiveCampaignsRequest = {}): Promise<AxiosResponse<Array<sdk.GetActiveCampaigns200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.getActiveCampaigns(requestParameters) as Promise<AxiosResponse<Array<sdk.GetActiveCampaigns200ResponseInnerV2025>, any>>;\r\n}\r\ngetCampaign(requestParameters: sdk.CertificationCampaignsV2025ApiGetCampaignRequest): Promise<AxiosResponse<sdk.GetCampaign200ResponseV2025, any>> {\r\n    return this.electronAPI.getCampaign(requestParameters) as Promise<AxiosResponse<sdk.GetCampaign200ResponseV2025, any>>;\r\n}\r\ngetCampaignReports(requestParameters: sdk.CertificationCampaignsV2025ApiGetCampaignReportsRequest): Promise<AxiosResponse<Array<sdk.CampaignReportV2025>, any>> {\r\n    return this.electronAPI.getCampaignReports(requestParameters) as Promise<AxiosResponse<Array<sdk.CampaignReportV2025>, any>>;\r\n}\r\ngetCampaignReportsConfig(): Promise<AxiosResponse<sdk.CampaignReportsConfigV2025, any>> {\r\n    return this.electronAPI.getCampaignReportsConfig() as Promise<AxiosResponse<sdk.CampaignReportsConfigV2025, any>>;\r\n}\r\ngetCampaignTemplate(requestParameters: sdk.CertificationCampaignsV2025ApiGetCampaignTemplateRequest): Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>> {\r\n    return this.electronAPI.getCampaignTemplate(requestParameters) as Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>>;\r\n}\r\ngetCampaignTemplateSchedule(requestParameters: sdk.CertificationCampaignsV2025ApiGetCampaignTemplateScheduleRequest): Promise<AxiosResponse<sdk.ScheduleV2025, any>> {\r\n    return this.electronAPI.getCampaignTemplateSchedule(requestParameters) as Promise<AxiosResponse<sdk.ScheduleV2025, any>>;\r\n}\r\ngetCampaignTemplates(requestParameters: sdk.CertificationCampaignsV2025ApiGetCampaignTemplatesRequest = {}): Promise<AxiosResponse<Array<sdk.CampaignTemplateV2025>, any>> {\r\n    return this.electronAPI.getCampaignTemplates(requestParameters) as Promise<AxiosResponse<Array<sdk.CampaignTemplateV2025>, any>>;\r\n}\r\nmove(requestParameters: sdk.CertificationCampaignsV2025ApiMoveRequest): Promise<AxiosResponse<sdk.CertificationTaskV2025, any>> {\r\n    return this.electronAPI.move(requestParameters) as Promise<AxiosResponse<sdk.CertificationTaskV2025, any>>;\r\n}\r\npatchCampaignTemplate(requestParameters: sdk.CertificationCampaignsV2025ApiPatchCampaignTemplateRequest): Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>> {\r\n    return this.electronAPI.patchCampaignTemplate(requestParameters) as Promise<AxiosResponse<sdk.CampaignTemplateV2025, any>>;\r\n}\r\nsetCampaignReportsConfig(requestParameters: sdk.CertificationCampaignsV2025ApiSetCampaignReportsConfigRequest): Promise<AxiosResponse<sdk.CampaignReportsConfigV2025, any>> {\r\n    return this.electronAPI.setCampaignReportsConfig(requestParameters) as Promise<AxiosResponse<sdk.CampaignReportsConfigV2025, any>>;\r\n}\r\nsetCampaignTemplateSchedule(requestParameters: sdk.CertificationCampaignsV2025ApiSetCampaignTemplateScheduleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.setCampaignTemplateSchedule(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nstartCampaign(requestParameters: sdk.CertificationCampaignsV2025ApiStartCampaignRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.startCampaign(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nstartCampaignRemediationScan(requestParameters: sdk.CertificationCampaignsV2025ApiStartCampaignRemediationScanRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.startCampaignRemediationScan(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nstartCampaignReport(requestParameters: sdk.CertificationCampaignsV2025ApiStartCampaignReportRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.startCampaignReport(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nstartGenerateCampaignTemplate(requestParameters: sdk.CertificationCampaignsV2025ApiStartGenerateCampaignTemplateRequest): Promise<AxiosResponse<sdk.CampaignReferenceV2025, any>> {\r\n    return this.electronAPI.startGenerateCampaignTemplate(requestParameters) as Promise<AxiosResponse<sdk.CampaignReferenceV2025, any>>;\r\n}\r\nupdateCampaign(requestParameters: sdk.CertificationCampaignsV2025ApiUpdateCampaignRequest): Promise<AxiosResponse<sdk.SlimCampaignV2025, any>> {\r\n    return this.electronAPI.updateCampaign(requestParameters) as Promise<AxiosResponse<sdk.SlimCampaignV2025, any>>;\r\n}\r\n\r\ngetIdentityAccessSummaries(requestParameters: sdk.CertificationSummariesV2025ApiGetIdentityAccessSummariesRequest): Promise<AxiosResponse<Array<sdk.AccessSummaryV2025>, any>> {\r\n    return this.electronAPI.getIdentityAccessSummaries(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessSummaryV2025>, any>>;\r\n}\r\ngetIdentityDecisionSummary(requestParameters: sdk.CertificationSummariesV2025ApiGetIdentityDecisionSummaryRequest): Promise<AxiosResponse<sdk.IdentityCertDecisionSummaryV2025, any>> {\r\n    return this.electronAPI.getIdentityDecisionSummary(requestParameters) as Promise<AxiosResponse<sdk.IdentityCertDecisionSummaryV2025, any>>;\r\n}\r\ngetIdentitySummaries(requestParameters: sdk.CertificationSummariesV2025ApiGetIdentitySummariesRequest): Promise<AxiosResponse<Array<sdk.CertificationIdentitySummaryV2025>, any>> {\r\n    return this.electronAPI.getIdentitySummaries(requestParameters) as Promise<AxiosResponse<Array<sdk.CertificationIdentitySummaryV2025>, any>>;\r\n}\r\ngetIdentitySummary(requestParameters: sdk.CertificationSummariesV2025ApiGetIdentitySummaryRequest): Promise<AxiosResponse<sdk.CertificationIdentitySummaryV2025, any>> {\r\n    return this.electronAPI.getIdentitySummary(requestParameters) as Promise<AxiosResponse<sdk.CertificationIdentitySummaryV2025, any>>;\r\n}\r\n\r\ngetCertificationTask(requestParameters: sdk.CertificationsV2025ApiGetCertificationTaskRequest): Promise<AxiosResponse<sdk.CertificationTaskV2025, any>> {\r\n    return this.electronAPI.getCertificationTask(requestParameters) as Promise<AxiosResponse<sdk.CertificationTaskV2025, any>>;\r\n}\r\ngetIdentityCertification(requestParameters: sdk.CertificationsV2025ApiGetIdentityCertificationRequest): Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>> {\r\n    return this.electronAPI.getIdentityCertification(requestParameters) as Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>>;\r\n}\r\ngetIdentityCertificationItemPermissions(requestParameters: sdk.CertificationsV2025ApiGetIdentityCertificationItemPermissionsRequest): Promise<AxiosResponse<Array<sdk.PermissionDtoV2025>, any>> {\r\n    return this.electronAPI.getIdentityCertificationItemPermissions(requestParameters) as Promise<AxiosResponse<Array<sdk.PermissionDtoV2025>, any>>;\r\n}\r\ngetPendingCertificationTasks(requestParameters: sdk.CertificationsV2025ApiGetPendingCertificationTasksRequest = {}): Promise<AxiosResponse<Array<sdk.CertificationTaskV2025>, any>> {\r\n    return this.electronAPI.getPendingCertificationTasks(requestParameters) as Promise<AxiosResponse<Array<sdk.CertificationTaskV2025>, any>>;\r\n}\r\nlistCertificationReviewers(requestParameters: sdk.CertificationsV2025ApiListCertificationReviewersRequest): Promise<AxiosResponse<Array<sdk.IdentityReferenceWithNameAndEmailV2025>, any>> {\r\n    return this.electronAPI.listCertificationReviewers(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityReferenceWithNameAndEmailV2025>, any>>;\r\n}\r\nlistIdentityAccessReviewItems(requestParameters: sdk.CertificationsV2025ApiListIdentityAccessReviewItemsRequest): Promise<AxiosResponse<Array<sdk.AccessReviewItemV2025>, any>> {\r\n    return this.electronAPI.listIdentityAccessReviewItems(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessReviewItemV2025>, any>>;\r\n}\r\nlistIdentityCertifications(requestParameters: sdk.CertificationsV2025ApiListIdentityCertificationsRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityCertificationDtoV2025>, any>> {\r\n    return this.electronAPI.listIdentityCertifications(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityCertificationDtoV2025>, any>>;\r\n}\r\nmakeIdentityDecision(requestParameters: sdk.CertificationsV2025ApiMakeIdentityDecisionRequest): Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>> {\r\n    return this.electronAPI.makeIdentityDecision(requestParameters) as Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>>;\r\n}\r\nreassignIdentityCertifications(requestParameters: sdk.CertificationsV2025ApiReassignIdentityCertificationsRequest): Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>> {\r\n    return this.electronAPI.reassignIdentityCertifications(requestParameters) as Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>>;\r\n}\r\nsignOffIdentityCertification(requestParameters: sdk.CertificationsV2025ApiSignOffIdentityCertificationRequest): Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>> {\r\n    return this.electronAPI.signOffIdentityCertification(requestParameters) as Promise<AxiosResponse<sdk.IdentityCertificationDtoV2025, any>>;\r\n}\r\nsubmitReassignCertsAsync(requestParameters: sdk.CertificationsV2025ApiSubmitReassignCertsAsyncRequest): Promise<AxiosResponse<sdk.CertificationTaskV2025, any>> {\r\n    return this.electronAPI.submitReassignCertsAsync(requestParameters) as Promise<AxiosResponse<sdk.CertificationTaskV2025, any>>;\r\n}\r\n\r\ndeleteClassifyMachineAccountFromSource(requestParameters: sdk.ClassifySourceV2025ApiDeleteClassifyMachineAccountFromSourceRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteClassifyMachineAccountFromSource(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetClassifyMachineAccountFromSourceStatus(requestParameters: sdk.ClassifySourceV2025ApiGetClassifyMachineAccountFromSourceStatusRequest): Promise<AxiosResponse<sdk.SourceClassificationStatusV2025, any>> {\r\n    return this.electronAPI.getClassifyMachineAccountFromSourceStatus(requestParameters) as Promise<AxiosResponse<sdk.SourceClassificationStatusV2025, any>>;\r\n}\r\nsendClassifyMachineAccountFromSource(requestParameters: sdk.ClassifySourceV2025ApiSendClassifyMachineAccountFromSourceRequest): Promise<AxiosResponse<sdk.SendClassifyMachineAccountFromSource200ResponseV2025, any>> {\r\n    return this.electronAPI.sendClassifyMachineAccountFromSource(requestParameters) as Promise<AxiosResponse<sdk.SendClassifyMachineAccountFromSource200ResponseV2025, any>>;\r\n}\r\n\r\ncreateDeploy(requestParameters: sdk.ConfigurationHubV2025ApiCreateDeployRequest): Promise<AxiosResponse<sdk.DeployResponseV2025, any>> {\r\n    return this.electronAPI.createDeploy(requestParameters) as Promise<AxiosResponse<sdk.DeployResponseV2025, any>>;\r\n}\r\ncreateObjectMapping(requestParameters: sdk.ConfigurationHubV2025ApiCreateObjectMappingRequest): Promise<AxiosResponse<sdk.ObjectMappingResponseV2025, any>> {\r\n    return this.electronAPI.createObjectMapping(requestParameters) as Promise<AxiosResponse<sdk.ObjectMappingResponseV2025, any>>;\r\n}\r\ncreateObjectMappings(requestParameters: sdk.ConfigurationHubV2025ApiCreateObjectMappingsRequest): Promise<AxiosResponse<sdk.ObjectMappingBulkCreateResponseV2025, any>> {\r\n    return this.electronAPI.createObjectMappings(requestParameters) as Promise<AxiosResponse<sdk.ObjectMappingBulkCreateResponseV2025, any>>;\r\n}\r\ncreateScheduledAction(requestParameters: sdk.ConfigurationHubV2025ApiCreateScheduledActionRequest): Promise<AxiosResponse<sdk.ScheduledActionResponseV2025, any>> {\r\n    return this.electronAPI.createScheduledAction(requestParameters) as Promise<AxiosResponse<sdk.ScheduledActionResponseV2025, any>>;\r\n}\r\ncreateUploadedConfiguration(requestParameters: sdk.ConfigurationHubV2025ApiCreateUploadedConfigurationRequest): Promise<AxiosResponse<sdk.BackupResponseV2025, any>> {\r\n    return this.electronAPI.createUploadedConfiguration(requestParameters) as Promise<AxiosResponse<sdk.BackupResponseV2025, any>>;\r\n}\r\ndeleteBackup(requestParameters: sdk.ConfigurationHubV2025ApiDeleteBackupRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteBackup(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteDraft(requestParameters: sdk.ConfigurationHubV2025ApiDeleteDraftRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteDraft(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteObjectMapping(requestParameters: sdk.ConfigurationHubV2025ApiDeleteObjectMappingRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteObjectMapping(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteScheduledAction(requestParameters: sdk.ConfigurationHubV2025ApiDeleteScheduledActionRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteScheduledAction(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteUploadedConfiguration(requestParameters: sdk.ConfigurationHubV2025ApiDeleteUploadedConfigurationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteUploadedConfiguration(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetDeploy(requestParameters: sdk.ConfigurationHubV2025ApiGetDeployRequest): Promise<AxiosResponse<sdk.DeployResponseV2025, any>> {\r\n    return this.electronAPI.getDeploy(requestParameters) as Promise<AxiosResponse<sdk.DeployResponseV2025, any>>;\r\n}\r\ngetObjectMappings(requestParameters: sdk.ConfigurationHubV2025ApiGetObjectMappingsRequest): Promise<AxiosResponse<Array<sdk.ObjectMappingResponseV2025>, any>> {\r\n    return this.electronAPI.getObjectMappings(requestParameters) as Promise<AxiosResponse<Array<sdk.ObjectMappingResponseV2025>, any>>;\r\n}\r\ngetUploadedConfiguration(requestParameters: sdk.ConfigurationHubV2025ApiGetUploadedConfigurationRequest): Promise<AxiosResponse<sdk.BackupResponseV2025, any>> {\r\n    return this.electronAPI.getUploadedConfiguration(requestParameters) as Promise<AxiosResponse<sdk.BackupResponseV2025, any>>;\r\n}\r\nlistBackups(requestParameters: sdk.ConfigurationHubV2025ApiListBackupsRequest = {}): Promise<AxiosResponse<Array<sdk.BackupResponse1V2025>, any>> {\r\n    return this.electronAPI.listBackups(requestParameters) as Promise<AxiosResponse<Array<sdk.BackupResponse1V2025>, any>>;\r\n}\r\nlistDeploys(): Promise<AxiosResponse<sdk.ListDeploys200ResponseV2025, any>> {\r\n    return this.electronAPI.listDeploys() as Promise<AxiosResponse<sdk.ListDeploys200ResponseV2025, any>>;\r\n}\r\nlistDrafts(requestParameters: sdk.ConfigurationHubV2025ApiListDraftsRequest = {}): Promise<AxiosResponse<Array<sdk.DraftResponseV2025>, any>> {\r\n    return this.electronAPI.listDrafts(requestParameters) as Promise<AxiosResponse<Array<sdk.DraftResponseV2025>, any>>;\r\n}\r\nlistScheduledActions(): Promise<AxiosResponse<Array<sdk.ScheduledActionResponseV2025>, any>> {\r\n    return this.electronAPI.listScheduledActions() as Promise<AxiosResponse<Array<sdk.ScheduledActionResponseV2025>, any>>;\r\n}\r\nlistUploadedConfigurations(requestParameters: sdk.ConfigurationHubV2025ApiListUploadedConfigurationsRequest = {}): Promise<AxiosResponse<Array<sdk.BackupResponseV2025>, any>> {\r\n    return this.electronAPI.listUploadedConfigurations(requestParameters) as Promise<AxiosResponse<Array<sdk.BackupResponseV2025>, any>>;\r\n}\r\nupdateObjectMappings(requestParameters: sdk.ConfigurationHubV2025ApiUpdateObjectMappingsRequest): Promise<AxiosResponse<sdk.ObjectMappingBulkPatchResponseV2025, any>> {\r\n    return this.electronAPI.updateObjectMappings(requestParameters) as Promise<AxiosResponse<sdk.ObjectMappingBulkPatchResponseV2025, any>>;\r\n}\r\nupdateScheduledAction(requestParameters: sdk.ConfigurationHubV2025ApiUpdateScheduledActionRequest): Promise<AxiosResponse<sdk.ScheduledActionResponseV2025, any>> {\r\n    return this.electronAPI.updateScheduledAction(requestParameters) as Promise<AxiosResponse<sdk.ScheduledActionResponseV2025, any>>;\r\n}\r\n\r\ncreateConnectorCustomizer(requestParameters: sdk.ConnectorCustomizersV2025ApiCreateConnectorCustomizerRequest): Promise<AxiosResponse<sdk.ConnectorCustomizerCreateResponseV2025, any>> {\r\n    return this.electronAPI.createConnectorCustomizer(requestParameters) as Promise<AxiosResponse<sdk.ConnectorCustomizerCreateResponseV2025, any>>;\r\n}\r\ncreateConnectorCustomizerVersion(requestParameters: sdk.ConnectorCustomizersV2025ApiCreateConnectorCustomizerVersionRequest): Promise<AxiosResponse<sdk.ConnectorCustomizerVersionCreateResponseV2025, any>> {\r\n    return this.electronAPI.createConnectorCustomizerVersion(requestParameters) as Promise<AxiosResponse<sdk.ConnectorCustomizerVersionCreateResponseV2025, any>>;\r\n}\r\ndeleteConnectorCustomizer(requestParameters: sdk.ConnectorCustomizersV2025ApiDeleteConnectorCustomizerRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteConnectorCustomizer(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetConnectorCustomizer(requestParameters: sdk.ConnectorCustomizersV2025ApiGetConnectorCustomizerRequest): Promise<AxiosResponse<sdk.ConnectorCustomizersResponseV2025, any>> {\r\n    return this.electronAPI.getConnectorCustomizer(requestParameters) as Promise<AxiosResponse<sdk.ConnectorCustomizersResponseV2025, any>>;\r\n}\r\nlistConnectorCustomizers(requestParameters: sdk.ConnectorCustomizersV2025ApiListConnectorCustomizersRequest = {}): Promise<AxiosResponse<Array<sdk.ConnectorCustomizersResponseV2025>, any>> {\r\n    return this.electronAPI.listConnectorCustomizers(requestParameters) as Promise<AxiosResponse<Array<sdk.ConnectorCustomizersResponseV2025>, any>>;\r\n}\r\nputConnectorCustomizer(requestParameters: sdk.ConnectorCustomizersV2025ApiPutConnectorCustomizerRequest): Promise<AxiosResponse<sdk.ConnectorCustomizerUpdateResponseV2025, any>> {\r\n    return this.electronAPI.putConnectorCustomizer(requestParameters) as Promise<AxiosResponse<sdk.ConnectorCustomizerUpdateResponseV2025, any>>;\r\n}\r\n\r\ncreateConnectorRule(requestParameters: sdk.ConnectorRuleManagementV2025ApiCreateConnectorRuleRequest): Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>> {\r\n    return this.electronAPI.createConnectorRule(requestParameters) as Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>>;\r\n}\r\ndeleteConnectorRule(requestParameters: sdk.ConnectorRuleManagementV2025ApiDeleteConnectorRuleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteConnectorRule(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetConnectorRule(requestParameters: sdk.ConnectorRuleManagementV2025ApiGetConnectorRuleRequest): Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>> {\r\n    return this.electronAPI.getConnectorRule(requestParameters) as Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>>;\r\n}\r\ngetConnectorRuleList(requestParameters: sdk.ConnectorRuleManagementV2025ApiGetConnectorRuleListRequest = {}): Promise<AxiosResponse<Array<sdk.ConnectorRuleResponseV2025>, any>> {\r\n    return this.electronAPI.getConnectorRuleList(requestParameters) as Promise<AxiosResponse<Array<sdk.ConnectorRuleResponseV2025>, any>>;\r\n}\r\nputConnectorRule(requestParameters: sdk.ConnectorRuleManagementV2025ApiPutConnectorRuleRequest): Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>> {\r\n    return this.electronAPI.putConnectorRule(requestParameters) as Promise<AxiosResponse<sdk.ConnectorRuleResponseV2025, any>>;\r\n}\r\ntestConnectorRule(requestParameters: sdk.ConnectorRuleManagementV2025ApiTestConnectorRuleRequest): Promise<AxiosResponse<sdk.ConnectorRuleValidationResponseV2025, any>> {\r\n    return this.electronAPI.testConnectorRule(requestParameters) as Promise<AxiosResponse<sdk.ConnectorRuleValidationResponseV2025, any>>;\r\n}\r\n\r\ncreateCustomConnector(requestParameters: sdk.ConnectorsV2025ApiCreateCustomConnectorRequest): Promise<AxiosResponse<sdk.V3ConnectorDtoV2025, any>> {\r\n    return this.electronAPI.createCustomConnector(requestParameters) as Promise<AxiosResponse<sdk.V3ConnectorDtoV2025, any>>;\r\n}\r\ndeleteCustomConnector(requestParameters: sdk.ConnectorsV2025ApiDeleteCustomConnectorRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteCustomConnector(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetConnector(requestParameters: sdk.ConnectorsV2025ApiGetConnectorRequest): Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>> {\r\n    return this.electronAPI.getConnector(requestParameters) as Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>>;\r\n}\r\ngetConnectorCorrelationConfig(requestParameters: sdk.ConnectorsV2025ApiGetConnectorCorrelationConfigRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getConnectorCorrelationConfig(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\ngetConnectorList(requestParameters: sdk.ConnectorsV2025ApiGetConnectorListRequest = {}): Promise<AxiosResponse<Array<sdk.V3ConnectorDtoV2025>, any>> {\r\n    return this.electronAPI.getConnectorList(requestParameters) as Promise<AxiosResponse<Array<sdk.V3ConnectorDtoV2025>, any>>;\r\n}\r\ngetConnectorSourceConfig(requestParameters: sdk.ConnectorsV2025ApiGetConnectorSourceConfigRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getConnectorSourceConfig(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\ngetConnectorSourceTemplate(requestParameters: sdk.ConnectorsV2025ApiGetConnectorSourceTemplateRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getConnectorSourceTemplate(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\ngetConnectorTranslations(requestParameters: sdk.ConnectorsV2025ApiGetConnectorTranslationsRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getConnectorTranslations(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\nputConnectorCorrelationConfig(requestParameters: sdk.ConnectorsV2025ApiPutConnectorCorrelationConfigRequest): Promise<AxiosResponse<sdk.UpdateDetailV2025, any>> {\r\n    return this.electronAPI.putConnectorCorrelationConfig(requestParameters) as Promise<AxiosResponse<sdk.UpdateDetailV2025, any>>;\r\n}\r\nputConnectorSourceConfig(requestParameters: sdk.ConnectorsV2025ApiPutConnectorSourceConfigRequest): Promise<AxiosResponse<sdk.UpdateDetailV2025, any>> {\r\n    return this.electronAPI.putConnectorSourceConfig(requestParameters) as Promise<AxiosResponse<sdk.UpdateDetailV2025, any>>;\r\n}\r\nputConnectorSourceTemplate(requestParameters: sdk.ConnectorsV2025ApiPutConnectorSourceTemplateRequest): Promise<AxiosResponse<sdk.UpdateDetailV2025, any>> {\r\n    return this.electronAPI.putConnectorSourceTemplate(requestParameters) as Promise<AxiosResponse<sdk.UpdateDetailV2025, any>>;\r\n}\r\nputConnectorTranslations(requestParameters: sdk.ConnectorsV2025ApiPutConnectorTranslationsRequest): Promise<AxiosResponse<sdk.UpdateDetailV2025, any>> {\r\n    return this.electronAPI.putConnectorTranslations(requestParameters) as Promise<AxiosResponse<sdk.UpdateDetailV2025, any>>;\r\n}\r\nupdateConnector(requestParameters: sdk.ConnectorsV2025ApiUpdateConnectorRequest): Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>> {\r\n    return this.electronAPI.updateConnector(requestParameters) as Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>>;\r\n}\r\n\r\ncreateFormDefinition(requestParameters: sdk.CustomFormsV2025ApiCreateFormDefinitionRequest = {}): Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>> {\r\n    return this.electronAPI.createFormDefinition(requestParameters) as Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>>;\r\n}\r\ncreateFormDefinitionDynamicSchema(requestParameters: sdk.CustomFormsV2025ApiCreateFormDefinitionDynamicSchemaRequest = {}): Promise<AxiosResponse<sdk.FormDefinitionDynamicSchemaResponseV2025, any>> {\r\n    return this.electronAPI.createFormDefinitionDynamicSchema(requestParameters) as Promise<AxiosResponse<sdk.FormDefinitionDynamicSchemaResponseV2025, any>>;\r\n}\r\ncreateFormDefinitionFileRequest(requestParameters: sdk.CustomFormsV2025ApiCreateFormDefinitionFileRequestRequest): Promise<AxiosResponse<sdk.FormDefinitionFileUploadResponseV2025, any>> {\r\n    return this.electronAPI.createFormDefinitionFileRequest(requestParameters) as Promise<AxiosResponse<sdk.FormDefinitionFileUploadResponseV2025, any>>;\r\n}\r\ncreateFormInstance(requestParameters: sdk.CustomFormsV2025ApiCreateFormInstanceRequest = {}): Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>> {\r\n    return this.electronAPI.createFormInstance(requestParameters) as Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>>;\r\n}\r\ndeleteFormDefinition(requestParameters: sdk.CustomFormsV2025ApiDeleteFormDefinitionRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.deleteFormDefinition(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nexportFormDefinitionsByTenant(requestParameters: sdk.CustomFormsV2025ApiExportFormDefinitionsByTenantRequest = {}): Promise<AxiosResponse<Array<sdk.ExportFormDefinitionsByTenant200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.exportFormDefinitionsByTenant(requestParameters) as Promise<AxiosResponse<Array<sdk.ExportFormDefinitionsByTenant200ResponseInnerV2025>, any>>;\r\n}\r\ngetFileFromS3(requestParameters: sdk.CustomFormsV2025ApiGetFileFromS3Request): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.getFileFromS3(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\ngetFormDefinitionByKey(requestParameters: sdk.CustomFormsV2025ApiGetFormDefinitionByKeyRequest): Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>> {\r\n    return this.electronAPI.getFormDefinitionByKey(requestParameters) as Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>>;\r\n}\r\ngetFormInstanceByKey(requestParameters: sdk.CustomFormsV2025ApiGetFormInstanceByKeyRequest): Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>> {\r\n    return this.electronAPI.getFormInstanceByKey(requestParameters) as Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>>;\r\n}\r\ngetFormInstanceFile(requestParameters: sdk.CustomFormsV2025ApiGetFormInstanceFileRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.getFormInstanceFile(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\nimportFormDefinitions(requestParameters: sdk.CustomFormsV2025ApiImportFormDefinitionsRequest = {}): Promise<AxiosResponse<sdk.ImportFormDefinitions202ResponseV2025, any>> {\r\n    return this.electronAPI.importFormDefinitions(requestParameters) as Promise<AxiosResponse<sdk.ImportFormDefinitions202ResponseV2025, any>>;\r\n}\r\npatchFormDefinition(requestParameters: sdk.CustomFormsV2025ApiPatchFormDefinitionRequest): Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>> {\r\n    return this.electronAPI.patchFormDefinition(requestParameters) as Promise<AxiosResponse<sdk.FormDefinitionResponseV2025, any>>;\r\n}\r\npatchFormInstance(requestParameters: sdk.CustomFormsV2025ApiPatchFormInstanceRequest): Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>> {\r\n    return this.electronAPI.patchFormInstance(requestParameters) as Promise<AxiosResponse<sdk.FormInstanceResponseV2025, any>>;\r\n}\r\nsearchFormDefinitionsByTenant(requestParameters: sdk.CustomFormsV2025ApiSearchFormDefinitionsByTenantRequest = {}): Promise<AxiosResponse<sdk.ListFormDefinitionsByTenantResponseV2025, any>> {\r\n    return this.electronAPI.searchFormDefinitionsByTenant(requestParameters) as Promise<AxiosResponse<sdk.ListFormDefinitionsByTenantResponseV2025, any>>;\r\n}\r\nsearchFormElementDataByElementID(requestParameters: sdk.CustomFormsV2025ApiSearchFormElementDataByElementIDRequest): Promise<AxiosResponse<sdk.ListFormElementDataByElementIDResponseV2025, any>> {\r\n    return this.electronAPI.searchFormElementDataByElementID(requestParameters) as Promise<AxiosResponse<sdk.ListFormElementDataByElementIDResponseV2025, any>>;\r\n}\r\nsearchFormInstancesByTenant(): Promise<AxiosResponse<Array<sdk.ListFormInstancesByTenantResponseV2025>, any>> {\r\n    return this.electronAPI.searchFormInstancesByTenant() as Promise<AxiosResponse<Array<sdk.ListFormInstancesByTenantResponseV2025>, any>>;\r\n}\r\nsearchPreDefinedSelectOptions(): Promise<AxiosResponse<sdk.ListPredefinedSelectOptionsResponseV2025, any>> {\r\n    return this.electronAPI.searchPreDefinedSelectOptions() as Promise<AxiosResponse<sdk.ListPredefinedSelectOptionsResponseV2025, any>>;\r\n}\r\nshowPreviewDataSource(requestParameters: sdk.CustomFormsV2025ApiShowPreviewDataSourceRequest): Promise<AxiosResponse<sdk.PreviewDataSourceResponseV2025, any>> {\r\n    return this.electronAPI.showPreviewDataSource(requestParameters) as Promise<AxiosResponse<sdk.PreviewDataSourceResponseV2025, any>>;\r\n}\r\n\r\ncreateCustomPasswordInstructions(requestParameters: sdk.CustomPasswordInstructionsV2025ApiCreateCustomPasswordInstructionsRequest): Promise<AxiosResponse<sdk.CustomPasswordInstructionV2025, any>> {\r\n    return this.electronAPI.createCustomPasswordInstructions(requestParameters) as Promise<AxiosResponse<sdk.CustomPasswordInstructionV2025, any>>;\r\n}\r\ndeleteCustomPasswordInstructions(requestParameters: sdk.CustomPasswordInstructionsV2025ApiDeleteCustomPasswordInstructionsRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteCustomPasswordInstructions(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetCustomPasswordInstructions(requestParameters: sdk.CustomPasswordInstructionsV2025ApiGetCustomPasswordInstructionsRequest): Promise<AxiosResponse<sdk.CustomPasswordInstructionV2025, any>> {\r\n    return this.electronAPI.getCustomPasswordInstructions(requestParameters) as Promise<AxiosResponse<sdk.CustomPasswordInstructionV2025, any>>;\r\n}\r\n\r\ncreateDataSegment(requestParameters: sdk.DataSegmentationV2025ApiCreateDataSegmentRequest): Promise<AxiosResponse<sdk.DataSegmentV2025, any>> {\r\n    return this.electronAPI.createDataSegment(requestParameters) as Promise<AxiosResponse<sdk.DataSegmentV2025, any>>;\r\n}\r\ndeleteDataSegment(requestParameters: sdk.DataSegmentationV2025ApiDeleteDataSegmentRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteDataSegment(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetDataSegment(requestParameters: sdk.DataSegmentationV2025ApiGetDataSegmentRequest): Promise<AxiosResponse<sdk.DataSegmentV2025, any>> {\r\n    return this.electronAPI.getDataSegment(requestParameters) as Promise<AxiosResponse<sdk.DataSegmentV2025, any>>;\r\n}\r\ngetDataSegmentIdentityMembership(requestParameters: sdk.DataSegmentationV2025ApiGetDataSegmentIdentityMembershipRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.getDataSegmentIdentityMembership(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ngetDataSegmentationEnabledForUser(requestParameters: sdk.DataSegmentationV2025ApiGetDataSegmentationEnabledForUserRequest): Promise<AxiosResponse<boolean, any>> {\r\n    return this.electronAPI.getDataSegmentationEnabledForUser(requestParameters) as Promise<AxiosResponse<boolean, any>>;\r\n}\r\nlistDataSegments(requestParameters: sdk.DataSegmentationV2025ApiListDataSegmentsRequest = {}): Promise<AxiosResponse<Array<sdk.DataSegmentV2025>, any>> {\r\n    return this.electronAPI.listDataSegments(requestParameters) as Promise<AxiosResponse<Array<sdk.DataSegmentV2025>, any>>;\r\n}\r\npatchDataSegment(requestParameters: sdk.DataSegmentationV2025ApiPatchDataSegmentRequest): Promise<AxiosResponse<sdk.DataSegmentV2025, any>> {\r\n    return this.electronAPI.patchDataSegment(requestParameters) as Promise<AxiosResponse<sdk.DataSegmentV2025, any>>;\r\n}\r\npublishDataSegment(requestParameters: sdk.DataSegmentationV2025ApiPublishDataSegmentRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.publishDataSegment(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ncreateDimension(requestParameters: sdk.DimensionsV2025ApiCreateDimensionRequest): Promise<AxiosResponse<sdk.DimensionV2025, any>> {\r\n    return this.electronAPI.createDimension(requestParameters) as Promise<AxiosResponse<sdk.DimensionV2025, any>>;\r\n}\r\ndeleteBulkDimensions(requestParameters: sdk.DimensionsV2025ApiDeleteBulkDimensionsRequest): Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>> {\r\n    return this.electronAPI.deleteBulkDimensions(requestParameters) as Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>>;\r\n}\r\ndeleteDimension(requestParameters: sdk.DimensionsV2025ApiDeleteDimensionRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteDimension(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetDimension(requestParameters: sdk.DimensionsV2025ApiGetDimensionRequest): Promise<AxiosResponse<sdk.DimensionV2025, any>> {\r\n    return this.electronAPI.getDimension(requestParameters) as Promise<AxiosResponse<sdk.DimensionV2025, any>>;\r\n}\r\ngetDimensionEntitlements(requestParameters: sdk.DimensionsV2025ApiGetDimensionEntitlementsRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.getDimensionEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistDimensionAccessProfiles(requestParameters: sdk.DimensionsV2025ApiListDimensionAccessProfilesRequest): Promise<AxiosResponse<Array<sdk.AccessProfileV2025>, any>> {\r\n    return this.electronAPI.listDimensionAccessProfiles(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessProfileV2025>, any>>;\r\n}\r\nlistDimensions(requestParameters: sdk.DimensionsV2025ApiListDimensionsRequest): Promise<AxiosResponse<Array<sdk.DimensionV2025>, any>> {\r\n    return this.electronAPI.listDimensions(requestParameters) as Promise<AxiosResponse<Array<sdk.DimensionV2025>, any>>;\r\n}\r\npatchDimension(requestParameters: sdk.DimensionsV2025ApiPatchDimensionRequest): Promise<AxiosResponse<sdk.DimensionV2025, any>> {\r\n    return this.electronAPI.patchDimension(requestParameters) as Promise<AxiosResponse<sdk.DimensionV2025, any>>;\r\n}\r\n\r\ncreateAccessModelMetadataForEntitlement(requestParameters: sdk.EntitlementsV2025ApiCreateAccessModelMetadataForEntitlementRequest): Promise<AxiosResponse<sdk.EntitlementV2025, any>> {\r\n    return this.electronAPI.createAccessModelMetadataForEntitlement(requestParameters) as Promise<AxiosResponse<sdk.EntitlementV2025, any>>;\r\n}\r\ndeleteAccessModelMetadataFromEntitlement(requestParameters: sdk.EntitlementsV2025ApiDeleteAccessModelMetadataFromEntitlementRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteAccessModelMetadataFromEntitlement(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetEntitlement(requestParameters: sdk.EntitlementsV2025ApiGetEntitlementRequest): Promise<AxiosResponse<sdk.EntitlementV2025, any>> {\r\n    return this.electronAPI.getEntitlement(requestParameters) as Promise<AxiosResponse<sdk.EntitlementV2025, any>>;\r\n}\r\ngetEntitlementRequestConfig(requestParameters: sdk.EntitlementsV2025ApiGetEntitlementRequestConfigRequest): Promise<AxiosResponse<sdk.EntitlementRequestConfigV2025, any>> {\r\n    return this.electronAPI.getEntitlementRequestConfig(requestParameters) as Promise<AxiosResponse<sdk.EntitlementRequestConfigV2025, any>>;\r\n}\r\nimportEntitlementsBySource(requestParameters: sdk.EntitlementsV2025ApiImportEntitlementsBySourceRequest): Promise<AxiosResponse<sdk.LoadEntitlementTaskV2025, any>> {\r\n    return this.electronAPI.importEntitlementsBySource(requestParameters) as Promise<AxiosResponse<sdk.LoadEntitlementTaskV2025, any>>;\r\n}\r\nlistEntitlementChildren(requestParameters: sdk.EntitlementsV2025ApiListEntitlementChildrenRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.listEntitlementChildren(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistEntitlementParents(requestParameters: sdk.EntitlementsV2025ApiListEntitlementParentsRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.listEntitlementParents(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistEntitlements(requestParameters: sdk.EntitlementsV2025ApiListEntitlementsRequest = {}): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.listEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\npatchEntitlement(requestParameters: sdk.EntitlementsV2025ApiPatchEntitlementRequest): Promise<AxiosResponse<sdk.EntitlementV2025, any>> {\r\n    return this.electronAPI.patchEntitlement(requestParameters) as Promise<AxiosResponse<sdk.EntitlementV2025, any>>;\r\n}\r\nputEntitlementRequestConfig(requestParameters: sdk.EntitlementsV2025ApiPutEntitlementRequestConfigRequest): Promise<AxiosResponse<sdk.EntitlementRequestConfigV2025, any>> {\r\n    return this.electronAPI.putEntitlementRequestConfig(requestParameters) as Promise<AxiosResponse<sdk.EntitlementRequestConfigV2025, any>>;\r\n}\r\nresetSourceEntitlements(requestParameters: sdk.EntitlementsV2025ApiResetSourceEntitlementsRequest): Promise<AxiosResponse<sdk.EntitlementSourceResetBaseReferenceDtoV2025, any>> {\r\n    return this.electronAPI.resetSourceEntitlements(requestParameters) as Promise<AxiosResponse<sdk.EntitlementSourceResetBaseReferenceDtoV2025, any>>;\r\n}\r\nupdateEntitlementsInBulk(requestParameters: sdk.EntitlementsV2025ApiUpdateEntitlementsInBulkRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.updateEntitlementsInBulk(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ncreateAuthOrgNetworkConfig(requestParameters: sdk.GlobalTenantSecuritySettingsV2025ApiCreateAuthOrgNetworkConfigRequest): Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>> {\r\n    return this.electronAPI.createAuthOrgNetworkConfig(requestParameters) as Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>>;\r\n}\r\ngetAuthOrgLockoutConfig(): Promise<AxiosResponse<sdk.LockoutConfigurationV2025, any>> {\r\n    return this.electronAPI.getAuthOrgLockoutConfig() as Promise<AxiosResponse<sdk.LockoutConfigurationV2025, any>>;\r\n}\r\ngetAuthOrgNetworkConfig(): Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>> {\r\n    return this.electronAPI.getAuthOrgNetworkConfig() as Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>>;\r\n}\r\ngetAuthOrgServiceProviderConfig(): Promise<AxiosResponse<sdk.ServiceProviderConfigurationV2025, any>> {\r\n    return this.electronAPI.getAuthOrgServiceProviderConfig() as Promise<AxiosResponse<sdk.ServiceProviderConfigurationV2025, any>>;\r\n}\r\ngetAuthOrgSessionConfig(): Promise<AxiosResponse<sdk.SessionConfigurationV2025, any>> {\r\n    return this.electronAPI.getAuthOrgSessionConfig() as Promise<AxiosResponse<sdk.SessionConfigurationV2025, any>>;\r\n}\r\npatchAuthOrgLockoutConfig(requestParameters: sdk.GlobalTenantSecuritySettingsV2025ApiPatchAuthOrgLockoutConfigRequest): Promise<AxiosResponse<sdk.LockoutConfigurationV2025, any>> {\r\n    return this.electronAPI.patchAuthOrgLockoutConfig(requestParameters) as Promise<AxiosResponse<sdk.LockoutConfigurationV2025, any>>;\r\n}\r\npatchAuthOrgNetworkConfig(requestParameters: sdk.GlobalTenantSecuritySettingsV2025ApiPatchAuthOrgNetworkConfigRequest): Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>> {\r\n    return this.electronAPI.patchAuthOrgNetworkConfig(requestParameters) as Promise<AxiosResponse<sdk.NetworkConfigurationV2025, any>>;\r\n}\r\npatchAuthOrgServiceProviderConfig(requestParameters: sdk.GlobalTenantSecuritySettingsV2025ApiPatchAuthOrgServiceProviderConfigRequest): Promise<AxiosResponse<sdk.ServiceProviderConfigurationV2025, any>> {\r\n    return this.electronAPI.patchAuthOrgServiceProviderConfig(requestParameters) as Promise<AxiosResponse<sdk.ServiceProviderConfigurationV2025, any>>;\r\n}\r\npatchAuthOrgSessionConfig(requestParameters: sdk.GlobalTenantSecuritySettingsV2025ApiPatchAuthOrgSessionConfigRequest): Promise<AxiosResponse<sdk.SessionConfigurationV2025, any>> {\r\n    return this.electronAPI.patchAuthOrgSessionConfig(requestParameters) as Promise<AxiosResponse<sdk.SessionConfigurationV2025, any>>;\r\n}\r\n\r\ncreateWorkgroup(requestParameters: sdk.GovernanceGroupsV2025ApiCreateWorkgroupRequest): Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>> {\r\n    return this.electronAPI.createWorkgroup(requestParameters) as Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>>;\r\n}\r\ndeleteWorkgroup(requestParameters: sdk.GovernanceGroupsV2025ApiDeleteWorkgroupRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteWorkgroup(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteWorkgroupMembers(requestParameters: sdk.GovernanceGroupsV2025ApiDeleteWorkgroupMembersRequest): Promise<AxiosResponse<Array<sdk.WorkgroupMemberDeleteItemV2025>, any>> {\r\n    return this.electronAPI.deleteWorkgroupMembers(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkgroupMemberDeleteItemV2025>, any>>;\r\n}\r\ndeleteWorkgroupsInBulk(requestParameters: sdk.GovernanceGroupsV2025ApiDeleteWorkgroupsInBulkRequest): Promise<AxiosResponse<Array<sdk.WorkgroupDeleteItemV2025>, any>> {\r\n    return this.electronAPI.deleteWorkgroupsInBulk(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkgroupDeleteItemV2025>, any>>;\r\n}\r\ngetWorkgroup(requestParameters: sdk.GovernanceGroupsV2025ApiGetWorkgroupRequest): Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>> {\r\n    return this.electronAPI.getWorkgroup(requestParameters) as Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>>;\r\n}\r\nlistConnections(requestParameters: sdk.GovernanceGroupsV2025ApiListConnectionsRequest): Promise<AxiosResponse<Array<sdk.WorkgroupConnectionDtoV2025>, any>> {\r\n    return this.electronAPI.listConnections(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkgroupConnectionDtoV2025>, any>>;\r\n}\r\nlistWorkgroupMembers(requestParameters: sdk.GovernanceGroupsV2025ApiListWorkgroupMembersRequest): Promise<AxiosResponse<Array<sdk.ListWorkgroupMembers200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.listWorkgroupMembers(requestParameters) as Promise<AxiosResponse<Array<sdk.ListWorkgroupMembers200ResponseInnerV2025>, any>>;\r\n}\r\nlistWorkgroups(requestParameters: sdk.GovernanceGroupsV2025ApiListWorkgroupsRequest = {}): Promise<AxiosResponse<Array<sdk.WorkgroupDtoV2025>, any>> {\r\n    return this.electronAPI.listWorkgroups(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkgroupDtoV2025>, any>>;\r\n}\r\npatchWorkgroup(requestParameters: sdk.GovernanceGroupsV2025ApiPatchWorkgroupRequest): Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>> {\r\n    return this.electronAPI.patchWorkgroup(requestParameters) as Promise<AxiosResponse<sdk.WorkgroupDtoV2025, any>>;\r\n}\r\nupdateWorkgroupMembers(requestParameters: sdk.GovernanceGroupsV2025ApiUpdateWorkgroupMembersRequest): Promise<AxiosResponse<Array<sdk.WorkgroupMemberAddItemV2025>, any>> {\r\n    return this.electronAPI.updateWorkgroupMembers(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkgroupMemberAddItemV2025>, any>>;\r\n}\r\n\r\naddAccessRequestRecommendationsIgnoredItem(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiAddAccessRequestRecommendationsIgnoredItemRequest): Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>> {\r\n    return this.electronAPI.addAccessRequestRecommendationsIgnoredItem(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>>;\r\n}\r\naddAccessRequestRecommendationsRequestedItem(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiAddAccessRequestRecommendationsRequestedItemRequest): Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>> {\r\n    return this.electronAPI.addAccessRequestRecommendationsRequestedItem(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>>;\r\n}\r\naddAccessRequestRecommendationsViewedItem(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiAddAccessRequestRecommendationsViewedItemRequest): Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>> {\r\n    return this.electronAPI.addAccessRequestRecommendationsViewedItem(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestRecommendationActionItemResponseDtoV2025, any>>;\r\n}\r\naddAccessRequestRecommendationsViewedItems(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiAddAccessRequestRecommendationsViewedItemsRequest): Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>> {\r\n    return this.electronAPI.addAccessRequestRecommendationsViewedItems(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>>;\r\n}\r\ngetAccessRequestRecommendations(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiGetAccessRequestRecommendationsRequest = {}): Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationItemDetailV2025>, any>> {\r\n    return this.electronAPI.getAccessRequestRecommendations(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationItemDetailV2025>, any>>;\r\n}\r\ngetAccessRequestRecommendationsConfig(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiGetAccessRequestRecommendationsConfigRequest = {}): Promise<AxiosResponse<sdk.AccessRequestRecommendationConfigDtoV2025, any>> {\r\n    return this.electronAPI.getAccessRequestRecommendationsConfig(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestRecommendationConfigDtoV2025, any>>;\r\n}\r\ngetAccessRequestRecommendationsIgnoredItems(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiGetAccessRequestRecommendationsIgnoredItemsRequest): Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>> {\r\n    return this.electronAPI.getAccessRequestRecommendationsIgnoredItems(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>>;\r\n}\r\ngetAccessRequestRecommendationsRequestedItems(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiGetAccessRequestRecommendationsRequestedItemsRequest): Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>> {\r\n    return this.electronAPI.getAccessRequestRecommendationsRequestedItems(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>>;\r\n}\r\ngetAccessRequestRecommendationsViewedItems(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiGetAccessRequestRecommendationsViewedItemsRequest): Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>> {\r\n    return this.electronAPI.getAccessRequestRecommendationsViewedItems(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessRequestRecommendationActionItemResponseDtoV2025>, any>>;\r\n}\r\nsetAccessRequestRecommendationsConfig(requestParameters: sdk.IAIAccessRequestRecommendationsV2025ApiSetAccessRequestRecommendationsConfigRequest): Promise<AxiosResponse<sdk.AccessRequestRecommendationConfigDtoV2025, any>> {\r\n    return this.electronAPI.setAccessRequestRecommendationsConfig(requestParameters) as Promise<AxiosResponse<sdk.AccessRequestRecommendationConfigDtoV2025, any>>;\r\n}\r\n\r\ncreateCommonAccess(requestParameters: sdk.IAICommonAccessV2025ApiCreateCommonAccessRequest): Promise<AxiosResponse<sdk.CommonAccessItemResponseV2025, any>> {\r\n    return this.electronAPI.createCommonAccess(requestParameters) as Promise<AxiosResponse<sdk.CommonAccessItemResponseV2025, any>>;\r\n}\r\ngetCommonAccess(requestParameters: sdk.IAICommonAccessV2025ApiGetCommonAccessRequest = {}): Promise<AxiosResponse<Array<sdk.CommonAccessResponseV2025>, any>> {\r\n    return this.electronAPI.getCommonAccess(requestParameters) as Promise<AxiosResponse<Array<sdk.CommonAccessResponseV2025>, any>>;\r\n}\r\nupdateCommonAccessStatusInBulk(requestParameters: sdk.IAICommonAccessV2025ApiUpdateCommonAccessStatusInBulkRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.updateCommonAccessStatusInBulk(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\n\r\nexportOutliersZip(requestParameters: sdk.IAIOutliersV2025ApiExportOutliersZipRequest = {}): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.exportOutliersZip(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\ngetIdentityOutlierSnapshots(requestParameters: sdk.IAIOutliersV2025ApiGetIdentityOutlierSnapshotsRequest = {}): Promise<AxiosResponse<Array<sdk.OutlierSummaryV2025>, any>> {\r\n    return this.electronAPI.getIdentityOutlierSnapshots(requestParameters) as Promise<AxiosResponse<Array<sdk.OutlierSummaryV2025>, any>>;\r\n}\r\ngetIdentityOutliers(requestParameters: sdk.IAIOutliersV2025ApiGetIdentityOutliersRequest = {}): Promise<AxiosResponse<Array<sdk.OutlierV2025>, any>> {\r\n    return this.electronAPI.getIdentityOutliers(requestParameters) as Promise<AxiosResponse<Array<sdk.OutlierV2025>, any>>;\r\n}\r\ngetLatestIdentityOutlierSnapshots(requestParameters: sdk.IAIOutliersV2025ApiGetLatestIdentityOutlierSnapshotsRequest = {}): Promise<AxiosResponse<Array<sdk.LatestOutlierSummaryV2025>, any>> {\r\n    return this.electronAPI.getLatestIdentityOutlierSnapshots(requestParameters) as Promise<AxiosResponse<Array<sdk.LatestOutlierSummaryV2025>, any>>;\r\n}\r\ngetOutlierContributingFeatureSummary(requestParameters: sdk.IAIOutliersV2025ApiGetOutlierContributingFeatureSummaryRequest): Promise<AxiosResponse<sdk.OutlierFeatureSummaryV2025, any>> {\r\n    return this.electronAPI.getOutlierContributingFeatureSummary(requestParameters) as Promise<AxiosResponse<sdk.OutlierFeatureSummaryV2025, any>>;\r\n}\r\ngetPeerGroupOutliersContributingFeatures(requestParameters: sdk.IAIOutliersV2025ApiGetPeerGroupOutliersContributingFeaturesRequest): Promise<AxiosResponse<Array<sdk.OutlierContributingFeatureV2025>, any>> {\r\n    return this.electronAPI.getPeerGroupOutliersContributingFeatures(requestParameters) as Promise<AxiosResponse<Array<sdk.OutlierContributingFeatureV2025>, any>>;\r\n}\r\nignoreIdentityOutliers(requestParameters: sdk.IAIOutliersV2025ApiIgnoreIdentityOutliersRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.ignoreIdentityOutliers(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nlistOutliersContributingFeatureAccessItems(requestParameters: sdk.IAIOutliersV2025ApiListOutliersContributingFeatureAccessItemsRequest): Promise<AxiosResponse<Array<sdk.OutliersContributingFeatureAccessItemsV2025>, any>> {\r\n    return this.electronAPI.listOutliersContributingFeatureAccessItems(requestParameters) as Promise<AxiosResponse<Array<sdk.OutliersContributingFeatureAccessItemsV2025>, any>>;\r\n}\r\nunIgnoreIdentityOutliers(requestParameters: sdk.IAIOutliersV2025ApiUnIgnoreIdentityOutliersRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.unIgnoreIdentityOutliers(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ngetPeerGroupOutliers(requestParameters: sdk.IAIPeerGroupStrategiesV2025ApiGetPeerGroupOutliersRequest): Promise<AxiosResponse<Array<sdk.PeerGroupMemberV2025>, any>> {\r\n    return this.electronAPI.getPeerGroupOutliers(requestParameters) as Promise<AxiosResponse<Array<sdk.PeerGroupMemberV2025>, any>>;\r\n}\r\n\r\ngetRecommendations(requestParameters: sdk.IAIRecommendationsV2025ApiGetRecommendationsRequest): Promise<AxiosResponse<sdk.RecommendationResponseDtoV2025, any>> {\r\n    return this.electronAPI.getRecommendations(requestParameters) as Promise<AxiosResponse<sdk.RecommendationResponseDtoV2025, any>>;\r\n}\r\ngetRecommendationsConfig(requestParameters: sdk.IAIRecommendationsV2025ApiGetRecommendationsConfigRequest = {}): Promise<AxiosResponse<sdk.RecommendationConfigDtoV2025, any>> {\r\n    return this.electronAPI.getRecommendationsConfig(requestParameters) as Promise<AxiosResponse<sdk.RecommendationConfigDtoV2025, any>>;\r\n}\r\nupdateRecommendationsConfig(requestParameters: sdk.IAIRecommendationsV2025ApiUpdateRecommendationsConfigRequest): Promise<AxiosResponse<sdk.RecommendationConfigDtoV2025, any>> {\r\n    return this.electronAPI.updateRecommendationsConfig(requestParameters) as Promise<AxiosResponse<sdk.RecommendationConfigDtoV2025, any>>;\r\n}\r\n\r\ncreatePotentialRoleProvisionRequest(requestParameters: sdk.IAIRoleMiningV2025ApiCreatePotentialRoleProvisionRequestRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleSummaryV2025, any>> {\r\n    return this.electronAPI.createPotentialRoleProvisionRequest(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleSummaryV2025, any>>;\r\n}\r\ncreateRoleMiningSessions(requestParameters: sdk.IAIRoleMiningV2025ApiCreateRoleMiningSessionsRequest): Promise<AxiosResponse<sdk.RoleMiningSessionResponseV2025, any>> {\r\n    return this.electronAPI.createRoleMiningSessions(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningSessionResponseV2025, any>>;\r\n}\r\ndownloadRoleMiningPotentialRoleZip(requestParameters: sdk.IAIRoleMiningV2025ApiDownloadRoleMiningPotentialRoleZipRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.downloadRoleMiningPotentialRoleZip(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\nexportRoleMiningPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiExportRoleMiningPotentialRoleRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.exportRoleMiningPotentialRole(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\nexportRoleMiningPotentialRoleAsync(requestParameters: sdk.IAIRoleMiningV2025ApiExportRoleMiningPotentialRoleAsyncRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleExportResponseV2025, any>> {\r\n    return this.electronAPI.exportRoleMiningPotentialRoleAsync(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleExportResponseV2025, any>>;\r\n}\r\nexportRoleMiningPotentialRoleStatus(requestParameters: sdk.IAIRoleMiningV2025ApiExportRoleMiningPotentialRoleStatusRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleExportResponseV2025, any>> {\r\n    return this.electronAPI.exportRoleMiningPotentialRoleStatus(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleExportResponseV2025, any>>;\r\n}\r\ngetAllPotentialRoleSummaries(requestParameters: sdk.IAIRoleMiningV2025ApiGetAllPotentialRoleSummariesRequest = {}): Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSummaryV2025>, any>> {\r\n    return this.electronAPI.getAllPotentialRoleSummaries(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSummaryV2025>, any>>;\r\n}\r\ngetEntitlementDistributionPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetEntitlementDistributionPotentialRoleRequest): Promise<AxiosResponse<{ [key: string]: number; }, any>> {\r\n    return this.electronAPI.getEntitlementDistributionPotentialRole(requestParameters) as Promise<AxiosResponse<{ [key: string]: number; }, any>>;\r\n}\r\ngetEntitlementsPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetEntitlementsPotentialRoleRequest): Promise<AxiosResponse<Array<sdk.RoleMiningEntitlementV2025>, any>> {\r\n    return this.electronAPI.getEntitlementsPotentialRole(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningEntitlementV2025>, any>>;\r\n}\r\ngetExcludedEntitlementsPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetExcludedEntitlementsPotentialRoleRequest): Promise<AxiosResponse<Array<sdk.RoleMiningEntitlementV2025>, any>> {\r\n    return this.electronAPI.getExcludedEntitlementsPotentialRole(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningEntitlementV2025>, any>>;\r\n}\r\ngetIdentitiesPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetIdentitiesPotentialRoleRequest): Promise<AxiosResponse<Array<sdk.RoleMiningIdentityV2025>, any>> {\r\n    return this.electronAPI.getIdentitiesPotentialRole(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningIdentityV2025>, any>>;\r\n}\r\ngetPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetPotentialRoleRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>> {\r\n    return this.electronAPI.getPotentialRole(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>>;\r\n}\r\ngetPotentialRoleApplications(requestParameters: sdk.IAIRoleMiningV2025ApiGetPotentialRoleApplicationsRequest): Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleApplicationV2025>, any>> {\r\n    return this.electronAPI.getPotentialRoleApplications(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleApplicationV2025>, any>>;\r\n}\r\ngetPotentialRoleEntitlements(requestParameters: sdk.IAIRoleMiningV2025ApiGetPotentialRoleEntitlementsRequest): Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleEntitlementsV2025>, any>> {\r\n    return this.electronAPI.getPotentialRoleEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleEntitlementsV2025>, any>>;\r\n}\r\ngetPotentialRoleSourceIdentityUsage(requestParameters: sdk.IAIRoleMiningV2025ApiGetPotentialRoleSourceIdentityUsageRequest): Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSourceUsageV2025>, any>> {\r\n    return this.electronAPI.getPotentialRoleSourceIdentityUsage(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSourceUsageV2025>, any>>;\r\n}\r\ngetPotentialRoleSummaries(requestParameters: sdk.IAIRoleMiningV2025ApiGetPotentialRoleSummariesRequest): Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSummaryV2025>, any>> {\r\n    return this.electronAPI.getPotentialRoleSummaries(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningPotentialRoleSummaryV2025>, any>>;\r\n}\r\ngetRoleMiningPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiGetRoleMiningPotentialRoleRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>> {\r\n    return this.electronAPI.getRoleMiningPotentialRole(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>>;\r\n}\r\ngetRoleMiningSession(requestParameters: sdk.IAIRoleMiningV2025ApiGetRoleMiningSessionRequest): Promise<AxiosResponse<sdk.RoleMiningSessionResponseV2025, any>> {\r\n    return this.electronAPI.getRoleMiningSession(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningSessionResponseV2025, any>>;\r\n}\r\ngetRoleMiningSessionStatus(requestParameters: sdk.IAIRoleMiningV2025ApiGetRoleMiningSessionStatusRequest): Promise<AxiosResponse<sdk.RoleMiningSessionStatusV2025, any>> {\r\n    return this.electronAPI.getRoleMiningSessionStatus(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningSessionStatusV2025, any>>;\r\n}\r\ngetRoleMiningSessions(requestParameters: sdk.IAIRoleMiningV2025ApiGetRoleMiningSessionsRequest): Promise<AxiosResponse<Array<sdk.RoleMiningSessionDtoV2025>, any>> {\r\n    return this.electronAPI.getRoleMiningSessions(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningSessionDtoV2025>, any>>;\r\n}\r\ngetSavedPotentialRoles(requestParameters: sdk.IAIRoleMiningV2025ApiGetSavedPotentialRolesRequest = {}): Promise<AxiosResponse<Array<sdk.RoleMiningSessionDraftRoleDtoV2025>, any>> {\r\n    return this.electronAPI.getSavedPotentialRoles(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleMiningSessionDraftRoleDtoV2025>, any>>;\r\n}\r\npatchPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiPatchPotentialRoleRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.patchPotentialRole(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\npatchPotentialRole_1(requestParameters: sdk.IAIRoleMiningV2025ApiPatchPotentialRole0Request): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.patchPotentialRole_1(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\npatchRoleMiningSession(requestParameters: sdk.IAIRoleMiningV2025ApiPatchRoleMiningSessionRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.patchRoleMiningSession(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nupdateEntitlementsPotentialRole(requestParameters: sdk.IAIRoleMiningV2025ApiUpdateEntitlementsPotentialRoleRequest): Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>> {\r\n    return this.electronAPI.updateEntitlementsPotentialRole(requestParameters) as Promise<AxiosResponse<sdk.RoleMiningPotentialRoleV2025, any>>;\r\n}\r\n\r\ndeleteIcon(requestParameters: sdk.IconsV2025ApiDeleteIconRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteIcon(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nsetIcon(requestParameters: sdk.IconsV2025ApiSetIconRequest): Promise<AxiosResponse<sdk.SetIcon200ResponseV2025, any>> {\r\n    return this.electronAPI.setIcon(requestParameters) as Promise<AxiosResponse<sdk.SetIcon200ResponseV2025, any>>;\r\n}\r\n\r\ndeleteIdentity(requestParameters: sdk.IdentitiesV2025ApiDeleteIdentityRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteIdentity(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetIdentity(requestParameters: sdk.IdentitiesV2025ApiGetIdentityRequest): Promise<AxiosResponse<sdk.IdentityV2025, any>> {\r\n    return this.electronAPI.getIdentity(requestParameters) as Promise<AxiosResponse<sdk.IdentityV2025, any>>;\r\n}\r\ngetIdentityOwnershipDetails(requestParameters: sdk.IdentitiesV2025ApiGetIdentityOwnershipDetailsRequest): Promise<AxiosResponse<sdk.IdentityOwnershipAssociationDetailsV2025, any>> {\r\n    return this.electronAPI.getIdentityOwnershipDetails(requestParameters) as Promise<AxiosResponse<sdk.IdentityOwnershipAssociationDetailsV2025, any>>;\r\n}\r\ngetRoleAssignment(requestParameters: sdk.IdentitiesV2025ApiGetRoleAssignmentRequest): Promise<AxiosResponse<sdk.RoleAssignmentDtoV2025, any>> {\r\n    return this.electronAPI.getRoleAssignment(requestParameters) as Promise<AxiosResponse<sdk.RoleAssignmentDtoV2025, any>>;\r\n}\r\ngetRoleAssignments(requestParameters: sdk.IdentitiesV2025ApiGetRoleAssignmentsRequest): Promise<AxiosResponse<Array<sdk.GetRoleAssignments200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.getRoleAssignments(requestParameters) as Promise<AxiosResponse<Array<sdk.GetRoleAssignments200ResponseInnerV2025>, any>>;\r\n}\r\nlistIdentities(requestParameters: sdk.IdentitiesV2025ApiListIdentitiesRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityV2025>, any>> {\r\n    return this.electronAPI.listIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityV2025>, any>>;\r\n}\r\nresetIdentity(requestParameters: sdk.IdentitiesV2025ApiResetIdentityRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.resetIdentity(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nsendIdentityVerificationAccountToken(requestParameters: sdk.IdentitiesV2025ApiSendIdentityVerificationAccountTokenRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.sendIdentityVerificationAccountToken(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nstartIdentitiesInvite(requestParameters: sdk.IdentitiesV2025ApiStartIdentitiesInviteRequest): Promise<AxiosResponse<sdk.TaskStatusV2025, any>> {\r\n    return this.electronAPI.startIdentitiesInvite(requestParameters) as Promise<AxiosResponse<sdk.TaskStatusV2025, any>>;\r\n}\r\nstartIdentityProcessing(requestParameters: sdk.IdentitiesV2025ApiStartIdentityProcessingRequest): Promise<AxiosResponse<sdk.TaskResultResponseV2025, any>> {\r\n    return this.electronAPI.startIdentityProcessing(requestParameters) as Promise<AxiosResponse<sdk.TaskResultResponseV2025, any>>;\r\n}\r\nsynchronizeAttributesForIdentity(requestParameters: sdk.IdentitiesV2025ApiSynchronizeAttributesForIdentityRequest): Promise<AxiosResponse<sdk.IdentitySyncJobV2025, any>> {\r\n    return this.electronAPI.synchronizeAttributesForIdentity(requestParameters) as Promise<AxiosResponse<sdk.IdentitySyncJobV2025, any>>;\r\n}\r\n\r\ncreateIdentityAttribute(requestParameters: sdk.IdentityAttributesV2025ApiCreateIdentityAttributeRequest): Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>> {\r\n    return this.electronAPI.createIdentityAttribute(requestParameters) as Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>>;\r\n}\r\ndeleteIdentityAttribute(requestParameters: sdk.IdentityAttributesV2025ApiDeleteIdentityAttributeRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteIdentityAttribute(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteIdentityAttributesInBulk(requestParameters: sdk.IdentityAttributesV2025ApiDeleteIdentityAttributesInBulkRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteIdentityAttributesInBulk(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetIdentityAttribute(requestParameters: sdk.IdentityAttributesV2025ApiGetIdentityAttributeRequest): Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>> {\r\n    return this.electronAPI.getIdentityAttribute(requestParameters) as Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>>;\r\n}\r\nlistIdentityAttributes(requestParameters: sdk.IdentityAttributesV2025ApiListIdentityAttributesRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityAttributeV2025>, any>> {\r\n    return this.electronAPI.listIdentityAttributes(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityAttributeV2025>, any>>;\r\n}\r\nputIdentityAttribute(requestParameters: sdk.IdentityAttributesV2025ApiPutIdentityAttributeRequest): Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>> {\r\n    return this.electronAPI.putIdentityAttribute(requestParameters) as Promise<AxiosResponse<sdk.IdentityAttributeV2025, any>>;\r\n}\r\n\r\ncompareIdentitySnapshots(requestParameters: sdk.IdentityHistoryV2025ApiCompareIdentitySnapshotsRequest): Promise<AxiosResponse<Array<sdk.IdentityCompareResponseV2025>, any>> {\r\n    return this.electronAPI.compareIdentitySnapshots(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityCompareResponseV2025>, any>>;\r\n}\r\ncompareIdentitySnapshotsAccessType(requestParameters: sdk.IdentityHistoryV2025ApiCompareIdentitySnapshotsAccessTypeRequest): Promise<AxiosResponse<Array<sdk.AccessItemDiffV2025>, any>> {\r\n    return this.electronAPI.compareIdentitySnapshotsAccessType(requestParameters) as Promise<AxiosResponse<Array<sdk.AccessItemDiffV2025>, any>>;\r\n}\r\ngetHistoricalIdentity(requestParameters: sdk.IdentityHistoryV2025ApiGetHistoricalIdentityRequest): Promise<AxiosResponse<sdk.IdentityHistoryResponseV2025, any>> {\r\n    return this.electronAPI.getHistoricalIdentity(requestParameters) as Promise<AxiosResponse<sdk.IdentityHistoryResponseV2025, any>>;\r\n}\r\ngetHistoricalIdentityEvents(requestParameters: sdk.IdentityHistoryV2025ApiGetHistoricalIdentityEventsRequest): Promise<AxiosResponse<Array<sdk.GetHistoricalIdentityEvents200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.getHistoricalIdentityEvents(requestParameters) as Promise<AxiosResponse<Array<sdk.GetHistoricalIdentityEvents200ResponseInnerV2025>, any>>;\r\n}\r\ngetIdentitySnapshot(requestParameters: sdk.IdentityHistoryV2025ApiGetIdentitySnapshotRequest): Promise<AxiosResponse<sdk.IdentityHistoryResponseV2025, any>> {\r\n    return this.electronAPI.getIdentitySnapshot(requestParameters) as Promise<AxiosResponse<sdk.IdentityHistoryResponseV2025, any>>;\r\n}\r\ngetIdentitySnapshotSummary(requestParameters: sdk.IdentityHistoryV2025ApiGetIdentitySnapshotSummaryRequest): Promise<AxiosResponse<Array<sdk.MetricResponseV2025>, any>> {\r\n    return this.electronAPI.getIdentitySnapshotSummary(requestParameters) as Promise<AxiosResponse<Array<sdk.MetricResponseV2025>, any>>;\r\n}\r\ngetIdentityStartDate(requestParameters: sdk.IdentityHistoryV2025ApiGetIdentityStartDateRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getIdentityStartDate(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\nlistHistoricalIdentities(requestParameters: sdk.IdentityHistoryV2025ApiListHistoricalIdentitiesRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityListItemV2025>, any>> {\r\n    return this.electronAPI.listHistoricalIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityListItemV2025>, any>>;\r\n}\r\nlistIdentityAccessItems(requestParameters: sdk.IdentityHistoryV2025ApiListIdentityAccessItemsRequest): Promise<AxiosResponse<Array<sdk.ListIdentityAccessItems200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.listIdentityAccessItems(requestParameters) as Promise<AxiosResponse<Array<sdk.ListIdentityAccessItems200ResponseInnerV2025>, any>>;\r\n}\r\nlistIdentitySnapshotAccessItems(requestParameters: sdk.IdentityHistoryV2025ApiListIdentitySnapshotAccessItemsRequest): Promise<AxiosResponse<Array<sdk.ListIdentityAccessItems200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.listIdentitySnapshotAccessItems(requestParameters) as Promise<AxiosResponse<Array<sdk.ListIdentityAccessItems200ResponseInnerV2025>, any>>;\r\n}\r\nlistIdentitySnapshots(requestParameters: sdk.IdentityHistoryV2025ApiListIdentitySnapshotsRequest): Promise<AxiosResponse<Array<sdk.IdentitySnapshotSummaryResponseV2025>, any>> {\r\n    return this.electronAPI.listIdentitySnapshots(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentitySnapshotSummaryResponseV2025>, any>>;\r\n}\r\n\r\ncreateIdentityProfile(requestParameters: sdk.IdentityProfilesV2025ApiCreateIdentityProfileRequest): Promise<AxiosResponse<sdk.IdentityProfileV2025, any>> {\r\n    return this.electronAPI.createIdentityProfile(requestParameters) as Promise<AxiosResponse<sdk.IdentityProfileV2025, any>>;\r\n}\r\ndeleteIdentityProfile(requestParameters: sdk.IdentityProfilesV2025ApiDeleteIdentityProfileRequest): Promise<AxiosResponse<sdk.TaskResultSimplifiedV2025, any>> {\r\n    return this.electronAPI.deleteIdentityProfile(requestParameters) as Promise<AxiosResponse<sdk.TaskResultSimplifiedV2025, any>>;\r\n}\r\ndeleteIdentityProfiles(requestParameters: sdk.IdentityProfilesV2025ApiDeleteIdentityProfilesRequest): Promise<AxiosResponse<sdk.TaskResultSimplifiedV2025, any>> {\r\n    return this.electronAPI.deleteIdentityProfiles(requestParameters) as Promise<AxiosResponse<sdk.TaskResultSimplifiedV2025, any>>;\r\n}\r\nexportIdentityProfiles(requestParameters: sdk.IdentityProfilesV2025ApiExportIdentityProfilesRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityProfileExportedObjectV2025>, any>> {\r\n    return this.electronAPI.exportIdentityProfiles(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityProfileExportedObjectV2025>, any>>;\r\n}\r\ngenerateIdentityPreview(requestParameters: sdk.IdentityProfilesV2025ApiGenerateIdentityPreviewRequest): Promise<AxiosResponse<sdk.IdentityPreviewResponseV2025, any>> {\r\n    return this.electronAPI.generateIdentityPreview(requestParameters) as Promise<AxiosResponse<sdk.IdentityPreviewResponseV2025, any>>;\r\n}\r\ngetDefaultIdentityAttributeConfig(requestParameters: sdk.IdentityProfilesV2025ApiGetDefaultIdentityAttributeConfigRequest): Promise<AxiosResponse<sdk.IdentityAttributeConfigV2025, any>> {\r\n    return this.electronAPI.getDefaultIdentityAttributeConfig(requestParameters) as Promise<AxiosResponse<sdk.IdentityAttributeConfigV2025, any>>;\r\n}\r\ngetIdentityProfile(requestParameters: sdk.IdentityProfilesV2025ApiGetIdentityProfileRequest): Promise<AxiosResponse<sdk.IdentityProfileV2025, any>> {\r\n    return this.electronAPI.getIdentityProfile(requestParameters) as Promise<AxiosResponse<sdk.IdentityProfileV2025, any>>;\r\n}\r\nimportIdentityProfiles(requestParameters: sdk.IdentityProfilesV2025ApiImportIdentityProfilesRequest): Promise<AxiosResponse<sdk.ObjectImportResultV2025, any>> {\r\n    return this.electronAPI.importIdentityProfiles(requestParameters) as Promise<AxiosResponse<sdk.ObjectImportResultV2025, any>>;\r\n}\r\nlistIdentityProfiles(requestParameters: sdk.IdentityProfilesV2025ApiListIdentityProfilesRequest = {}): Promise<AxiosResponse<Array<sdk.IdentityProfileV2025>, any>> {\r\n    return this.electronAPI.listIdentityProfiles(requestParameters) as Promise<AxiosResponse<Array<sdk.IdentityProfileV2025>, any>>;\r\n}\r\nsyncIdentityProfile(requestParameters: sdk.IdentityProfilesV2025ApiSyncIdentityProfileRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.syncIdentityProfile(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\nupdateIdentityProfile(requestParameters: sdk.IdentityProfilesV2025ApiUpdateIdentityProfileRequest): Promise<AxiosResponse<sdk.IdentityProfileV2025, any>> {\r\n    return this.electronAPI.updateIdentityProfile(requestParameters) as Promise<AxiosResponse<sdk.IdentityProfileV2025, any>>;\r\n}\r\n\r\ncreateLifecycleState(requestParameters: sdk.LifecycleStatesV2025ApiCreateLifecycleStateRequest): Promise<AxiosResponse<sdk.LifecycleStateV2025, any>> {\r\n    return this.electronAPI.createLifecycleState(requestParameters) as Promise<AxiosResponse<sdk.LifecycleStateV2025, any>>;\r\n}\r\ndeleteLifecycleState(requestParameters: sdk.LifecycleStatesV2025ApiDeleteLifecycleStateRequest): Promise<AxiosResponse<sdk.LifecyclestateDeletedV2025, any>> {\r\n    return this.electronAPI.deleteLifecycleState(requestParameters) as Promise<AxiosResponse<sdk.LifecyclestateDeletedV2025, any>>;\r\n}\r\ngetLifecycleState(requestParameters: sdk.LifecycleStatesV2025ApiGetLifecycleStateRequest): Promise<AxiosResponse<sdk.LifecycleStateV2025, any>> {\r\n    return this.electronAPI.getLifecycleState(requestParameters) as Promise<AxiosResponse<sdk.LifecycleStateV2025, any>>;\r\n}\r\ngetLifecycleStates(requestParameters: sdk.LifecycleStatesV2025ApiGetLifecycleStatesRequest): Promise<AxiosResponse<Array<sdk.LifecycleStateV2025>, any>> {\r\n    return this.electronAPI.getLifecycleStates(requestParameters) as Promise<AxiosResponse<Array<sdk.LifecycleStateV2025>, any>>;\r\n}\r\nsetLifecycleState(requestParameters: sdk.LifecycleStatesV2025ApiSetLifecycleStateRequest): Promise<AxiosResponse<sdk.SetLifecycleState200ResponseV2025, any>> {\r\n    return this.electronAPI.setLifecycleState(requestParameters) as Promise<AxiosResponse<sdk.SetLifecycleState200ResponseV2025, any>>;\r\n}\r\nupdateLifecycleStates(requestParameters: sdk.LifecycleStatesV2025ApiUpdateLifecycleStatesRequest): Promise<AxiosResponse<sdk.LifecycleStateV2025, any>> {\r\n    return this.electronAPI.updateLifecycleStates(requestParameters) as Promise<AxiosResponse<sdk.LifecycleStateV2025, any>>;\r\n}\r\n\r\ngetMFADuoConfig(): Promise<AxiosResponse<sdk.MfaDuoConfigV2025, any>> {\r\n    return this.electronAPI.getMFADuoConfig() as Promise<AxiosResponse<sdk.MfaDuoConfigV2025, any>>;\r\n}\r\ngetMFAKbaConfig(requestParameters: sdk.MFAConfigurationV2025ApiGetMFAKbaConfigRequest = {}): Promise<AxiosResponse<Array<sdk.KbaQuestionV2025>, any>> {\r\n    return this.electronAPI.getMFAKbaConfig(requestParameters) as Promise<AxiosResponse<Array<sdk.KbaQuestionV2025>, any>>;\r\n}\r\ngetMFAOktaConfig(): Promise<AxiosResponse<sdk.MfaOktaConfigV2025, any>> {\r\n    return this.electronAPI.getMFAOktaConfig() as Promise<AxiosResponse<sdk.MfaOktaConfigV2025, any>>;\r\n}\r\nsetMFADuoConfig(requestParameters: sdk.MFAConfigurationV2025ApiSetMFADuoConfigRequest): Promise<AxiosResponse<sdk.MfaDuoConfigV2025, any>> {\r\n    return this.electronAPI.setMFADuoConfig(requestParameters) as Promise<AxiosResponse<sdk.MfaDuoConfigV2025, any>>;\r\n}\r\nsetMFAKBAConfig(requestParameters: sdk.MFAConfigurationV2025ApiSetMFAKBAConfigRequest): Promise<AxiosResponse<Array<sdk.KbaAnswerResponseItemV2025>, any>> {\r\n    return this.electronAPI.setMFAKBAConfig(requestParameters) as Promise<AxiosResponse<Array<sdk.KbaAnswerResponseItemV2025>, any>>;\r\n}\r\nsetMFAOktaConfig(requestParameters: sdk.MFAConfigurationV2025ApiSetMFAOktaConfigRequest): Promise<AxiosResponse<sdk.MfaOktaConfigV2025, any>> {\r\n    return this.electronAPI.setMFAOktaConfig(requestParameters) as Promise<AxiosResponse<sdk.MfaOktaConfigV2025, any>>;\r\n}\r\ntestMFAConfig(requestParameters: sdk.MFAConfigurationV2025ApiTestMFAConfigRequest): Promise<AxiosResponse<sdk.MfaConfigTestResponseV2025, any>> {\r\n    return this.electronAPI.testMFAConfig(requestParameters) as Promise<AxiosResponse<sdk.MfaConfigTestResponseV2025, any>>;\r\n}\r\n\r\nsendClassifyMachineAccount(requestParameters: sdk.MachineAccountClassifyV2025ApiSendClassifyMachineAccountRequest): Promise<AxiosResponse<sdk.SendClassifyMachineAccount200ResponseV2025, any>> {\r\n    return this.electronAPI.sendClassifyMachineAccount(requestParameters) as Promise<AxiosResponse<sdk.SendClassifyMachineAccount200ResponseV2025, any>>;\r\n}\r\n\r\ncreateMachineAccountMappings(requestParameters: sdk.MachineAccountMappingsV2025ApiCreateMachineAccountMappingsRequest): Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>> {\r\n    return this.electronAPI.createMachineAccountMappings(requestParameters) as Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>>;\r\n}\r\ndeleteMachineAccountMappings(requestParameters: sdk.MachineAccountMappingsV2025ApiDeleteMachineAccountMappingsRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteMachineAccountMappings(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nlistMachineAccountMappings(requestParameters: sdk.MachineAccountMappingsV2025ApiListMachineAccountMappingsRequest): Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>> {\r\n    return this.electronAPI.listMachineAccountMappings(requestParameters) as Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>>;\r\n}\r\nsetMachineAccountMappings(requestParameters: sdk.MachineAccountMappingsV2025ApiSetMachineAccountMappingsRequest): Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>> {\r\n    return this.electronAPI.setMachineAccountMappings(requestParameters) as Promise<AxiosResponse<Array<sdk.AttributeMappingsV2025>, any>>;\r\n}\r\n\r\ngetMachineAccount(requestParameters: sdk.MachineAccountsV2025ApiGetMachineAccountRequest): Promise<AxiosResponse<sdk.MachineAccountV2025, any>> {\r\n    return this.electronAPI.getMachineAccount(requestParameters) as Promise<AxiosResponse<sdk.MachineAccountV2025, any>>;\r\n}\r\nlistMachineAccounts(requestParameters: sdk.MachineAccountsV2025ApiListMachineAccountsRequest = {}): Promise<AxiosResponse<Array<sdk.MachineAccountV2025>, any>> {\r\n    return this.electronAPI.listMachineAccounts(requestParameters) as Promise<AxiosResponse<Array<sdk.MachineAccountV2025>, any>>;\r\n}\r\nupdateMachineAccount(requestParameters: sdk.MachineAccountsV2025ApiUpdateMachineAccountRequest): Promise<AxiosResponse<sdk.MachineAccountV2025, any>> {\r\n    return this.electronAPI.updateMachineAccount(requestParameters) as Promise<AxiosResponse<sdk.MachineAccountV2025, any>>;\r\n}\r\n\r\ndeleteMachineClassificationConfig(requestParameters: sdk.MachineClassificationConfigV2025ApiDeleteMachineClassificationConfigRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteMachineClassificationConfig(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetMachineClassificationConfig(requestParameters: sdk.MachineClassificationConfigV2025ApiGetMachineClassificationConfigRequest): Promise<AxiosResponse<sdk.MachineClassificationConfigV2025, any>> {\r\n    return this.electronAPI.getMachineClassificationConfig(requestParameters) as Promise<AxiosResponse<sdk.MachineClassificationConfigV2025, any>>;\r\n}\r\nsetMachineClassificationConfig(requestParameters: sdk.MachineClassificationConfigV2025ApiSetMachineClassificationConfigRequest): Promise<AxiosResponse<sdk.MachineClassificationConfigV2025, any>> {\r\n    return this.electronAPI.setMachineClassificationConfig(requestParameters) as Promise<AxiosResponse<sdk.MachineClassificationConfigV2025, any>>;\r\n}\r\n\r\ncreateMachineIdentity(requestParameters: sdk.MachineIdentitiesV2025ApiCreateMachineIdentityRequest): Promise<AxiosResponse<sdk.MachineIdentityV2025, any>> {\r\n    return this.electronAPI.createMachineIdentity(requestParameters) as Promise<AxiosResponse<sdk.MachineIdentityV2025, any>>;\r\n}\r\ndeleteMachineIdentity(requestParameters: sdk.MachineIdentitiesV2025ApiDeleteMachineIdentityRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteMachineIdentity(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetMachineIdentity(requestParameters: sdk.MachineIdentitiesV2025ApiGetMachineIdentityRequest): Promise<AxiosResponse<sdk.MachineIdentityV2025, any>> {\r\n    return this.electronAPI.getMachineIdentity(requestParameters) as Promise<AxiosResponse<sdk.MachineIdentityV2025, any>>;\r\n}\r\nlistMachineIdentities(requestParameters: sdk.MachineIdentitiesV2025ApiListMachineIdentitiesRequest = {}): Promise<AxiosResponse<Array<sdk.MachineIdentityV2025>, any>> {\r\n    return this.electronAPI.listMachineIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.MachineIdentityV2025>, any>>;\r\n}\r\nupdateMachineIdentity(requestParameters: sdk.MachineIdentitiesV2025ApiUpdateMachineIdentityRequest): Promise<AxiosResponse<sdk.MachineIdentityV2025, any>> {\r\n    return this.electronAPI.updateMachineIdentity(requestParameters) as Promise<AxiosResponse<sdk.MachineIdentityV2025, any>>;\r\n}\r\n\r\ncreateManagedClient(requestParameters: sdk.ManagedClientsV2025ApiCreateManagedClientRequest): Promise<AxiosResponse<sdk.ManagedClientV2025, any>> {\r\n    return this.electronAPI.createManagedClient(requestParameters) as Promise<AxiosResponse<sdk.ManagedClientV2025, any>>;\r\n}\r\ndeleteManagedClient(requestParameters: sdk.ManagedClientsV2025ApiDeleteManagedClientRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteManagedClient(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetManagedClient(requestParameters: sdk.ManagedClientsV2025ApiGetManagedClientRequest): Promise<AxiosResponse<sdk.ManagedClientV2025, any>> {\r\n    return this.electronAPI.getManagedClient(requestParameters) as Promise<AxiosResponse<sdk.ManagedClientV2025, any>>;\r\n}\r\ngetManagedClientStatus(requestParameters: sdk.ManagedClientsV2025ApiGetManagedClientStatusRequest): Promise<AxiosResponse<sdk.ManagedClientStatusV2025, any>> {\r\n    return this.electronAPI.getManagedClientStatus(requestParameters) as Promise<AxiosResponse<sdk.ManagedClientStatusV2025, any>>;\r\n}\r\ngetManagedClients(requestParameters: sdk.ManagedClientsV2025ApiGetManagedClientsRequest = {}): Promise<AxiosResponse<Array<sdk.ManagedClientV2025>, any>> {\r\n    return this.electronAPI.getManagedClients(requestParameters) as Promise<AxiosResponse<Array<sdk.ManagedClientV2025>, any>>;\r\n}\r\nupdateManagedClient(requestParameters: sdk.ManagedClientsV2025ApiUpdateManagedClientRequest): Promise<AxiosResponse<sdk.ManagedClientV2025, any>> {\r\n    return this.electronAPI.updateManagedClient(requestParameters) as Promise<AxiosResponse<sdk.ManagedClientV2025, any>>;\r\n}\r\n\r\ncreateManagedClusterType(requestParameters: sdk.ManagedClusterTypesV2025ApiCreateManagedClusterTypeRequest): Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>> {\r\n    return this.electronAPI.createManagedClusterType(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>>;\r\n}\r\ndeleteManagedClusterType(requestParameters: sdk.ManagedClusterTypesV2025ApiDeleteManagedClusterTypeRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteManagedClusterType(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetManagedClusterType(requestParameters: sdk.ManagedClusterTypesV2025ApiGetManagedClusterTypeRequest): Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>> {\r\n    return this.electronAPI.getManagedClusterType(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>>;\r\n}\r\ngetManagedClusterTypes(requestParameters: sdk.ManagedClusterTypesV2025ApiGetManagedClusterTypesRequest = {}): Promise<AxiosResponse<Array<sdk.ManagedClusterTypeV2025>, any>> {\r\n    return this.electronAPI.getManagedClusterTypes(requestParameters) as Promise<AxiosResponse<Array<sdk.ManagedClusterTypeV2025>, any>>;\r\n}\r\nupdateManagedClusterType(requestParameters: sdk.ManagedClusterTypesV2025ApiUpdateManagedClusterTypeRequest): Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>> {\r\n    return this.electronAPI.updateManagedClusterType(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterTypeV2025, any>>;\r\n}\r\n\r\ncreateManagedCluster(requestParameters: sdk.ManagedClustersV2025ApiCreateManagedClusterRequest): Promise<AxiosResponse<sdk.ManagedClusterV2025, any>> {\r\n    return this.electronAPI.createManagedCluster(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterV2025, any>>;\r\n}\r\ndeleteManagedCluster(requestParameters: sdk.ManagedClustersV2025ApiDeleteManagedClusterRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteManagedCluster(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetClientLogConfiguration(requestParameters: sdk.ManagedClustersV2025ApiGetClientLogConfigurationRequest): Promise<AxiosResponse<sdk.ClientLogConfigurationV2025, any>> {\r\n    return this.electronAPI.getClientLogConfiguration(requestParameters) as Promise<AxiosResponse<sdk.ClientLogConfigurationV2025, any>>;\r\n}\r\ngetManagedCluster(requestParameters: sdk.ManagedClustersV2025ApiGetManagedClusterRequest): Promise<AxiosResponse<sdk.ManagedClusterV2025, any>> {\r\n    return this.electronAPI.getManagedCluster(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterV2025, any>>;\r\n}\r\ngetManagedClusters(requestParameters: sdk.ManagedClustersV2025ApiGetManagedClustersRequest = {}): Promise<AxiosResponse<Array<sdk.ManagedClusterV2025>, any>> {\r\n    return this.electronAPI.getManagedClusters(requestParameters) as Promise<AxiosResponse<Array<sdk.ManagedClusterV2025>, any>>;\r\n}\r\nputClientLogConfiguration(requestParameters: sdk.ManagedClustersV2025ApiPutClientLogConfigurationRequest): Promise<AxiosResponse<sdk.ClientLogConfigurationV2025, any>> {\r\n    return this.electronAPI.putClientLogConfiguration(requestParameters) as Promise<AxiosResponse<sdk.ClientLogConfigurationV2025, any>>;\r\n}\r\nupdate(requestParameters: sdk.ManagedClustersV2025ApiUpdateRequest): Promise<AxiosResponse<sdk.ClusterManualUpgradeV2025, any>> {\r\n    return this.electronAPI.update(requestParameters) as Promise<AxiosResponse<sdk.ClusterManualUpgradeV2025, any>>;\r\n}\r\nupdateManagedCluster(requestParameters: sdk.ManagedClustersV2025ApiUpdateManagedClusterRequest): Promise<AxiosResponse<sdk.ManagedClusterV2025, any>> {\r\n    return this.electronAPI.updateManagedCluster(requestParameters) as Promise<AxiosResponse<sdk.ManagedClusterV2025, any>>;\r\n}\r\n\r\ncreateMultiHostIntegration(requestParameters: sdk.MultiHostIntegrationV2025ApiCreateMultiHostIntegrationRequest): Promise<AxiosResponse<sdk.MultiHostIntegrationsV2025, any>> {\r\n    return this.electronAPI.createMultiHostIntegration(requestParameters) as Promise<AxiosResponse<sdk.MultiHostIntegrationsV2025, any>>;\r\n}\r\ncreateSourcesWithinMultiHost(requestParameters: sdk.MultiHostIntegrationV2025ApiCreateSourcesWithinMultiHostRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.createSourcesWithinMultiHost(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteMultiHost(requestParameters: sdk.MultiHostIntegrationV2025ApiDeleteMultiHostRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteMultiHost(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetAcctAggregationGroups(requestParameters: sdk.MultiHostIntegrationV2025ApiGetAcctAggregationGroupsRequest): Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsAggScheduleUpdateV2025>, any>> {\r\n    return this.electronAPI.getAcctAggregationGroups(requestParameters) as Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsAggScheduleUpdateV2025>, any>>;\r\n}\r\ngetEntitlementAggregationGroups(requestParameters: sdk.MultiHostIntegrationV2025ApiGetEntitlementAggregationGroupsRequest): Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsAggScheduleUpdateV2025>, any>> {\r\n    return this.electronAPI.getEntitlementAggregationGroups(requestParameters) as Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsAggScheduleUpdateV2025>, any>>;\r\n}\r\ngetMultiHostIntegrations(requestParameters: sdk.MultiHostIntegrationV2025ApiGetMultiHostIntegrationsRequest): Promise<AxiosResponse<sdk.MultiHostIntegrationsV2025, any>> {\r\n    return this.electronAPI.getMultiHostIntegrations(requestParameters) as Promise<AxiosResponse<sdk.MultiHostIntegrationsV2025, any>>;\r\n}\r\ngetMultiHostIntegrationsList(requestParameters: sdk.MultiHostIntegrationV2025ApiGetMultiHostIntegrationsListRequest = {}): Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsV2025>, any>> {\r\n    return this.electronAPI.getMultiHostIntegrationsList(requestParameters) as Promise<AxiosResponse<Array<sdk.MultiHostIntegrationsV2025>, any>>;\r\n}\r\ngetMultiHostSourceCreationErrors(requestParameters: sdk.MultiHostIntegrationV2025ApiGetMultiHostSourceCreationErrorsRequest): Promise<AxiosResponse<Array<sdk.SourceCreationErrorsV2025>, any>> {\r\n    return this.electronAPI.getMultiHostSourceCreationErrors(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceCreationErrorsV2025>, any>>;\r\n}\r\ngetMultihostIntegrationTypes(): Promise<AxiosResponse<Array<sdk.MultiHostIntegrationTemplateTypeV2025>, any>> {\r\n    return this.electronAPI.getMultihostIntegrationTypes() as Promise<AxiosResponse<Array<sdk.MultiHostIntegrationTemplateTypeV2025>, any>>;\r\n}\r\ngetSourcesWithinMultiHost(requestParameters: sdk.MultiHostIntegrationV2025ApiGetSourcesWithinMultiHostRequest): Promise<AxiosResponse<Array<sdk.MultiHostSourcesV2025>, any>> {\r\n    return this.electronAPI.getSourcesWithinMultiHost(requestParameters) as Promise<AxiosResponse<Array<sdk.MultiHostSourcesV2025>, any>>;\r\n}\r\ntestConnectionMultiHostSources(requestParameters: sdk.MultiHostIntegrationV2025ApiTestConnectionMultiHostSourcesRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.testConnectionMultiHostSources(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ntestSourceConnectionMultihost(requestParameters: sdk.MultiHostIntegrationV2025ApiTestSourceConnectionMultihostRequest): Promise<AxiosResponse<sdk.TestSourceConnectionMultihost200ResponseV2025, any>> {\r\n    return this.electronAPI.testSourceConnectionMultihost(requestParameters) as Promise<AxiosResponse<sdk.TestSourceConnectionMultihost200ResponseV2025, any>>;\r\n}\r\nupdateMultiHostSources(requestParameters: sdk.MultiHostIntegrationV2025ApiUpdateMultiHostSourcesRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.updateMultiHostSources(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\napproveNonEmployeeRequest(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiApproveNonEmployeeRequestRequest): Promise<AxiosResponse<sdk.NonEmployeeApprovalItemV2025, any>> {\r\n    return this.electronAPI.approveNonEmployeeRequest(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeApprovalItemV2025, any>>;\r\n}\r\ncreateNonEmployeeRecord(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiCreateNonEmployeeRecordRequest): Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>> {\r\n    return this.electronAPI.createNonEmployeeRecord(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>>;\r\n}\r\ncreateNonEmployeeRequest(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiCreateNonEmployeeRequestRequest): Promise<AxiosResponse<sdk.NonEmployeeRequestV2025, any>> {\r\n    return this.electronAPI.createNonEmployeeRequest(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRequestV2025, any>>;\r\n}\r\ncreateNonEmployeeSource(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiCreateNonEmployeeSourceRequest): Promise<AxiosResponse<sdk.NonEmployeeSourceWithCloudExternalIdV2025, any>> {\r\n    return this.electronAPI.createNonEmployeeSource(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSourceWithCloudExternalIdV2025, any>>;\r\n}\r\ncreateNonEmployeeSourceSchemaAttributes(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiCreateNonEmployeeSourceSchemaAttributesRequest): Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>> {\r\n    return this.electronAPI.createNonEmployeeSourceSchemaAttributes(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>>;\r\n}\r\ndeleteNonEmployeeRecord(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeRecordRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeRecord(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteNonEmployeeRecordsInBulk(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeRecordsInBulkRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeRecordsInBulk(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteNonEmployeeRequest(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeRequestRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeRequest(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteNonEmployeeSchemaAttribute(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeSchemaAttributeRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeSchemaAttribute(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteNonEmployeeSource(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeSourceRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeSource(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteNonEmployeeSourceSchemaAttributes(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiDeleteNonEmployeeSourceSchemaAttributesRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNonEmployeeSourceSchemaAttributes(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nexportNonEmployeeRecords(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiExportNonEmployeeRecordsRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.exportNonEmployeeRecords(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nexportNonEmployeeSourceSchemaTemplate(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiExportNonEmployeeSourceSchemaTemplateRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.exportNonEmployeeSourceSchemaTemplate(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetNonEmployeeApproval(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeApprovalRequest): Promise<AxiosResponse<sdk.NonEmployeeApprovalItemDetailV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeApproval(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeApprovalItemDetailV2025, any>>;\r\n}\r\ngetNonEmployeeApprovalSummary(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeApprovalSummaryRequest): Promise<AxiosResponse<sdk.NonEmployeeApprovalSummaryV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeApprovalSummary(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeApprovalSummaryV2025, any>>;\r\n}\r\ngetNonEmployeeBulkUploadStatus(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeBulkUploadStatusRequest): Promise<AxiosResponse<sdk.NonEmployeeBulkUploadStatusV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeBulkUploadStatus(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeBulkUploadStatusV2025, any>>;\r\n}\r\ngetNonEmployeeRecord(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeRecordRequest): Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeRecord(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>>;\r\n}\r\ngetNonEmployeeRequest(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeRequestRequest): Promise<AxiosResponse<sdk.NonEmployeeRequestV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeRequest(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRequestV2025, any>>;\r\n}\r\ngetNonEmployeeRequestSummary(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeRequestSummaryRequest): Promise<AxiosResponse<sdk.NonEmployeeRequestSummaryV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeRequestSummary(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRequestSummaryV2025, any>>;\r\n}\r\ngetNonEmployeeSchemaAttribute(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeSchemaAttributeRequest): Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeSchemaAttribute(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>>;\r\n}\r\ngetNonEmployeeSource(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeSourceRequest): Promise<AxiosResponse<sdk.NonEmployeeSourceV2025, any>> {\r\n    return this.electronAPI.getNonEmployeeSource(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSourceV2025, any>>;\r\n}\r\ngetNonEmployeeSourceSchemaAttributes(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiGetNonEmployeeSourceSchemaAttributesRequest): Promise<AxiosResponse<Array<sdk.NonEmployeeSchemaAttributeV2025>, any>> {\r\n    return this.electronAPI.getNonEmployeeSourceSchemaAttributes(requestParameters) as Promise<AxiosResponse<Array<sdk.NonEmployeeSchemaAttributeV2025>, any>>;\r\n}\r\nimportNonEmployeeRecordsInBulk(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiImportNonEmployeeRecordsInBulkRequest): Promise<AxiosResponse<sdk.NonEmployeeBulkUploadJobV2025, any>> {\r\n    return this.electronAPI.importNonEmployeeRecordsInBulk(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeBulkUploadJobV2025, any>>;\r\n}\r\nlistNonEmployeeApprovals(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiListNonEmployeeApprovalsRequest = {}): Promise<AxiosResponse<Array<sdk.NonEmployeeApprovalItemV2025>, any>> {\r\n    return this.electronAPI.listNonEmployeeApprovals(requestParameters) as Promise<AxiosResponse<Array<sdk.NonEmployeeApprovalItemV2025>, any>>;\r\n}\r\nlistNonEmployeeRecords(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiListNonEmployeeRecordsRequest = {}): Promise<AxiosResponse<Array<sdk.NonEmployeeRecordV2025>, any>> {\r\n    return this.electronAPI.listNonEmployeeRecords(requestParameters) as Promise<AxiosResponse<Array<sdk.NonEmployeeRecordV2025>, any>>;\r\n}\r\nlistNonEmployeeRequests(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiListNonEmployeeRequestsRequest): Promise<AxiosResponse<Array<sdk.NonEmployeeRequestV2025>, any>> {\r\n    return this.electronAPI.listNonEmployeeRequests(requestParameters) as Promise<AxiosResponse<Array<sdk.NonEmployeeRequestV2025>, any>>;\r\n}\r\nlistNonEmployeeSources(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiListNonEmployeeSourcesRequest = {}): Promise<AxiosResponse<Array<sdk.NonEmployeeSourceWithNECountV2025>, any>> {\r\n    return this.electronAPI.listNonEmployeeSources(requestParameters) as Promise<AxiosResponse<Array<sdk.NonEmployeeSourceWithNECountV2025>, any>>;\r\n}\r\npatchNonEmployeeRecord(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiPatchNonEmployeeRecordRequest): Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>> {\r\n    return this.electronAPI.patchNonEmployeeRecord(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>>;\r\n}\r\npatchNonEmployeeSchemaAttribute(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiPatchNonEmployeeSchemaAttributeRequest): Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>> {\r\n    return this.electronAPI.patchNonEmployeeSchemaAttribute(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSchemaAttributeV2025, any>>;\r\n}\r\npatchNonEmployeeSource(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiPatchNonEmployeeSourceRequest): Promise<AxiosResponse<sdk.NonEmployeeSourceV2025, any>> {\r\n    return this.electronAPI.patchNonEmployeeSource(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeSourceV2025, any>>;\r\n}\r\nrejectNonEmployeeRequest(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiRejectNonEmployeeRequestRequest): Promise<AxiosResponse<sdk.NonEmployeeApprovalItemV2025, any>> {\r\n    return this.electronAPI.rejectNonEmployeeRequest(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeApprovalItemV2025, any>>;\r\n}\r\nupdateNonEmployeeRecord(requestParameters: sdk.NonEmployeeLifecycleManagementV2025ApiUpdateNonEmployeeRecordRequest): Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>> {\r\n    return this.electronAPI.updateNonEmployeeRecord(requestParameters) as Promise<AxiosResponse<sdk.NonEmployeeRecordV2025, any>>;\r\n}\r\n\r\ncreateDomainDkim(requestParameters: sdk.NotificationsV2025ApiCreateDomainDkimRequest): Promise<AxiosResponse<sdk.DomainStatusDtoV2025, any>> {\r\n    return this.electronAPI.createDomainDkim(requestParameters) as Promise<AxiosResponse<sdk.DomainStatusDtoV2025, any>>;\r\n}\r\ncreateNotificationTemplate(requestParameters: sdk.NotificationsV2025ApiCreateNotificationTemplateRequest): Promise<AxiosResponse<sdk.TemplateDtoV2025, any>> {\r\n    return this.electronAPI.createNotificationTemplate(requestParameters) as Promise<AxiosResponse<sdk.TemplateDtoV2025, any>>;\r\n}\r\ncreateVerifiedFromAddress(requestParameters: sdk.NotificationsV2025ApiCreateVerifiedFromAddressRequest): Promise<AxiosResponse<sdk.EmailStatusDtoV2025, any>> {\r\n    return this.electronAPI.createVerifiedFromAddress(requestParameters) as Promise<AxiosResponse<sdk.EmailStatusDtoV2025, any>>;\r\n}\r\ndeleteNotificationTemplatesInBulk(requestParameters: sdk.NotificationsV2025ApiDeleteNotificationTemplatesInBulkRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNotificationTemplatesInBulk(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteVerifiedFromAddress(requestParameters: sdk.NotificationsV2025ApiDeleteVerifiedFromAddressRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteVerifiedFromAddress(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetDkimAttributes(requestParameters: sdk.NotificationsV2025ApiGetDkimAttributesRequest = {}): Promise<AxiosResponse<Array<sdk.DkimAttributesV2025>, any>> {\r\n    return this.electronAPI.getDkimAttributes(requestParameters) as Promise<AxiosResponse<Array<sdk.DkimAttributesV2025>, any>>;\r\n}\r\ngetMailFromAttributes(requestParameters: sdk.NotificationsV2025ApiGetMailFromAttributesRequest): Promise<AxiosResponse<sdk.MailFromAttributesV2025, any>> {\r\n    return this.electronAPI.getMailFromAttributes(requestParameters) as Promise<AxiosResponse<sdk.MailFromAttributesV2025, any>>;\r\n}\r\ngetNotificationTemplate(requestParameters: sdk.NotificationsV2025ApiGetNotificationTemplateRequest): Promise<AxiosResponse<sdk.TemplateDtoV2025, any>> {\r\n    return this.electronAPI.getNotificationTemplate(requestParameters) as Promise<AxiosResponse<sdk.TemplateDtoV2025, any>>;\r\n}\r\ngetNotificationsTemplateContext(requestParameters: sdk.NotificationsV2025ApiGetNotificationsTemplateContextRequest = {}): Promise<AxiosResponse<sdk.NotificationTemplateContextV2025, any>> {\r\n    return this.electronAPI.getNotificationsTemplateContext(requestParameters) as Promise<AxiosResponse<sdk.NotificationTemplateContextV2025, any>>;\r\n}\r\nlistFromAddresses(requestParameters: sdk.NotificationsV2025ApiListFromAddressesRequest = {}): Promise<AxiosResponse<Array<sdk.EmailStatusDtoV2025>, any>> {\r\n    return this.electronAPI.listFromAddresses(requestParameters) as Promise<AxiosResponse<Array<sdk.EmailStatusDtoV2025>, any>>;\r\n}\r\nlistNotificationPreferences(requestParameters: sdk.NotificationsV2025ApiListNotificationPreferencesRequest = {}): Promise<AxiosResponse<sdk.PreferencesDtoV2025, any>> {\r\n    return this.electronAPI.listNotificationPreferences(requestParameters) as Promise<AxiosResponse<sdk.PreferencesDtoV2025, any>>;\r\n}\r\nlistNotificationTemplateDefaults(requestParameters: sdk.NotificationsV2025ApiListNotificationTemplateDefaultsRequest = {}): Promise<AxiosResponse<Array<sdk.TemplateDtoDefaultV2025>, any>> {\r\n    return this.electronAPI.listNotificationTemplateDefaults(requestParameters) as Promise<AxiosResponse<Array<sdk.TemplateDtoDefaultV2025>, any>>;\r\n}\r\nlistNotificationTemplates(requestParameters: sdk.NotificationsV2025ApiListNotificationTemplatesRequest = {}): Promise<AxiosResponse<Array<sdk.TemplateDtoV2025>, any>> {\r\n    return this.electronAPI.listNotificationTemplates(requestParameters) as Promise<AxiosResponse<Array<sdk.TemplateDtoV2025>, any>>;\r\n}\r\nputMailFromAttributes(requestParameters: sdk.NotificationsV2025ApiPutMailFromAttributesRequest): Promise<AxiosResponse<sdk.MailFromAttributesV2025, any>> {\r\n    return this.electronAPI.putMailFromAttributes(requestParameters) as Promise<AxiosResponse<sdk.MailFromAttributesV2025, any>>;\r\n}\r\nsendTestNotification(requestParameters: sdk.NotificationsV2025ApiSendTestNotificationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.sendTestNotification(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ncreateOauthClient(requestParameters: sdk.OAuthClientsV2025ApiCreateOauthClientRequest): Promise<AxiosResponse<sdk.CreateOAuthClientResponseV2025, any>> {\r\n    return this.electronAPI.createOauthClient(requestParameters) as Promise<AxiosResponse<sdk.CreateOAuthClientResponseV2025, any>>;\r\n}\r\ndeleteOauthClient(requestParameters: sdk.OAuthClientsV2025ApiDeleteOauthClientRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteOauthClient(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetOauthClient(requestParameters: sdk.OAuthClientsV2025ApiGetOauthClientRequest): Promise<AxiosResponse<sdk.GetOAuthClientResponseV2025, any>> {\r\n    return this.electronAPI.getOauthClient(requestParameters) as Promise<AxiosResponse<sdk.GetOAuthClientResponseV2025, any>>;\r\n}\r\nlistOauthClients(requestParameters: sdk.OAuthClientsV2025ApiListOauthClientsRequest = {}): Promise<AxiosResponse<Array<sdk.GetOAuthClientResponseV2025>, any>> {\r\n    return this.electronAPI.listOauthClients(requestParameters) as Promise<AxiosResponse<Array<sdk.GetOAuthClientResponseV2025>, any>>;\r\n}\r\npatchOauthClient(requestParameters: sdk.OAuthClientsV2025ApiPatchOauthClientRequest): Promise<AxiosResponse<sdk.GetOAuthClientResponseV2025, any>> {\r\n    return this.electronAPI.patchOauthClient(requestParameters) as Promise<AxiosResponse<sdk.GetOAuthClientResponseV2025, any>>;\r\n}\r\n\r\ngetOrgConfig(): Promise<AxiosResponse<sdk.OrgConfigV2025, any>> {\r\n    return this.electronAPI.getOrgConfig() as Promise<AxiosResponse<sdk.OrgConfigV2025, any>>;\r\n}\r\ngetValidTimeZones(requestParameters: sdk.OrgConfigV2025ApiGetValidTimeZonesRequest = {}): Promise<AxiosResponse<Array<string>, any>> {\r\n    return this.electronAPI.getValidTimeZones(requestParameters) as Promise<AxiosResponse<Array<string>, any>>;\r\n}\r\npatchOrgConfig(requestParameters: sdk.OrgConfigV2025ApiPatchOrgConfigRequest): Promise<AxiosResponse<sdk.OrgConfigV2025, any>> {\r\n    return this.electronAPI.patchOrgConfig(requestParameters) as Promise<AxiosResponse<sdk.OrgConfigV2025, any>>;\r\n}\r\n\r\ncreatePasswordOrgConfig(requestParameters: sdk.PasswordConfigurationV2025ApiCreatePasswordOrgConfigRequest): Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>> {\r\n    return this.electronAPI.createPasswordOrgConfig(requestParameters) as Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>>;\r\n}\r\ngetPasswordOrgConfig(): Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>> {\r\n    return this.electronAPI.getPasswordOrgConfig() as Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>>;\r\n}\r\nputPasswordOrgConfig(requestParameters: sdk.PasswordConfigurationV2025ApiPutPasswordOrgConfigRequest): Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>> {\r\n    return this.electronAPI.putPasswordOrgConfig(requestParameters) as Promise<AxiosResponse<sdk.PasswordOrgConfigV2025, any>>;\r\n}\r\n\r\ngetPasswordDictionary(): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.getPasswordDictionary() as Promise<AxiosResponse<string, any>>;\r\n}\r\nputPasswordDictionary(requestParameters: sdk.PasswordDictionaryV2025ApiPutPasswordDictionaryRequest = {}): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.putPasswordDictionary(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ncreateDigitToken(requestParameters: sdk.PasswordManagementV2025ApiCreateDigitTokenRequest): Promise<AxiosResponse<sdk.PasswordDigitTokenV2025, any>> {\r\n    return this.electronAPI.createDigitToken(requestParameters) as Promise<AxiosResponse<sdk.PasswordDigitTokenV2025, any>>;\r\n}\r\ngetPasswordChangeStatus(requestParameters: sdk.PasswordManagementV2025ApiGetPasswordChangeStatusRequest): Promise<AxiosResponse<sdk.PasswordStatusV2025, any>> {\r\n    return this.electronAPI.getPasswordChangeStatus(requestParameters) as Promise<AxiosResponse<sdk.PasswordStatusV2025, any>>;\r\n}\r\nqueryPasswordInfo(requestParameters: sdk.PasswordManagementV2025ApiQueryPasswordInfoRequest): Promise<AxiosResponse<sdk.PasswordInfoV2025, any>> {\r\n    return this.electronAPI.queryPasswordInfo(requestParameters) as Promise<AxiosResponse<sdk.PasswordInfoV2025, any>>;\r\n}\r\nsetPassword(requestParameters: sdk.PasswordManagementV2025ApiSetPasswordRequest): Promise<AxiosResponse<sdk.PasswordChangeResponseV2025, any>> {\r\n    return this.electronAPI.setPassword(requestParameters) as Promise<AxiosResponse<sdk.PasswordChangeResponseV2025, any>>;\r\n}\r\n\r\ncreatePasswordPolicy(requestParameters: sdk.PasswordPoliciesV2025ApiCreatePasswordPolicyRequest): Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>> {\r\n    return this.electronAPI.createPasswordPolicy(requestParameters) as Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>>;\r\n}\r\ndeletePasswordPolicy(requestParameters: sdk.PasswordPoliciesV2025ApiDeletePasswordPolicyRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deletePasswordPolicy(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetPasswordPolicyById(requestParameters: sdk.PasswordPoliciesV2025ApiGetPasswordPolicyByIdRequest): Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>> {\r\n    return this.electronAPI.getPasswordPolicyById(requestParameters) as Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>>;\r\n}\r\nlistPasswordPolicies(requestParameters: sdk.PasswordPoliciesV2025ApiListPasswordPoliciesRequest = {}): Promise<AxiosResponse<Array<sdk.PasswordPolicyV3DtoV2025>, any>> {\r\n    return this.electronAPI.listPasswordPolicies(requestParameters) as Promise<AxiosResponse<Array<sdk.PasswordPolicyV3DtoV2025>, any>>;\r\n}\r\nsetPasswordPolicy(requestParameters: sdk.PasswordPoliciesV2025ApiSetPasswordPolicyRequest): Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>> {\r\n    return this.electronAPI.setPasswordPolicy(requestParameters) as Promise<AxiosResponse<sdk.PasswordPolicyV3DtoV2025, any>>;\r\n}\r\n\r\ncreatePasswordSyncGroup(requestParameters: sdk.PasswordSyncGroupsV2025ApiCreatePasswordSyncGroupRequest): Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>> {\r\n    return this.electronAPI.createPasswordSyncGroup(requestParameters) as Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>>;\r\n}\r\ndeletePasswordSyncGroup(requestParameters: sdk.PasswordSyncGroupsV2025ApiDeletePasswordSyncGroupRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deletePasswordSyncGroup(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetPasswordSyncGroup(requestParameters: sdk.PasswordSyncGroupsV2025ApiGetPasswordSyncGroupRequest): Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>> {\r\n    return this.electronAPI.getPasswordSyncGroup(requestParameters) as Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>>;\r\n}\r\ngetPasswordSyncGroups(requestParameters: sdk.PasswordSyncGroupsV2025ApiGetPasswordSyncGroupsRequest = {}): Promise<AxiosResponse<Array<sdk.PasswordSyncGroupV2025>, any>> {\r\n    return this.electronAPI.getPasswordSyncGroups(requestParameters) as Promise<AxiosResponse<Array<sdk.PasswordSyncGroupV2025>, any>>;\r\n}\r\nupdatePasswordSyncGroup(requestParameters: sdk.PasswordSyncGroupsV2025ApiUpdatePasswordSyncGroupRequest): Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>> {\r\n    return this.electronAPI.updatePasswordSyncGroup(requestParameters) as Promise<AxiosResponse<sdk.PasswordSyncGroupV2025, any>>;\r\n}\r\n\r\ncreatePersonalAccessToken(requestParameters: sdk.PersonalAccessTokensV2025ApiCreatePersonalAccessTokenRequest): Promise<AxiosResponse<sdk.CreatePersonalAccessTokenResponseV2025, any>> {\r\n    return this.electronAPI.createPersonalAccessToken(requestParameters) as Promise<AxiosResponse<sdk.CreatePersonalAccessTokenResponseV2025, any>>;\r\n}\r\ndeletePersonalAccessToken(requestParameters: sdk.PersonalAccessTokensV2025ApiDeletePersonalAccessTokenRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deletePersonalAccessToken(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nlistPersonalAccessTokens(requestParameters: sdk.PersonalAccessTokensV2025ApiListPersonalAccessTokensRequest = {}): Promise<AxiosResponse<Array<sdk.GetPersonalAccessTokenResponseV2025>, any>> {\r\n    return this.electronAPI.listPersonalAccessTokens(requestParameters) as Promise<AxiosResponse<Array<sdk.GetPersonalAccessTokenResponseV2025>, any>>;\r\n}\r\npatchPersonalAccessToken(requestParameters: sdk.PersonalAccessTokensV2025ApiPatchPersonalAccessTokenRequest): Promise<AxiosResponse<sdk.GetPersonalAccessTokenResponseV2025, any>> {\r\n    return this.electronAPI.patchPersonalAccessToken(requestParameters) as Promise<AxiosResponse<sdk.GetPersonalAccessTokenResponseV2025, any>>;\r\n}\r\n\r\ngetPublicIdentities(requestParameters: sdk.PublicIdentitiesV2025ApiGetPublicIdentitiesRequest = {}): Promise<AxiosResponse<Array<sdk.PublicIdentityV2025>, any>> {\r\n    return this.electronAPI.getPublicIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.PublicIdentityV2025>, any>>;\r\n}\r\n\r\ngetPublicIdentityConfig(): Promise<AxiosResponse<sdk.PublicIdentityConfigV2025, any>> {\r\n    return this.electronAPI.getPublicIdentityConfig() as Promise<AxiosResponse<sdk.PublicIdentityConfigV2025, any>>;\r\n}\r\nupdatePublicIdentityConfig(requestParameters: sdk.PublicIdentitiesConfigV2025ApiUpdatePublicIdentityConfigRequest): Promise<AxiosResponse<sdk.PublicIdentityConfigV2025, any>> {\r\n    return this.electronAPI.updatePublicIdentityConfig(requestParameters) as Promise<AxiosResponse<sdk.PublicIdentityConfigV2025, any>>;\r\n}\r\n\r\ncancelReport(requestParameters: sdk.ReportsDataExtractionV2025ApiCancelReportRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.cancelReport(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetReport(requestParameters: sdk.ReportsDataExtractionV2025ApiGetReportRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.getReport(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\ngetReportResult(requestParameters: sdk.ReportsDataExtractionV2025ApiGetReportResultRequest): Promise<AxiosResponse<sdk.ReportResultsV2025, any>> {\r\n    return this.electronAPI.getReportResult(requestParameters) as Promise<AxiosResponse<sdk.ReportResultsV2025, any>>;\r\n}\r\nstartReport(requestParameters: sdk.ReportsDataExtractionV2025ApiStartReportRequest): Promise<AxiosResponse<sdk.TaskResultDetailsV2025, any>> {\r\n    return this.electronAPI.startReport(requestParameters) as Promise<AxiosResponse<sdk.TaskResultDetailsV2025, any>>;\r\n}\r\n\r\nlistRequestableObjects(requestParameters: sdk.RequestableObjectsV2025ApiListRequestableObjectsRequest = {}): Promise<AxiosResponse<Array<sdk.RequestableObjectV2025>, any>> {\r\n    return this.electronAPI.listRequestableObjects(requestParameters) as Promise<AxiosResponse<Array<sdk.RequestableObjectV2025>, any>>;\r\n}\r\n\r\ncreateRoleInsightRequests(requestParameters: sdk.RoleInsightsV2025ApiCreateRoleInsightRequestsRequest = {}): Promise<AxiosResponse<sdk.RoleInsightsResponseV2025, any>> {\r\n    return this.electronAPI.createRoleInsightRequests(requestParameters) as Promise<AxiosResponse<sdk.RoleInsightsResponseV2025, any>>;\r\n}\r\ndownloadRoleInsightsEntitlementsChanges(requestParameters: sdk.RoleInsightsV2025ApiDownloadRoleInsightsEntitlementsChangesRequest): Promise<AxiosResponse<string, any>> {\r\n    return this.electronAPI.downloadRoleInsightsEntitlementsChanges(requestParameters) as Promise<AxiosResponse<string, any>>;\r\n}\r\ngetEntitlementChangesIdentities(requestParameters: sdk.RoleInsightsV2025ApiGetEntitlementChangesIdentitiesRequest): Promise<AxiosResponse<Array<sdk.RoleInsightsIdentitiesV2025>, any>> {\r\n    return this.electronAPI.getEntitlementChangesIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleInsightsIdentitiesV2025>, any>>;\r\n}\r\ngetRoleInsight(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightRequest): Promise<AxiosResponse<sdk.RoleInsightV2025, any>> {\r\n    return this.electronAPI.getRoleInsight(requestParameters) as Promise<AxiosResponse<sdk.RoleInsightV2025, any>>;\r\n}\r\ngetRoleInsights(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightsRequest = {}): Promise<AxiosResponse<Array<sdk.RoleInsightV2025>, any>> {\r\n    return this.electronAPI.getRoleInsights(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleInsightV2025>, any>>;\r\n}\r\ngetRoleInsightsCurrentEntitlements(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightsCurrentEntitlementsRequest): Promise<AxiosResponse<Array<sdk.RoleInsightsEntitlementV2025>, any>> {\r\n    return this.electronAPI.getRoleInsightsCurrentEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleInsightsEntitlementV2025>, any>>;\r\n}\r\ngetRoleInsightsEntitlementsChanges(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightsEntitlementsChangesRequest): Promise<AxiosResponse<Array<sdk.RoleInsightsEntitlementChangesV2025>, any>> {\r\n    return this.electronAPI.getRoleInsightsEntitlementsChanges(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleInsightsEntitlementChangesV2025>, any>>;\r\n}\r\ngetRoleInsightsRequests(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightsRequestsRequest): Promise<AxiosResponse<sdk.RoleInsightsResponseV2025, any>> {\r\n    return this.electronAPI.getRoleInsightsRequests(requestParameters) as Promise<AxiosResponse<sdk.RoleInsightsResponseV2025, any>>;\r\n}\r\ngetRoleInsightsSummary(requestParameters: sdk.RoleInsightsV2025ApiGetRoleInsightsSummaryRequest = {}): Promise<AxiosResponse<sdk.RoleInsightsSummaryV2025, any>> {\r\n    return this.electronAPI.getRoleInsightsSummary(requestParameters) as Promise<AxiosResponse<sdk.RoleInsightsSummaryV2025, any>>;\r\n}\r\n\r\ncreateRole(requestParameters: sdk.RolesV2025ApiCreateRoleRequest): Promise<AxiosResponse<sdk.RoleV2025, any>> {\r\n    return this.electronAPI.createRole(requestParameters) as Promise<AxiosResponse<sdk.RoleV2025, any>>;\r\n}\r\ndeleteBulkRoles(requestParameters: sdk.RolesV2025ApiDeleteBulkRolesRequest): Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>> {\r\n    return this.electronAPI.deleteBulkRoles(requestParameters) as Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>>;\r\n}\r\ndeleteMetadataFromRoleByKeyAndValue(requestParameters: sdk.RolesV2025ApiDeleteMetadataFromRoleByKeyAndValueRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteMetadataFromRoleByKeyAndValue(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteRole(requestParameters: sdk.RolesV2025ApiDeleteRoleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteRole(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetBulkUpdateStatus(): Promise<AxiosResponse<Array<sdk.RoleGetAllBulkUpdateResponseV2025>, any>> {\r\n    return this.electronAPI.getBulkUpdateStatus() as Promise<AxiosResponse<Array<sdk.RoleGetAllBulkUpdateResponseV2025>, any>>;\r\n}\r\ngetBulkUpdateStatusById(requestParameters: sdk.RolesV2025ApiGetBulkUpdateStatusByIdRequest): Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>> {\r\n    return this.electronAPI.getBulkUpdateStatusById(requestParameters) as Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>>;\r\n}\r\ngetRole(requestParameters: sdk.RolesV2025ApiGetRoleRequest): Promise<AxiosResponse<sdk.RoleV2025, any>> {\r\n    return this.electronAPI.getRole(requestParameters) as Promise<AxiosResponse<sdk.RoleV2025, any>>;\r\n}\r\ngetRoleAssignedIdentities(requestParameters: sdk.RolesV2025ApiGetRoleAssignedIdentitiesRequest): Promise<AxiosResponse<Array<sdk.RoleIdentityV2025>, any>> {\r\n    return this.electronAPI.getRoleAssignedIdentities(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleIdentityV2025>, any>>;\r\n}\r\ngetRoleEntitlements(requestParameters: sdk.RolesV2025ApiGetRoleEntitlementsRequest): Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>> {\r\n    return this.electronAPI.getRoleEntitlements(requestParameters) as Promise<AxiosResponse<Array<sdk.EntitlementV2025>, any>>;\r\n}\r\nlistRoles(requestParameters: sdk.RolesV2025ApiListRolesRequest = {}): Promise<AxiosResponse<Array<sdk.RoleV2025>, any>> {\r\n    return this.electronAPI.listRoles(requestParameters) as Promise<AxiosResponse<Array<sdk.RoleV2025>, any>>;\r\n}\r\npatchRole(requestParameters: sdk.RolesV2025ApiPatchRoleRequest): Promise<AxiosResponse<sdk.RoleV2025, any>> {\r\n    return this.electronAPI.patchRole(requestParameters) as Promise<AxiosResponse<sdk.RoleV2025, any>>;\r\n}\r\nsearchRolesByFilter(requestParameters: sdk.RolesV2025ApiSearchRolesByFilterRequest = {}): Promise<AxiosResponse<sdk.RoleV2025, any>> {\r\n    return this.electronAPI.searchRolesByFilter(requestParameters) as Promise<AxiosResponse<sdk.RoleV2025, any>>;\r\n}\r\nupdateAttributeKeyAndValueToRole(requestParameters: sdk.RolesV2025ApiUpdateAttributeKeyAndValueToRoleRequest): Promise<AxiosResponse<sdk.RoleV2025, any>> {\r\n    return this.electronAPI.updateAttributeKeyAndValueToRole(requestParameters) as Promise<AxiosResponse<sdk.RoleV2025, any>>;\r\n}\r\nupdateRolesMetadataByFilter(requestParameters: sdk.RolesV2025ApiUpdateRolesMetadataByFilterRequest): Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>> {\r\n    return this.electronAPI.updateRolesMetadataByFilter(requestParameters) as Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>>;\r\n}\r\nupdateRolesMetadataByIds(requestParameters: sdk.RolesV2025ApiUpdateRolesMetadataByIdsRequest): Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>> {\r\n    return this.electronAPI.updateRolesMetadataByIds(requestParameters) as Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>>;\r\n}\r\nupdateRolesMetadataByQuery(requestParameters: sdk.RolesV2025ApiUpdateRolesMetadataByQueryRequest): Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>> {\r\n    return this.electronAPI.updateRolesMetadataByQuery(requestParameters) as Promise<AxiosResponse<sdk.RoleBulkUpdateResponseV2025, any>>;\r\n}\r\n\r\ncreateSIMIntegration(requestParameters: sdk.SIMIntegrationsV2025ApiCreateSIMIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.createSIMIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\ndeleteSIMIntegration(requestParameters: sdk.SIMIntegrationsV2025ApiDeleteSIMIntegrationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSIMIntegration(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetSIMIntegration(requestParameters: sdk.SIMIntegrationsV2025ApiGetSIMIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.getSIMIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\ngetSIMIntegrations(requestParameters: sdk.SIMIntegrationsV2025ApiGetSIMIntegrationsRequest = {}): Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationDtoV2025>, any>> {\r\n    return this.electronAPI.getSIMIntegrations(requestParameters) as Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationDtoV2025>, any>>;\r\n}\r\npatchBeforeProvisioningRule(requestParameters: sdk.SIMIntegrationsV2025ApiPatchBeforeProvisioningRuleRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.patchBeforeProvisioningRule(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\npatchSIMAttributes(requestParameters: sdk.SIMIntegrationsV2025ApiPatchSIMAttributesRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.patchSIMAttributes(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\nputSIMIntegration(requestParameters: sdk.SIMIntegrationsV2025ApiPutSIMIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.putSIMIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\n\r\ncreateSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiCreateSodPolicyRequest): Promise<AxiosResponse<sdk.SodPolicyV2025, any>> {\r\n    return this.electronAPI.createSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyV2025, any>>;\r\n}\r\ndeleteSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiDeleteSodPolicyRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSodPolicy(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteSodPolicySchedule(requestParameters: sdk.SODPoliciesV2025ApiDeleteSodPolicyScheduleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSodPolicySchedule(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetCustomViolationReport(requestParameters: sdk.SODPoliciesV2025ApiGetCustomViolationReportRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.getCustomViolationReport(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\ngetDefaultViolationReport(requestParameters: sdk.SODPoliciesV2025ApiGetDefaultViolationReportRequest): Promise<AxiosResponse<File, any>> {\r\n    return this.electronAPI.getDefaultViolationReport(requestParameters) as Promise<AxiosResponse<File, any>>;\r\n}\r\ngetSodAllReportRunStatus(): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.getSodAllReportRunStatus() as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\ngetSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiGetSodPolicyRequest): Promise<AxiosResponse<sdk.SodPolicyV2025, any>> {\r\n    return this.electronAPI.getSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyV2025, any>>;\r\n}\r\ngetSodPolicySchedule(requestParameters: sdk.SODPoliciesV2025ApiGetSodPolicyScheduleRequest): Promise<AxiosResponse<sdk.SodPolicyScheduleV2025, any>> {\r\n    return this.electronAPI.getSodPolicySchedule(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyScheduleV2025, any>>;\r\n}\r\ngetSodViolationReportRunStatus(requestParameters: sdk.SODPoliciesV2025ApiGetSodViolationReportRunStatusRequest): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.getSodViolationReportRunStatus(requestParameters) as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\ngetSodViolationReportStatus(requestParameters: sdk.SODPoliciesV2025ApiGetSodViolationReportStatusRequest): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.getSodViolationReportStatus(requestParameters) as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\nlistSodPolicies(requestParameters: sdk.SODPoliciesV2025ApiListSodPoliciesRequest = {}): Promise<AxiosResponse<Array<sdk.SodPolicyV2025>, any>> {\r\n    return this.electronAPI.listSodPolicies(requestParameters) as Promise<AxiosResponse<Array<sdk.SodPolicyV2025>, any>>;\r\n}\r\npatchSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiPatchSodPolicyRequest): Promise<AxiosResponse<sdk.SodPolicyV2025, any>> {\r\n    return this.electronAPI.patchSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyV2025, any>>;\r\n}\r\nputPolicySchedule(requestParameters: sdk.SODPoliciesV2025ApiPutPolicyScheduleRequest): Promise<AxiosResponse<sdk.SodPolicyScheduleV2025, any>> {\r\n    return this.electronAPI.putPolicySchedule(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyScheduleV2025, any>>;\r\n}\r\nputSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiPutSodPolicyRequest): Promise<AxiosResponse<sdk.SodPolicyV2025, any>> {\r\n    return this.electronAPI.putSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.SodPolicyV2025, any>>;\r\n}\r\nstartEvaluateSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiStartEvaluateSodPolicyRequest): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.startEvaluateSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\nstartSodAllPoliciesForOrg(requestParameters: sdk.SODPoliciesV2025ApiStartSodAllPoliciesForOrgRequest = {}): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.startSodAllPoliciesForOrg(requestParameters) as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\nstartSodPolicy(requestParameters: sdk.SODPoliciesV2025ApiStartSodPolicyRequest): Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>> {\r\n    return this.electronAPI.startSodPolicy(requestParameters) as Promise<AxiosResponse<sdk.ReportResultReferenceV2025, any>>;\r\n}\r\n\r\nstartPredictSodViolations(requestParameters: sdk.SODViolationsV2025ApiStartPredictSodViolationsRequest): Promise<AxiosResponse<sdk.ViolationPredictionV2025, any>> {\r\n    return this.electronAPI.startPredictSodViolations(requestParameters) as Promise<AxiosResponse<sdk.ViolationPredictionV2025, any>>;\r\n}\r\nstartViolationCheck(requestParameters: sdk.SODViolationsV2025ApiStartViolationCheckRequest): Promise<AxiosResponse<sdk.SodViolationCheckV2025, any>> {\r\n    return this.electronAPI.startViolationCheck(requestParameters) as Promise<AxiosResponse<sdk.SodViolationCheckV2025, any>>;\r\n}\r\n\r\nexportSpConfig(requestParameters: sdk.SPConfigV2025ApiExportSpConfigRequest): Promise<AxiosResponse<sdk.SpConfigExportJobV2025, any>> {\r\n    return this.electronAPI.exportSpConfig(requestParameters) as Promise<AxiosResponse<sdk.SpConfigExportJobV2025, any>>;\r\n}\r\ngetSpConfigExport(requestParameters: sdk.SPConfigV2025ApiGetSpConfigExportRequest): Promise<AxiosResponse<sdk.SpConfigExportResultsV2025, any>> {\r\n    return this.electronAPI.getSpConfigExport(requestParameters) as Promise<AxiosResponse<sdk.SpConfigExportResultsV2025, any>>;\r\n}\r\ngetSpConfigExportStatus(requestParameters: sdk.SPConfigV2025ApiGetSpConfigExportStatusRequest): Promise<AxiosResponse<sdk.SpConfigExportJobStatusV2025, any>> {\r\n    return this.electronAPI.getSpConfigExportStatus(requestParameters) as Promise<AxiosResponse<sdk.SpConfigExportJobStatusV2025, any>>;\r\n}\r\ngetSpConfigImport(requestParameters: sdk.SPConfigV2025ApiGetSpConfigImportRequest): Promise<AxiosResponse<sdk.SpConfigImportResultsV2025, any>> {\r\n    return this.electronAPI.getSpConfigImport(requestParameters) as Promise<AxiosResponse<sdk.SpConfigImportResultsV2025, any>>;\r\n}\r\ngetSpConfigImportStatus(requestParameters: sdk.SPConfigV2025ApiGetSpConfigImportStatusRequest): Promise<AxiosResponse<sdk.SpConfigImportJobStatusV2025, any>> {\r\n    return this.electronAPI.getSpConfigImportStatus(requestParameters) as Promise<AxiosResponse<sdk.SpConfigImportJobStatusV2025, any>>;\r\n}\r\nimportSpConfig(requestParameters: sdk.SPConfigV2025ApiImportSpConfigRequest): Promise<AxiosResponse<sdk.SpConfigJobV2025, any>> {\r\n    return this.electronAPI.importSpConfig(requestParameters) as Promise<AxiosResponse<sdk.SpConfigJobV2025, any>>;\r\n}\r\nlistSpConfigObjects(): Promise<AxiosResponse<Array<sdk.SpConfigObjectV2025>, any>> {\r\n    return this.electronAPI.listSpConfigObjects() as Promise<AxiosResponse<Array<sdk.SpConfigObjectV2025>, any>>;\r\n}\r\n\r\ncreateSavedSearch(requestParameters: sdk.SavedSearchV2025ApiCreateSavedSearchRequest): Promise<AxiosResponse<sdk.SavedSearchV2025, any>> {\r\n    return this.electronAPI.createSavedSearch(requestParameters) as Promise<AxiosResponse<sdk.SavedSearchV2025, any>>;\r\n}\r\ndeleteSavedSearch(requestParameters: sdk.SavedSearchV2025ApiDeleteSavedSearchRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSavedSearch(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nexecuteSavedSearch(requestParameters: sdk.SavedSearchV2025ApiExecuteSavedSearchRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.executeSavedSearch(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetSavedSearch(requestParameters: sdk.SavedSearchV2025ApiGetSavedSearchRequest): Promise<AxiosResponse<sdk.SavedSearchV2025, any>> {\r\n    return this.electronAPI.getSavedSearch(requestParameters) as Promise<AxiosResponse<sdk.SavedSearchV2025, any>>;\r\n}\r\nlistSavedSearches(requestParameters: sdk.SavedSearchV2025ApiListSavedSearchesRequest = {}): Promise<AxiosResponse<Array<sdk.SavedSearchV2025>, any>> {\r\n    return this.electronAPI.listSavedSearches(requestParameters) as Promise<AxiosResponse<Array<sdk.SavedSearchV2025>, any>>;\r\n}\r\nputSavedSearch(requestParameters: sdk.SavedSearchV2025ApiPutSavedSearchRequest): Promise<AxiosResponse<sdk.SavedSearchV2025, any>> {\r\n    return this.electronAPI.putSavedSearch(requestParameters) as Promise<AxiosResponse<sdk.SavedSearchV2025, any>>;\r\n}\r\n\r\ncreateScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiCreateScheduledSearchRequest): Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>> {\r\n    return this.electronAPI.createScheduledSearch(requestParameters) as Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>>;\r\n}\r\ndeleteScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiDeleteScheduledSearchRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteScheduledSearch(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiGetScheduledSearchRequest): Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>> {\r\n    return this.electronAPI.getScheduledSearch(requestParameters) as Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>>;\r\n}\r\nlistScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiListScheduledSearchRequest = {}): Promise<AxiosResponse<Array<sdk.ScheduledSearchV2025>, any>> {\r\n    return this.electronAPI.listScheduledSearch(requestParameters) as Promise<AxiosResponse<Array<sdk.ScheduledSearchV2025>, any>>;\r\n}\r\nunsubscribeScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiUnsubscribeScheduledSearchRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.unsubscribeScheduledSearch(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nupdateScheduledSearch(requestParameters: sdk.ScheduledSearchV2025ApiUpdateScheduledSearchRequest): Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>> {\r\n    return this.electronAPI.updateScheduledSearch(requestParameters) as Promise<AxiosResponse<sdk.ScheduledSearchV2025, any>>;\r\n}\r\n\r\nsearchAggregate(requestParameters: sdk.SearchV2025ApiSearchAggregateRequest): Promise<AxiosResponse<sdk.AggregationResultV2025, any>> {\r\n    return this.electronAPI.searchAggregate(requestParameters) as Promise<AxiosResponse<sdk.AggregationResultV2025, any>>;\r\n}\r\nsearchCount(requestParameters: sdk.SearchV2025ApiSearchCountRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.searchCount(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nsearchGet(requestParameters: sdk.SearchV2025ApiSearchGetRequest): Promise<AxiosResponse<sdk.SearchDocumentV2025, any>> {\r\n    return this.electronAPI.searchGet(requestParameters) as Promise<AxiosResponse<sdk.SearchDocumentV2025, any>>;\r\n}\r\nsearchPost(requestParameters: sdk.SearchV2025ApiSearchPostRequest): Promise<AxiosResponse<Array<sdk.SearchDocumentsV2025>, any>> {\r\n    return this.electronAPI.searchPost(requestParameters) as Promise<AxiosResponse<Array<sdk.SearchDocumentsV2025>, any>>;\r\n}\r\n\r\ncreateSearchAttributeConfig(requestParameters: sdk.SearchAttributeConfigurationV2025ApiCreateSearchAttributeConfigRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.createSearchAttributeConfig(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ndeleteSearchAttributeConfig(requestParameters: sdk.SearchAttributeConfigurationV2025ApiDeleteSearchAttributeConfigRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSearchAttributeConfig(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetSearchAttributeConfig(requestParameters: sdk.SearchAttributeConfigurationV2025ApiGetSearchAttributeConfigRequest): Promise<AxiosResponse<Array<sdk.SearchAttributeConfigV2025>, any>> {\r\n    return this.electronAPI.getSearchAttributeConfig(requestParameters) as Promise<AxiosResponse<Array<sdk.SearchAttributeConfigV2025>, any>>;\r\n}\r\ngetSingleSearchAttributeConfig(requestParameters: sdk.SearchAttributeConfigurationV2025ApiGetSingleSearchAttributeConfigRequest): Promise<AxiosResponse<sdk.SearchAttributeConfigV2025, any>> {\r\n    return this.electronAPI.getSingleSearchAttributeConfig(requestParameters) as Promise<AxiosResponse<sdk.SearchAttributeConfigV2025, any>>;\r\n}\r\npatchSearchAttributeConfig(requestParameters: sdk.SearchAttributeConfigurationV2025ApiPatchSearchAttributeConfigRequest): Promise<AxiosResponse<sdk.SearchAttributeConfigV2025, any>> {\r\n    return this.electronAPI.patchSearchAttributeConfig(requestParameters) as Promise<AxiosResponse<sdk.SearchAttributeConfigV2025, any>>;\r\n}\r\n\r\ncreateSegment(requestParameters: sdk.SegmentsV2025ApiCreateSegmentRequest): Promise<AxiosResponse<sdk.SegmentV2025, any>> {\r\n    return this.electronAPI.createSegment(requestParameters) as Promise<AxiosResponse<sdk.SegmentV2025, any>>;\r\n}\r\ndeleteSegment(requestParameters: sdk.SegmentsV2025ApiDeleteSegmentRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSegment(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetSegment(requestParameters: sdk.SegmentsV2025ApiGetSegmentRequest): Promise<AxiosResponse<sdk.SegmentV2025, any>> {\r\n    return this.electronAPI.getSegment(requestParameters) as Promise<AxiosResponse<sdk.SegmentV2025, any>>;\r\n}\r\nlistSegments(requestParameters: sdk.SegmentsV2025ApiListSegmentsRequest = {}): Promise<AxiosResponse<Array<sdk.SegmentV2025>, any>> {\r\n    return this.electronAPI.listSegments(requestParameters) as Promise<AxiosResponse<Array<sdk.SegmentV2025>, any>>;\r\n}\r\npatchSegment(requestParameters: sdk.SegmentsV2025ApiPatchSegmentRequest): Promise<AxiosResponse<sdk.SegmentV2025, any>> {\r\n    return this.electronAPI.patchSegment(requestParameters) as Promise<AxiosResponse<sdk.SegmentV2025, any>>;\r\n}\r\n\r\ncreateServiceDeskIntegration(requestParameters: sdk.ServiceDeskIntegrationV2025ApiCreateServiceDeskIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.createServiceDeskIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\ndeleteServiceDeskIntegration(requestParameters: sdk.ServiceDeskIntegrationV2025ApiDeleteServiceDeskIntegrationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteServiceDeskIntegration(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetServiceDeskIntegration(requestParameters: sdk.ServiceDeskIntegrationV2025ApiGetServiceDeskIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.getServiceDeskIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\ngetServiceDeskIntegrationTemplate(requestParameters: sdk.ServiceDeskIntegrationV2025ApiGetServiceDeskIntegrationTemplateRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationTemplateDtoV2025, any>> {\r\n    return this.electronAPI.getServiceDeskIntegrationTemplate(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationTemplateDtoV2025, any>>;\r\n}\r\ngetServiceDeskIntegrationTypes(): Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationTemplateTypeV2025>, any>> {\r\n    return this.electronAPI.getServiceDeskIntegrationTypes() as Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationTemplateTypeV2025>, any>>;\r\n}\r\ngetServiceDeskIntegrations(requestParameters: sdk.ServiceDeskIntegrationV2025ApiGetServiceDeskIntegrationsRequest = {}): Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationDtoV2025>, any>> {\r\n    return this.electronAPI.getServiceDeskIntegrations(requestParameters) as Promise<AxiosResponse<Array<sdk.ServiceDeskIntegrationDtoV2025>, any>>;\r\n}\r\ngetStatusCheckDetails(): Promise<AxiosResponse<sdk.QueuedCheckConfigDetailsV2025, any>> {\r\n    return this.electronAPI.getStatusCheckDetails() as Promise<AxiosResponse<sdk.QueuedCheckConfigDetailsV2025, any>>;\r\n}\r\npatchServiceDeskIntegration(requestParameters: sdk.ServiceDeskIntegrationV2025ApiPatchServiceDeskIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.patchServiceDeskIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\nputServiceDeskIntegration(requestParameters: sdk.ServiceDeskIntegrationV2025ApiPutServiceDeskIntegrationRequest): Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>> {\r\n    return this.electronAPI.putServiceDeskIntegration(requestParameters) as Promise<AxiosResponse<sdk.ServiceDeskIntegrationDtoV2025, any>>;\r\n}\r\nupdateStatusCheckDetails(requestParameters: sdk.ServiceDeskIntegrationV2025ApiUpdateStatusCheckDetailsRequest): Promise<AxiosResponse<sdk.QueuedCheckConfigDetailsV2025, any>> {\r\n    return this.electronAPI.updateStatusCheckDetails(requestParameters) as Promise<AxiosResponse<sdk.QueuedCheckConfigDetailsV2025, any>>;\r\n}\r\n\r\ngetStatusBySourceId(requestParameters: sdk.SourceUsagesV2025ApiGetStatusBySourceIdRequest): Promise<AxiosResponse<sdk.SourceUsageStatusV2025, any>> {\r\n    return this.electronAPI.getStatusBySourceId(requestParameters) as Promise<AxiosResponse<sdk.SourceUsageStatusV2025, any>>;\r\n}\r\ngetUsagesBySourceId(requestParameters: sdk.SourceUsagesV2025ApiGetUsagesBySourceIdRequest): Promise<AxiosResponse<Array<sdk.SourceUsageV2025>, any>> {\r\n    return this.electronAPI.getUsagesBySourceId(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceUsageV2025>, any>>;\r\n}\r\n\r\ncreateProvisioningPolicy(requestParameters: sdk.SourcesV2025ApiCreateProvisioningPolicyRequest): Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>> {\r\n    return this.electronAPI.createProvisioningPolicy(requestParameters) as Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>>;\r\n}\r\ncreateSource(requestParameters: sdk.SourcesV2025ApiCreateSourceRequest): Promise<AxiosResponse<sdk.SourceV2025, any>> {\r\n    return this.electronAPI.createSource(requestParameters) as Promise<AxiosResponse<sdk.SourceV2025, any>>;\r\n}\r\ncreateSourceSchedule(requestParameters: sdk.SourcesV2025ApiCreateSourceScheduleRequest): Promise<AxiosResponse<sdk.Schedule1V2025, any>> {\r\n    return this.electronAPI.createSourceSchedule(requestParameters) as Promise<AxiosResponse<sdk.Schedule1V2025, any>>;\r\n}\r\ncreateSourceSchema(requestParameters: sdk.SourcesV2025ApiCreateSourceSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.createSourceSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\ndeleteAccountsAsync(requestParameters: sdk.SourcesV2025ApiDeleteAccountsAsyncRequest): Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>> {\r\n    return this.electronAPI.deleteAccountsAsync(requestParameters) as Promise<AxiosResponse<sdk.TaskResultDtoV2025, any>>;\r\n}\r\ndeleteNativeChangeDetectionConfig(requestParameters: sdk.SourcesV2025ApiDeleteNativeChangeDetectionConfigRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteNativeChangeDetectionConfig(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteProvisioningPolicy(requestParameters: sdk.SourcesV2025ApiDeleteProvisioningPolicyRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteProvisioningPolicy(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteSource(requestParameters: sdk.SourcesV2025ApiDeleteSourceRequest): Promise<AxiosResponse<sdk.DeleteSource202ResponseV2025, any>> {\r\n    return this.electronAPI.deleteSource(requestParameters) as Promise<AxiosResponse<sdk.DeleteSource202ResponseV2025, any>>;\r\n}\r\ndeleteSourceSchedule(requestParameters: sdk.SourcesV2025ApiDeleteSourceScheduleRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSourceSchedule(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteSourceSchema(requestParameters: sdk.SourcesV2025ApiDeleteSourceSchemaRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSourceSchema(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetAccountsSchema(requestParameters: sdk.SourcesV2025ApiGetAccountsSchemaRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.getAccountsSchema(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetCorrelationConfig(requestParameters: sdk.SourcesV2025ApiGetCorrelationConfigRequest): Promise<AxiosResponse<sdk.CorrelationConfigV2025, any>> {\r\n    return this.electronAPI.getCorrelationConfig(requestParameters) as Promise<AxiosResponse<sdk.CorrelationConfigV2025, any>>;\r\n}\r\ngetEntitlementsSchema(requestParameters: sdk.SourcesV2025ApiGetEntitlementsSchemaRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.getEntitlementsSchema(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetNativeChangeDetectionConfig(requestParameters: sdk.SourcesV2025ApiGetNativeChangeDetectionConfigRequest): Promise<AxiosResponse<sdk.NativeChangeDetectionConfigV2025, any>> {\r\n    return this.electronAPI.getNativeChangeDetectionConfig(requestParameters) as Promise<AxiosResponse<sdk.NativeChangeDetectionConfigV2025, any>>;\r\n}\r\ngetProvisioningPolicy(requestParameters: sdk.SourcesV2025ApiGetProvisioningPolicyRequest): Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>> {\r\n    return this.electronAPI.getProvisioningPolicy(requestParameters) as Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>>;\r\n}\r\ngetSource(requestParameters: sdk.SourcesV2025ApiGetSourceRequest): Promise<AxiosResponse<sdk.SourceV2025, any>> {\r\n    return this.electronAPI.getSource(requestParameters) as Promise<AxiosResponse<sdk.SourceV2025, any>>;\r\n}\r\ngetSourceAttrSyncConfig(requestParameters: sdk.SourcesV2025ApiGetSourceAttrSyncConfigRequest): Promise<AxiosResponse<sdk.AttrSyncSourceConfigV2025, any>> {\r\n    return this.electronAPI.getSourceAttrSyncConfig(requestParameters) as Promise<AxiosResponse<sdk.AttrSyncSourceConfigV2025, any>>;\r\n}\r\ngetSourceConfig(requestParameters: sdk.SourcesV2025ApiGetSourceConfigRequest): Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>> {\r\n    return this.electronAPI.getSourceConfig(requestParameters) as Promise<AxiosResponse<sdk.ConnectorDetailV2025, any>>;\r\n}\r\ngetSourceConnections(requestParameters: sdk.SourcesV2025ApiGetSourceConnectionsRequest): Promise<AxiosResponse<sdk.SourceConnectionsDtoV2025, any>> {\r\n    return this.electronAPI.getSourceConnections(requestParameters) as Promise<AxiosResponse<sdk.SourceConnectionsDtoV2025, any>>;\r\n}\r\ngetSourceEntitlementRequestConfig(requestParameters: sdk.SourcesV2025ApiGetSourceEntitlementRequestConfigRequest = {}): Promise<AxiosResponse<sdk.SourceEntitlementRequestConfigV2025, any>> {\r\n    return this.electronAPI.getSourceEntitlementRequestConfig(requestParameters) as Promise<AxiosResponse<sdk.SourceEntitlementRequestConfigV2025, any>>;\r\n}\r\ngetSourceHealth(requestParameters: sdk.SourcesV2025ApiGetSourceHealthRequest): Promise<AxiosResponse<sdk.SourceHealthDtoV2025, any>> {\r\n    return this.electronAPI.getSourceHealth(requestParameters) as Promise<AxiosResponse<sdk.SourceHealthDtoV2025, any>>;\r\n}\r\ngetSourceSchedule(requestParameters: sdk.SourcesV2025ApiGetSourceScheduleRequest): Promise<AxiosResponse<sdk.Schedule1V2025, any>> {\r\n    return this.electronAPI.getSourceSchedule(requestParameters) as Promise<AxiosResponse<sdk.Schedule1V2025, any>>;\r\n}\r\ngetSourceSchedules(requestParameters: sdk.SourcesV2025ApiGetSourceSchedulesRequest): Promise<AxiosResponse<Array<sdk.Schedule1V2025>, any>> {\r\n    return this.electronAPI.getSourceSchedules(requestParameters) as Promise<AxiosResponse<Array<sdk.Schedule1V2025>, any>>;\r\n}\r\ngetSourceSchema(requestParameters: sdk.SourcesV2025ApiGetSourceSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.getSourceSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\ngetSourceSchemas(requestParameters: sdk.SourcesV2025ApiGetSourceSchemasRequest): Promise<AxiosResponse<Array<sdk.SchemaV2025>, any>> {\r\n    return this.electronAPI.getSourceSchemas(requestParameters) as Promise<AxiosResponse<Array<sdk.SchemaV2025>, any>>;\r\n}\r\nimportAccounts(requestParameters: sdk.SourcesV2025ApiImportAccountsRequest): Promise<AxiosResponse<sdk.LoadAccountsTaskV2025, any>> {\r\n    return this.electronAPI.importAccounts(requestParameters) as Promise<AxiosResponse<sdk.LoadAccountsTaskV2025, any>>;\r\n}\r\nimportAccountsSchema(requestParameters: sdk.SourcesV2025ApiImportAccountsSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.importAccountsSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\nimportConnectorFile(requestParameters: sdk.SourcesV2025ApiImportConnectorFileRequest): Promise<AxiosResponse<sdk.SourceV2025, any>> {\r\n    return this.electronAPI.importConnectorFile(requestParameters) as Promise<AxiosResponse<sdk.SourceV2025, any>>;\r\n}\r\nimportEntitlements(requestParameters: sdk.SourcesV2025ApiImportEntitlementsRequest): Promise<AxiosResponse<sdk.LoadEntitlementTaskV2025, any>> {\r\n    return this.electronAPI.importEntitlements(requestParameters) as Promise<AxiosResponse<sdk.LoadEntitlementTaskV2025, any>>;\r\n}\r\nimportEntitlementsSchema(requestParameters: sdk.SourcesV2025ApiImportEntitlementsSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.importEntitlementsSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\nimportUncorrelatedAccounts(requestParameters: sdk.SourcesV2025ApiImportUncorrelatedAccountsRequest): Promise<AxiosResponse<sdk.LoadUncorrelatedAccountsTaskV2025, any>> {\r\n    return this.electronAPI.importUncorrelatedAccounts(requestParameters) as Promise<AxiosResponse<sdk.LoadUncorrelatedAccountsTaskV2025, any>>;\r\n}\r\nlistProvisioningPolicies(requestParameters: sdk.SourcesV2025ApiListProvisioningPoliciesRequest): Promise<AxiosResponse<Array<sdk.ProvisioningPolicyDtoV2025>, any>> {\r\n    return this.electronAPI.listProvisioningPolicies(requestParameters) as Promise<AxiosResponse<Array<sdk.ProvisioningPolicyDtoV2025>, any>>;\r\n}\r\nlistSources(requestParameters: sdk.SourcesV2025ApiListSourcesRequest = {}): Promise<AxiosResponse<Array<sdk.SourceV2025>, any>> {\r\n    return this.electronAPI.listSources(requestParameters) as Promise<AxiosResponse<Array<sdk.SourceV2025>, any>>;\r\n}\r\npingCluster(requestParameters: sdk.SourcesV2025ApiPingClusterRequest): Promise<AxiosResponse<sdk.StatusResponseV2025, any>> {\r\n    return this.electronAPI.pingCluster(requestParameters) as Promise<AxiosResponse<sdk.StatusResponseV2025, any>>;\r\n}\r\nputCorrelationConfig(requestParameters: sdk.SourcesV2025ApiPutCorrelationConfigRequest): Promise<AxiosResponse<sdk.CorrelationConfigV2025, any>> {\r\n    return this.electronAPI.putCorrelationConfig(requestParameters) as Promise<AxiosResponse<sdk.CorrelationConfigV2025, any>>;\r\n}\r\nputNativeChangeDetectionConfig(requestParameters: sdk.SourcesV2025ApiPutNativeChangeDetectionConfigRequest): Promise<AxiosResponse<sdk.NativeChangeDetectionConfigV2025, any>> {\r\n    return this.electronAPI.putNativeChangeDetectionConfig(requestParameters) as Promise<AxiosResponse<sdk.NativeChangeDetectionConfigV2025, any>>;\r\n}\r\nputProvisioningPolicy(requestParameters: sdk.SourcesV2025ApiPutProvisioningPolicyRequest): Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>> {\r\n    return this.electronAPI.putProvisioningPolicy(requestParameters) as Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>>;\r\n}\r\nputSource(requestParameters: sdk.SourcesV2025ApiPutSourceRequest): Promise<AxiosResponse<sdk.SourceV2025, any>> {\r\n    return this.electronAPI.putSource(requestParameters) as Promise<AxiosResponse<sdk.SourceV2025, any>>;\r\n}\r\nputSourceAttrSyncConfig(requestParameters: sdk.SourcesV2025ApiPutSourceAttrSyncConfigRequest): Promise<AxiosResponse<sdk.AttrSyncSourceConfigV2025, any>> {\r\n    return this.electronAPI.putSourceAttrSyncConfig(requestParameters) as Promise<AxiosResponse<sdk.AttrSyncSourceConfigV2025, any>>;\r\n}\r\nputSourceSchema(requestParameters: sdk.SourcesV2025ApiPutSourceSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.putSourceSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\nsearchResourceObjects(requestParameters: sdk.SourcesV2025ApiSearchResourceObjectsRequest): Promise<AxiosResponse<sdk.ResourceObjectsResponseV2025, any>> {\r\n    return this.electronAPI.searchResourceObjects(requestParameters) as Promise<AxiosResponse<sdk.ResourceObjectsResponseV2025, any>>;\r\n}\r\nsyncAttributesForSource(requestParameters: sdk.SourcesV2025ApiSyncAttributesForSourceRequest): Promise<AxiosResponse<sdk.SourceSyncJobV2025, any>> {\r\n    return this.electronAPI.syncAttributesForSource(requestParameters) as Promise<AxiosResponse<sdk.SourceSyncJobV2025, any>>;\r\n}\r\ntestSourceConfiguration(requestParameters: sdk.SourcesV2025ApiTestSourceConfigurationRequest): Promise<AxiosResponse<sdk.StatusResponseV2025, any>> {\r\n    return this.electronAPI.testSourceConfiguration(requestParameters) as Promise<AxiosResponse<sdk.StatusResponseV2025, any>>;\r\n}\r\ntestSourceConnection(requestParameters: sdk.SourcesV2025ApiTestSourceConnectionRequest): Promise<AxiosResponse<sdk.StatusResponseV2025, any>> {\r\n    return this.electronAPI.testSourceConnection(requestParameters) as Promise<AxiosResponse<sdk.StatusResponseV2025, any>>;\r\n}\r\nupdatePasswordPolicyHolders(requestParameters: sdk.SourcesV2025ApiUpdatePasswordPolicyHoldersRequest): Promise<AxiosResponse<Array<sdk.PasswordPolicyHoldersDtoInnerV2025>, any>> {\r\n    return this.electronAPI.updatePasswordPolicyHolders(requestParameters) as Promise<AxiosResponse<Array<sdk.PasswordPolicyHoldersDtoInnerV2025>, any>>;\r\n}\r\nupdateProvisioningPoliciesInBulk(requestParameters: sdk.SourcesV2025ApiUpdateProvisioningPoliciesInBulkRequest): Promise<AxiosResponse<Array<sdk.ProvisioningPolicyDtoV2025>, any>> {\r\n    return this.electronAPI.updateProvisioningPoliciesInBulk(requestParameters) as Promise<AxiosResponse<Array<sdk.ProvisioningPolicyDtoV2025>, any>>;\r\n}\r\nupdateProvisioningPolicy(requestParameters: sdk.SourcesV2025ApiUpdateProvisioningPolicyRequest): Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>> {\r\n    return this.electronAPI.updateProvisioningPolicy(requestParameters) as Promise<AxiosResponse<sdk.ProvisioningPolicyDtoV2025, any>>;\r\n}\r\nupdateSource(requestParameters: sdk.SourcesV2025ApiUpdateSourceRequest): Promise<AxiosResponse<sdk.SourceV2025, any>> {\r\n    return this.electronAPI.updateSource(requestParameters) as Promise<AxiosResponse<sdk.SourceV2025, any>>;\r\n}\r\nupdateSourceEntitlementRequestConfig(requestParameters: sdk.SourcesV2025ApiUpdateSourceEntitlementRequestConfigRequest): Promise<AxiosResponse<sdk.SourceEntitlementRequestConfigV2025, any>> {\r\n    return this.electronAPI.updateSourceEntitlementRequestConfig(requestParameters) as Promise<AxiosResponse<sdk.SourceEntitlementRequestConfigV2025, any>>;\r\n}\r\nupdateSourceSchedule(requestParameters: sdk.SourcesV2025ApiUpdateSourceScheduleRequest): Promise<AxiosResponse<sdk.Schedule1V2025, any>> {\r\n    return this.electronAPI.updateSourceSchedule(requestParameters) as Promise<AxiosResponse<sdk.Schedule1V2025, any>>;\r\n}\r\nupdateSourceSchema(requestParameters: sdk.SourcesV2025ApiUpdateSourceSchemaRequest): Promise<AxiosResponse<sdk.SchemaV2025, any>> {\r\n    return this.electronAPI.updateSourceSchema(requestParameters) as Promise<AxiosResponse<sdk.SchemaV2025, any>>;\r\n}\r\n\r\ngetSedBatchStats(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiGetSedBatchStatsRequest): Promise<AxiosResponse<sdk.SedBatchStatsV2025, any>> {\r\n    return this.electronAPI.getSedBatchStats(requestParameters) as Promise<AxiosResponse<sdk.SedBatchStatsV2025, any>>;\r\n}\r\ngetSedBatches(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiGetSedBatchesRequest = {}): Promise<AxiosResponse<Array<sdk.SedBatchRecordV2025>, any>> {\r\n    return this.electronAPI.getSedBatches(requestParameters) as Promise<AxiosResponse<Array<sdk.SedBatchRecordV2025>, any>>;\r\n}\r\nlistSeds(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiListSedsRequest = {}): Promise<AxiosResponse<Array<sdk.SedV2025>, any>> {\r\n    return this.electronAPI.listSeds(requestParameters) as Promise<AxiosResponse<Array<sdk.SedV2025>, any>>;\r\n}\r\npatchSed(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiPatchSedRequest): Promise<AxiosResponse<sdk.SedV2025, any>> {\r\n    return this.electronAPI.patchSed(requestParameters) as Promise<AxiosResponse<sdk.SedV2025, any>>;\r\n}\r\nsubmitSedApproval(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiSubmitSedApprovalRequest): Promise<AxiosResponse<Array<sdk.SedApprovalStatusV2025>, any>> {\r\n    return this.electronAPI.submitSedApproval(requestParameters) as Promise<AxiosResponse<Array<sdk.SedApprovalStatusV2025>, any>>;\r\n}\r\nsubmitSedAssignment(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiSubmitSedAssignmentRequest): Promise<AxiosResponse<sdk.SedAssignmentResponseV2025, any>> {\r\n    return this.electronAPI.submitSedAssignment(requestParameters) as Promise<AxiosResponse<sdk.SedAssignmentResponseV2025, any>>;\r\n}\r\nsubmitSedBatchRequest(requestParameters: sdk.SuggestedEntitlementDescriptionV2025ApiSubmitSedBatchRequestRequest = {}): Promise<AxiosResponse<sdk.SedBatchResponseV2025, any>> {\r\n    return this.electronAPI.submitSedBatchRequest(requestParameters) as Promise<AxiosResponse<sdk.SedBatchResponseV2025, any>>;\r\n}\r\n\r\ndeleteTaggedObject(requestParameters: sdk.TaggedObjectsV2025ApiDeleteTaggedObjectRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteTaggedObject(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ndeleteTagsToManyObject(requestParameters: sdk.TaggedObjectsV2025ApiDeleteTagsToManyObjectRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteTagsToManyObject(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetTaggedObject(requestParameters: sdk.TaggedObjectsV2025ApiGetTaggedObjectRequest): Promise<AxiosResponse<sdk.TaggedObjectV2025, any>> {\r\n    return this.electronAPI.getTaggedObject(requestParameters) as Promise<AxiosResponse<sdk.TaggedObjectV2025, any>>;\r\n}\r\nlistTaggedObjects(requestParameters: sdk.TaggedObjectsV2025ApiListTaggedObjectsRequest = {}): Promise<AxiosResponse<Array<sdk.TaggedObjectV2025>, any>> {\r\n    return this.electronAPI.listTaggedObjects(requestParameters) as Promise<AxiosResponse<Array<sdk.TaggedObjectV2025>, any>>;\r\n}\r\nlistTaggedObjectsByType(requestParameters: sdk.TaggedObjectsV2025ApiListTaggedObjectsByTypeRequest): Promise<AxiosResponse<Array<sdk.TaggedObjectV2025>, any>> {\r\n    return this.electronAPI.listTaggedObjectsByType(requestParameters) as Promise<AxiosResponse<Array<sdk.TaggedObjectV2025>, any>>;\r\n}\r\nputTaggedObject(requestParameters: sdk.TaggedObjectsV2025ApiPutTaggedObjectRequest): Promise<AxiosResponse<sdk.TaggedObjectV2025, any>> {\r\n    return this.electronAPI.putTaggedObject(requestParameters) as Promise<AxiosResponse<sdk.TaggedObjectV2025, any>>;\r\n}\r\nsetTagToObject(requestParameters: sdk.TaggedObjectsV2025ApiSetTagToObjectRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.setTagToObject(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nsetTagsToManyObjects(requestParameters: sdk.TaggedObjectsV2025ApiSetTagsToManyObjectsRequest): Promise<AxiosResponse<Array<sdk.BulkTaggedObjectResponseV2025>, any>> {\r\n    return this.electronAPI.setTagsToManyObjects(requestParameters) as Promise<AxiosResponse<Array<sdk.BulkTaggedObjectResponseV2025>, any>>;\r\n}\r\n\r\ngetPendingTaskHeaders(requestParameters: sdk.TaskManagementV2025ApiGetPendingTaskHeadersRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.getPendingTaskHeaders(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetPendingTasks(requestParameters: sdk.TaskManagementV2025ApiGetPendingTasksRequest = {}): Promise<AxiosResponse<Array<sdk.TaskStatusV2025>, any>> {\r\n    return this.electronAPI.getPendingTasks(requestParameters) as Promise<AxiosResponse<Array<sdk.TaskStatusV2025>, any>>;\r\n}\r\ngetTaskStatus(requestParameters: sdk.TaskManagementV2025ApiGetTaskStatusRequest): Promise<AxiosResponse<sdk.TaskStatusV2025, any>> {\r\n    return this.electronAPI.getTaskStatus(requestParameters) as Promise<AxiosResponse<sdk.TaskStatusV2025, any>>;\r\n}\r\ngetTaskStatusList(requestParameters: sdk.TaskManagementV2025ApiGetTaskStatusListRequest = {}): Promise<AxiosResponse<Array<sdk.TaskStatusV2025>, any>> {\r\n    return this.electronAPI.getTaskStatusList(requestParameters) as Promise<AxiosResponse<Array<sdk.TaskStatusV2025>, any>>;\r\n}\r\nupdateTaskStatus(requestParameters: sdk.TaskManagementV2025ApiUpdateTaskStatusRequest): Promise<AxiosResponse<sdk.TaskStatusV2025, any>> {\r\n    return this.electronAPI.updateTaskStatus(requestParameters) as Promise<AxiosResponse<sdk.TaskStatusV2025, any>>;\r\n}\r\n\r\ngetTenant(): Promise<AxiosResponse<sdk.TenantV2025, any>> {\r\n    return this.electronAPI.getTenant() as Promise<AxiosResponse<sdk.TenantV2025, any>>;\r\n}\r\n\r\ngetTenantContext(requestParameters: sdk.TenantContextV2025ApiGetTenantContextRequest = {}): Promise<AxiosResponse<Array<sdk.GetTenantContext200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.getTenantContext(requestParameters) as Promise<AxiosResponse<Array<sdk.GetTenantContext200ResponseInnerV2025>, any>>;\r\n}\r\npatchTenantContext(requestParameters: sdk.TenantContextV2025ApiPatchTenantContextRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.patchTenantContext(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\n\r\ncreateTransform(requestParameters: sdk.TransformsV2025ApiCreateTransformRequest): Promise<AxiosResponse<sdk.TransformReadV2025, any>> {\r\n    return this.electronAPI.createTransform(requestParameters) as Promise<AxiosResponse<sdk.TransformReadV2025, any>>;\r\n}\r\ndeleteTransform(requestParameters: sdk.TransformsV2025ApiDeleteTransformRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteTransform(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetTransform(requestParameters: sdk.TransformsV2025ApiGetTransformRequest): Promise<AxiosResponse<sdk.TransformReadV2025, any>> {\r\n    return this.electronAPI.getTransform(requestParameters) as Promise<AxiosResponse<sdk.TransformReadV2025, any>>;\r\n}\r\nlistTransforms(requestParameters: sdk.TransformsV2025ApiListTransformsRequest = {}): Promise<AxiosResponse<Array<sdk.TransformReadV2025>, any>> {\r\n    return this.electronAPI.listTransforms(requestParameters) as Promise<AxiosResponse<Array<sdk.TransformReadV2025>, any>>;\r\n}\r\nupdateTransform(requestParameters: sdk.TransformsV2025ApiUpdateTransformRequest): Promise<AxiosResponse<sdk.TransformReadV2025, any>> {\r\n    return this.electronAPI.updateTransform(requestParameters) as Promise<AxiosResponse<sdk.TransformReadV2025, any>>;\r\n}\r\n\r\ncompleteTriggerInvocation(requestParameters: sdk.TriggersV2025ApiCompleteTriggerInvocationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.completeTriggerInvocation(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ncreateSubscription(requestParameters: sdk.TriggersV2025ApiCreateSubscriptionRequest): Promise<AxiosResponse<sdk.SubscriptionV2025, any>> {\r\n    return this.electronAPI.createSubscription(requestParameters) as Promise<AxiosResponse<sdk.SubscriptionV2025, any>>;\r\n}\r\ndeleteSubscription(requestParameters: sdk.TriggersV2025ApiDeleteSubscriptionRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteSubscription(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\nlistSubscriptions(requestParameters: sdk.TriggersV2025ApiListSubscriptionsRequest): Promise<AxiosResponse<Array<sdk.SubscriptionV2025>, any>> {\r\n    return this.electronAPI.listSubscriptions(requestParameters) as Promise<AxiosResponse<Array<sdk.SubscriptionV2025>, any>>;\r\n}\r\nlistTriggerInvocationStatus(requestParameters: sdk.TriggersV2025ApiListTriggerInvocationStatusRequest = {}): Promise<AxiosResponse<Array<sdk.InvocationStatusV2025>, any>> {\r\n    return this.electronAPI.listTriggerInvocationStatus(requestParameters) as Promise<AxiosResponse<Array<sdk.InvocationStatusV2025>, any>>;\r\n}\r\nlistTriggers(requestParameters: sdk.TriggersV2025ApiListTriggersRequest = {}): Promise<AxiosResponse<Array<sdk.TriggerV2025>, any>> {\r\n    return this.electronAPI.listTriggers(requestParameters) as Promise<AxiosResponse<Array<sdk.TriggerV2025>, any>>;\r\n}\r\npatchSubscription(requestParameters: sdk.TriggersV2025ApiPatchSubscriptionRequest): Promise<AxiosResponse<sdk.SubscriptionV2025, any>> {\r\n    return this.electronAPI.patchSubscription(requestParameters) as Promise<AxiosResponse<sdk.SubscriptionV2025, any>>;\r\n}\r\nstartTestTriggerInvocation(requestParameters: sdk.TriggersV2025ApiStartTestTriggerInvocationRequest): Promise<AxiosResponse<Array<sdk.InvocationV2025>, any>> {\r\n    return this.electronAPI.startTestTriggerInvocation(requestParameters) as Promise<AxiosResponse<Array<sdk.InvocationV2025>, any>>;\r\n}\r\ntestSubscriptionFilter(requestParameters: sdk.TriggersV2025ApiTestSubscriptionFilterRequest): Promise<AxiosResponse<sdk.ValidateFilterOutputDtoV2025, any>> {\r\n    return this.electronAPI.testSubscriptionFilter(requestParameters) as Promise<AxiosResponse<sdk.ValidateFilterOutputDtoV2025, any>>;\r\n}\r\nupdateSubscription(requestParameters: sdk.TriggersV2025ApiUpdateSubscriptionRequest): Promise<AxiosResponse<sdk.SubscriptionV2025, any>> {\r\n    return this.electronAPI.updateSubscription(requestParameters) as Promise<AxiosResponse<sdk.SubscriptionV2025, any>>;\r\n}\r\n\r\ngetTenantUiMetadata(requestParameters: sdk.UIMetadataV2025ApiGetTenantUiMetadataRequest = {}): Promise<AxiosResponse<sdk.TenantUiMetadataItemResponseV2025, any>> {\r\n    return this.electronAPI.getTenantUiMetadata(requestParameters) as Promise<AxiosResponse<sdk.TenantUiMetadataItemResponseV2025, any>>;\r\n}\r\nsetTenantUiMetadata(requestParameters: sdk.UIMetadataV2025ApiSetTenantUiMetadataRequest): Promise<AxiosResponse<sdk.TenantUiMetadataItemResponseV2025, any>> {\r\n    return this.electronAPI.setTenantUiMetadata(requestParameters) as Promise<AxiosResponse<sdk.TenantUiMetadataItemResponseV2025, any>>;\r\n}\r\n\r\ncreateVendorConnectorMapping(requestParameters: sdk.VendorConnectorMappingsV2025ApiCreateVendorConnectorMappingRequest): Promise<AxiosResponse<sdk.VendorConnectorMappingV2025, any>> {\r\n    return this.electronAPI.createVendorConnectorMapping(requestParameters) as Promise<AxiosResponse<sdk.VendorConnectorMappingV2025, any>>;\r\n}\r\ndeleteVendorConnectorMapping(requestParameters: sdk.VendorConnectorMappingsV2025ApiDeleteVendorConnectorMappingRequest): Promise<AxiosResponse<sdk.DeleteVendorConnectorMapping200ResponseV2025, any>> {\r\n    return this.electronAPI.deleteVendorConnectorMapping(requestParameters) as Promise<AxiosResponse<sdk.DeleteVendorConnectorMapping200ResponseV2025, any>>;\r\n}\r\ngetVendorConnectorMappings(): Promise<AxiosResponse<Array<sdk.VendorConnectorMappingV2025>, any>> {\r\n    return this.electronAPI.getVendorConnectorMappings() as Promise<AxiosResponse<Array<sdk.VendorConnectorMappingV2025>, any>>;\r\n}\r\n\r\napproveApprovalItem(requestParameters: sdk.WorkItemsV2025ApiApproveApprovalItemRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.approveApprovalItem(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\napproveApprovalItemsInBulk(requestParameters: sdk.WorkItemsV2025ApiApproveApprovalItemsInBulkRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.approveApprovalItemsInBulk(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\ncompleteWorkItem(requestParameters: sdk.WorkItemsV2025ApiCompleteWorkItemRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.completeWorkItem(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\nforwardWorkItem(requestParameters: sdk.WorkItemsV2025ApiForwardWorkItemRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.forwardWorkItem(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetCompletedWorkItems(requestParameters: sdk.WorkItemsV2025ApiGetCompletedWorkItemsRequest = {}): Promise<AxiosResponse<Array<sdk.WorkItemsV2025>, any>> {\r\n    return this.electronAPI.getCompletedWorkItems(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkItemsV2025>, any>>;\r\n}\r\ngetCountCompletedWorkItems(requestParameters: sdk.WorkItemsV2025ApiGetCountCompletedWorkItemsRequest = {}): Promise<AxiosResponse<sdk.WorkItemsCountV2025, any>> {\r\n    return this.electronAPI.getCountCompletedWorkItems(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsCountV2025, any>>;\r\n}\r\ngetCountWorkItems(requestParameters: sdk.WorkItemsV2025ApiGetCountWorkItemsRequest = {}): Promise<AxiosResponse<sdk.WorkItemsCountV2025, any>> {\r\n    return this.electronAPI.getCountWorkItems(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsCountV2025, any>>;\r\n}\r\ngetWorkItem(requestParameters: sdk.WorkItemsV2025ApiGetWorkItemRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.getWorkItem(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\ngetWorkItemsSummary(requestParameters: sdk.WorkItemsV2025ApiGetWorkItemsSummaryRequest = {}): Promise<AxiosResponse<sdk.WorkItemsSummaryV2025, any>> {\r\n    return this.electronAPI.getWorkItemsSummary(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsSummaryV2025, any>>;\r\n}\r\nlistWorkItems(requestParameters: sdk.WorkItemsV2025ApiListWorkItemsRequest = {}): Promise<AxiosResponse<Array<sdk.WorkItemsV2025>, any>> {\r\n    return this.electronAPI.listWorkItems(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkItemsV2025>, any>>;\r\n}\r\nrejectApprovalItem(requestParameters: sdk.WorkItemsV2025ApiRejectApprovalItemRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.rejectApprovalItem(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\nrejectApprovalItemsInBulk(requestParameters: sdk.WorkItemsV2025ApiRejectApprovalItemsInBulkRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.rejectApprovalItemsInBulk(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\nsubmitAccountSelection(requestParameters: sdk.WorkItemsV2025ApiSubmitAccountSelectionRequest): Promise<AxiosResponse<sdk.WorkItemsV2025, any>> {\r\n    return this.electronAPI.submitAccountSelection(requestParameters) as Promise<AxiosResponse<sdk.WorkItemsV2025, any>>;\r\n}\r\n\r\ncreateReassignmentConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiCreateReassignmentConfigurationRequest): Promise<AxiosResponse<sdk.ConfigurationItemResponseV2025, any>> {\r\n    return this.electronAPI.createReassignmentConfiguration(requestParameters) as Promise<AxiosResponse<sdk.ConfigurationItemResponseV2025, any>>;\r\n}\r\ndeleteReassignmentConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiDeleteReassignmentConfigurationRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteReassignmentConfiguration(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetEvaluateReassignmentConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiGetEvaluateReassignmentConfigurationRequest): Promise<AxiosResponse<Array<sdk.EvaluateResponseV2025>, any>> {\r\n    return this.electronAPI.getEvaluateReassignmentConfiguration(requestParameters) as Promise<AxiosResponse<Array<sdk.EvaluateResponseV2025>, any>>;\r\n}\r\ngetReassignmentConfigTypes(requestParameters: sdk.WorkReassignmentV2025ApiGetReassignmentConfigTypesRequest = {}): Promise<AxiosResponse<Array<sdk.ConfigTypeV2025>, any>> {\r\n    return this.electronAPI.getReassignmentConfigTypes(requestParameters) as Promise<AxiosResponse<Array<sdk.ConfigTypeV2025>, any>>;\r\n}\r\ngetReassignmentConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiGetReassignmentConfigurationRequest): Promise<AxiosResponse<sdk.ConfigurationResponseV2025, any>> {\r\n    return this.electronAPI.getReassignmentConfiguration(requestParameters) as Promise<AxiosResponse<sdk.ConfigurationResponseV2025, any>>;\r\n}\r\ngetTenantConfigConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiGetTenantConfigConfigurationRequest = {}): Promise<AxiosResponse<sdk.TenantConfigurationResponseV2025, any>> {\r\n    return this.electronAPI.getTenantConfigConfiguration(requestParameters) as Promise<AxiosResponse<sdk.TenantConfigurationResponseV2025, any>>;\r\n}\r\nlistReassignmentConfigurations(requestParameters: sdk.WorkReassignmentV2025ApiListReassignmentConfigurationsRequest = {}): Promise<AxiosResponse<Array<sdk.ConfigurationResponseV2025>, any>> {\r\n    return this.electronAPI.listReassignmentConfigurations(requestParameters) as Promise<AxiosResponse<Array<sdk.ConfigurationResponseV2025>, any>>;\r\n}\r\nputReassignmentConfig(requestParameters: sdk.WorkReassignmentV2025ApiPutReassignmentConfigRequest): Promise<AxiosResponse<sdk.ConfigurationItemResponseV2025, any>> {\r\n    return this.electronAPI.putReassignmentConfig(requestParameters) as Promise<AxiosResponse<sdk.ConfigurationItemResponseV2025, any>>;\r\n}\r\nputTenantConfiguration(requestParameters: sdk.WorkReassignmentV2025ApiPutTenantConfigurationRequest): Promise<AxiosResponse<sdk.TenantConfigurationResponseV2025, any>> {\r\n    return this.electronAPI.putTenantConfiguration(requestParameters) as Promise<AxiosResponse<sdk.TenantConfigurationResponseV2025, any>>;\r\n}\r\n\r\ncancelWorkflowExecution(requestParameters: sdk.WorkflowsV2025ApiCancelWorkflowExecutionRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.cancelWorkflowExecution(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ncreateExternalExecuteWorkflow(requestParameters: sdk.WorkflowsV2025ApiCreateExternalExecuteWorkflowRequest): Promise<AxiosResponse<sdk.CreateExternalExecuteWorkflow200ResponseV2025, any>> {\r\n    return this.electronAPI.createExternalExecuteWorkflow(requestParameters) as Promise<AxiosResponse<sdk.CreateExternalExecuteWorkflow200ResponseV2025, any>>;\r\n}\r\ncreateWorkflow(requestParameters: sdk.WorkflowsV2025ApiCreateWorkflowRequest): Promise<AxiosResponse<sdk.WorkflowV2025, any>> {\r\n    return this.electronAPI.createWorkflow(requestParameters) as Promise<AxiosResponse<sdk.WorkflowV2025, any>>;\r\n}\r\ncreateWorkflowExternalTrigger(requestParameters: sdk.WorkflowsV2025ApiCreateWorkflowExternalTriggerRequest): Promise<AxiosResponse<sdk.WorkflowOAuthClientV2025, any>> {\r\n    return this.electronAPI.createWorkflowExternalTrigger(requestParameters) as Promise<AxiosResponse<sdk.WorkflowOAuthClientV2025, any>>;\r\n}\r\ndeleteWorkflow(requestParameters: sdk.WorkflowsV2025ApiDeleteWorkflowRequest): Promise<AxiosResponse<void, any>> {\r\n    return this.electronAPI.deleteWorkflow(requestParameters) as Promise<AxiosResponse<void, any>>;\r\n}\r\ngetWorkflow(requestParameters: sdk.WorkflowsV2025ApiGetWorkflowRequest): Promise<AxiosResponse<sdk.WorkflowV2025, any>> {\r\n    return this.electronAPI.getWorkflow(requestParameters) as Promise<AxiosResponse<sdk.WorkflowV2025, any>>;\r\n}\r\ngetWorkflowExecution(requestParameters: sdk.WorkflowsV2025ApiGetWorkflowExecutionRequest): Promise<AxiosResponse<object, any>> {\r\n    return this.electronAPI.getWorkflowExecution(requestParameters) as Promise<AxiosResponse<object, any>>;\r\n}\r\ngetWorkflowExecutionHistory(requestParameters: sdk.WorkflowsV2025ApiGetWorkflowExecutionHistoryRequest): Promise<AxiosResponse<Array<sdk.WorkflowExecutionEventV2025>, any>> {\r\n    return this.electronAPI.getWorkflowExecutionHistory(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkflowExecutionEventV2025>, any>>;\r\n}\r\ngetWorkflowExecutions(requestParameters: sdk.WorkflowsV2025ApiGetWorkflowExecutionsRequest): Promise<AxiosResponse<Array<sdk.WorkflowExecutionV2025>, any>> {\r\n    return this.electronAPI.getWorkflowExecutions(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkflowExecutionV2025>, any>>;\r\n}\r\nlistCompleteWorkflowLibrary(requestParameters: sdk.WorkflowsV2025ApiListCompleteWorkflowLibraryRequest = {}): Promise<AxiosResponse<Array<sdk.ListCompleteWorkflowLibrary200ResponseInnerV2025>, any>> {\r\n    return this.electronAPI.listCompleteWorkflowLibrary(requestParameters) as Promise<AxiosResponse<Array<sdk.ListCompleteWorkflowLibrary200ResponseInnerV2025>, any>>;\r\n}\r\nlistWorkflowLibraryActions(requestParameters: sdk.WorkflowsV2025ApiListWorkflowLibraryActionsRequest = {}): Promise<AxiosResponse<Array<sdk.WorkflowLibraryActionV2025>, any>> {\r\n    return this.electronAPI.listWorkflowLibraryActions(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkflowLibraryActionV2025>, any>>;\r\n}\r\nlistWorkflowLibraryOperators(): Promise<AxiosResponse<Array<sdk.WorkflowLibraryOperatorV2025>, any>> {\r\n    return this.electronAPI.listWorkflowLibraryOperators() as Promise<AxiosResponse<Array<sdk.WorkflowLibraryOperatorV2025>, any>>;\r\n}\r\nlistWorkflowLibraryTriggers(requestParameters: sdk.WorkflowsV2025ApiListWorkflowLibraryTriggersRequest = {}): Promise<AxiosResponse<Array<sdk.WorkflowLibraryTriggerV2025>, any>> {\r\n    return this.electronAPI.listWorkflowLibraryTriggers(requestParameters) as Promise<AxiosResponse<Array<sdk.WorkflowLibraryTriggerV2025>, any>>;\r\n}\r\nlistWorkflows(): Promise<AxiosResponse<Array<sdk.WorkflowV2025>, any>> {\r\n    return this.electronAPI.listWorkflows() as Promise<AxiosResponse<Array<sdk.WorkflowV2025>, any>>;\r\n}\r\npatchWorkflow(requestParameters: sdk.WorkflowsV2025ApiPatchWorkflowRequest): Promise<AxiosResponse<sdk.WorkflowV2025, any>> {\r\n    return this.electronAPI.patchWorkflow(requestParameters) as Promise<AxiosResponse<sdk.WorkflowV2025, any>>;\r\n}\r\nputWorkflow(requestParameters: sdk.WorkflowsV2025ApiPutWorkflowRequest): Promise<AxiosResponse<sdk.WorkflowV2025, any>> {\r\n    return this.electronAPI.putWorkflow(requestParameters) as Promise<AxiosResponse<sdk.WorkflowV2025, any>>;\r\n}\r\ntestExternalExecuteWorkflow(requestParameters: sdk.WorkflowsV2025ApiTestExternalExecuteWorkflowRequest): Promise<AxiosResponse<sdk.TestExternalExecuteWorkflow200ResponseV2025, any>> {\r\n    return this.electronAPI.testExternalExecuteWorkflow(requestParameters) as Promise<AxiosResponse<sdk.TestExternalExecuteWorkflow200ResponseV2025, any>>;\r\n}\r\ntestWorkflow(requestParameters: sdk.WorkflowsV2025ApiTestWorkflowRequest): Promise<AxiosResponse<sdk.TestWorkflow200ResponseV2025, any>> {\r\n    return this.electronAPI.testWorkflow(requestParameters) as Promise<AxiosResponse<sdk.TestWorkflow200ResponseV2025, any>>;\r\n}\r\n\r\n}","import { CommonModule } from '@angular/common';\r\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport * as Prism from 'prismjs';\r\nimport 'prismjs/components/prism-json';\r\n\r\nexport interface DialogData {\r\n  title?: string;\r\n  message: string;\r\n  showSpinner?: boolean;\r\n  showCancel?: boolean;\r\n  disableClose?: boolean;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  isConfirmation?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-generic-dialog',\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n  ],\r\n  template: `\r\n    <h1 mat-dialog-title>\r\n      <mat-icon *ngIf=\"data.showSpinner\" class=\"title-icon\">{{\r\n        getTitleIcon()\r\n      }}</mat-icon>\r\n      {{ data.title || 'Notification' }}\r\n    </h1>\r\n\r\n    <div mat-dialog-content class=\"dialog-content\">\r\n      <div *ngIf=\"data.showSpinner\" class=\"spinner-container\">\r\n        <mat-spinner diameter=\"40\"></mat-spinner>\r\n      </div>\r\n      <div class=\"copy-container\" *ngIf=\"isJsonMessage\">\r\n        <button\r\n          id=\"copyButton\"\r\n          mat-icon-button\r\n          (click)=\"copyToClipboard()\"\r\n          matTooltip=\"Copy to clipboard\"\r\n        >\r\n          <mat-icon>content_copy</mat-icon>\r\n        </button>\r\n      </div>\r\n      <ng-container *ngIf=\"!isUnsavedChangesPrompt\">\r\n        <pre class=\"dialog-message json-message\" *ngIf=\"isJsonMessage\"><code class=\"language-json\" [innerHTML]=\"highlightedJson\"></code></pre>\r\n        <pre class=\"dialog-message text-message\" *ngIf=\"!isJsonMessage\">{{ formattedMessage }}</pre>\r\n      </ng-container>\r\n      <p *ngIf=\"data.showSpinner && isOAuthFlow()\" class=\"oauth-instruction\">\r\n        <mat-icon class=\"info-icon\">info</mat-icon>\r\n        Please complete the authentication in your browser window and return\r\n        here.\r\n      </p>\r\n    </div>\r\n\r\n    <div mat-dialog-actions align=\"end\">\r\n      <!-- Confirmation Dialog Buttons -->\r\n      <ng-container *ngIf=\"data.isConfirmation\">\r\n        <button mat-button (click)=\"onCancel()\">\r\n          {{ data.cancelText || 'Cancel' }}\r\n        </button>\r\n        <button mat-raised-button color=\"warn\" (click)=\"onConfirm()\">\r\n          {{ data.confirmText || 'Confirm' }}\r\n        </button>\r\n      </ng-container>\r\n\r\n      <!-- Standard Dialog Button -->\r\n      <button\r\n        id=\"closeButton\"\r\n        mat-button\r\n        (click)=\"onClose()\"\r\n        *ngIf=\"!data.isConfirmation && data.showCancel !== false\"\r\n      >\r\n        {{ data.showSpinner ? 'Cancel' : 'Close' }}\r\n      </button>\r\n\r\n      <ng-container *ngIf=\"isUnsavedChangesPrompt\">\r\n        <button mat-button color=\"warn\" (click)=\"onDiscard()\">Discard</button>\r\n        <button mat-button color=\"primary\" (click)=\"onSave()\">Save</button>\r\n      </ng-container>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n      }\r\n\r\n      .mat-mdc-dialog-content>:first-child {\r\n        margin-top: 15px !important;\r\n      }\r\n\r\n      .mat-mdc-icon-button .mat-mdc-button-persistent-ripple {\r\n        border-radius: 0.5rem !important;\r\n      }\r\n      \r\n      .mat-mdc-dialog-content {\r\n        max-height: none !important;\r\n        overflow: visible !important;\r\n      }\r\n\r\n      .dark-theme #closeButton {\r\n        color: var(--theme-primary) !important;;\r\n        background-color: #1e1e1e !important;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid var(--theme-primary) !important;\r\n      }\r\n\r\n      .dark-theme #closeButton:hover {\r\n        background-color: var(--theme-primary) !important;;\r\n        color: #ffffff;\r\n        border: 1px solid var(--theme-primary) !important;;\r\n      }\r\n\r\n      #closeButton {\r\n        color: #0033a1 !important;\r\n        background-color: #ffffff !important;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid #0033a1;\r\n      }\r\n\r\n      #closeButton:hover {\r\n        background-color: #0033a1 !important;\r\n        color: #ffffff !important;\r\n      }\r\n      \r\n      .dialog-content {\r\n        min-width: 300px;\r\n        padding: 20px 0;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      .spinner-container {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 20px 0;\r\n      }\r\n\r\n      .copy-container {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin-bottom: -48px;\r\n        margin-right: 20px;\r\n      }\r\n\r\n      .dialog-message {\r\n        margin: 0;\r\n        padding: 16px;\r\n        overflow-x: auto;\r\n        border-radius: 4px;\r\n        font-family: 'Fira Code', monospace;\r\n        white-space: pre-wrap;\r\n        word-wrap: break-word;\r\n        max-width: 100%;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      /* Light theme styles */\r\n      .dialog-message.json-message {\r\n        background-color: #f8f8f2;\r\n        color: #282c34;\r\n        border: 1px solid #e0e0e0;\r\n        max-height: 600px;\r\n        overflow-y: auto;\r\n      }\r\n\r\n      .dialog-message.text-message {\r\n        background: none;\r\n        color: #333;\r\n        border: none;\r\n      }\r\n\r\n      /* Dark theme styles */\r\n      .dark-theme .dialog-message.json-message {\r\n        background-color: #282c34;\r\n        color: #f8f8f2;\r\n        border: 1px solid #444;\r\n      }\r\n\r\n      .dark-theme .dialog-message.text-message {\r\n        background: none;\r\n        color: #f0f0f0;\r\n        border: none;\r\n      }\r\n\r\n      .dark-theme .oauth-instruction {\r\n        background-color: #1a237e;\r\n        color: #90caf9;\r\n        border-left-color: #2196f3;\r\n      }\r\n\r\n      .dialog-message code {\r\n        display: block;\r\n        padding: 0;\r\n        background: none;\r\n        font-family: inherit;\r\n        font-size: 14px;\r\n        line-height: 1.4;\r\n      }\r\n\r\n      .oauth-instruction {\r\n        background-color: #e3f2fd;\r\n        padding: 12px;\r\n        border-radius: 4px;\r\n        border-left: 3px solid #2196f3;\r\n        margin: 16px 0 0 0;\r\n        font-size: 13px;\r\n        color: #1976d2;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .info-icon {\r\n        font-size: 16px;\r\n        width: 16px;\r\n        height: 16px;\r\n        color: #2196f3;\r\n      }\r\n\r\n      .title-icon {\r\n        margin-right: 8px;\r\n        vertical-align: middle;\r\n      }\r\n\r\n      h1[mat-dialog-title] {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      #copyButton {\r\n        border: none !important;\r\n      }\r\n    `,\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class GenericDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GenericDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  get isUnsavedChangesPrompt(): boolean {\r\n    return (\r\n      this.data.message?.trim() ===\r\n      'You have unsaved changes. Do you want to save them before leaving?'\r\n    );\r\n  }\r\n\r\n  onSave() {\r\n    this.dialogRef.close('confirm');\r\n  }\r\n\r\n  onDiscard() {\r\n    this.dialogRef.close('discard');\r\n  }\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onConfirm(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  getTitleIcon(): string {\r\n    if (this.data.title?.includes('Successful')) {\r\n      return 'check_circle';\r\n    } else if (\r\n      this.data.title?.includes('Failed') ||\r\n      this.data.title?.includes('Error')\r\n    ) {\r\n      return 'error';\r\n    } else {\r\n      return 'login';\r\n    }\r\n  }\r\n\r\n  get formattedMessage(): string {\r\n    try {\r\n      return JSON.stringify(JSON.parse(this.data.message), null, 2);\r\n    } catch {\r\n      return this.data.message;\r\n    }\r\n  }\r\n\r\n  get isJsonMessage(): boolean {\r\n    try {\r\n      JSON.parse(this.data.message);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get highlightedJson(): string {\r\n    try {\r\n      const json = JSON.stringify(JSON.parse(this.data.message), null, 2);\r\n      return Prism.highlight(json, Prism.languages.json, 'json');\r\n    } catch {\r\n      return this.data.message;\r\n    }\r\n  }\r\n\r\n  copyToClipboard(): void {\r\n    const textToCopy = this.formattedMessage;\r\n    void window.navigator.clipboard.writeText(textToCopy).then(() => {\r\n      // Optional: show some feedback\r\n      console.log('Copied to clipboard');\r\n    });\r\n  }\r\n\r\n  isOAuthFlow(): boolean {\r\n    return (\r\n      this.data.title?.includes('OAuth') ||\r\n      this.data.message?.includes('OAuth') ||\r\n      this.data.message?.includes('browser')\r\n    );\r\n  }\r\n}","// Angular core and module imports\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n// Search bar component definition\r\n@Component({\r\n  selector: 'app-search-bar', // Component selector for use in templates\r\n  standalone: true,           // Allows this component to be used without needing to be declared in a module\r\n  imports: [CommonModule, FormsModule, MatFormFieldModule, MatInputModule], // Modules this component depends on\r\n  templateUrl: './search-bar.component.html', // HTML template file\r\n  styleUrl: './search-bar.component.scss',    // SCSS style file\r\n})\r\nexport class SearchBarComponent {\r\n  // Input: full dataset to locally filter against\r\n  @Input() data: any[] = [];\r\n\r\n  // Input: placeholder text for the search input\r\n  @Input() placeholder = 'Search...';\r\n\r\n  // Output: emits filtered results if local filtering is performed\r\n  @Output() filtered = new EventEmitter<any[]>();\r\n\r\n  // Output: emits a search string if API-based search is triggered\r\n  @Output() searchApi = new EventEmitter<string>();\r\n\r\n  // Two-way bound model for the input field\r\n  searchQuery = '';\r\n\r\n  // Handler called when user types in the search box\r\n  onSearch(query: string): void {\r\n    this.searchQuery = query;\r\n    const lowerQuery = query.trim().toLowerCase();\r\n\r\n    // If the search box is cleared, emit the full dataset\r\n    if (!lowerQuery) {\r\n      this.filtered.emit(this.data);\r\n      return;\r\n    }\r\n\r\n    // If query is at least 3 characters, trigger remote API search\r\n    if (lowerQuery.length >= 3) {\r\n      this.searchApi.emit(lowerQuery);\r\n      return;\r\n    }\r\n\r\n    // Fallback: perform basic local filtering on all item values\r\n    const result = this.data.filter((item) => {\r\n      // Ensure item is a valid object before calling Object.values\r\n      if (item && typeof item === 'object' && item !== null) {\r\n        // Type assertion to Record<string, unknown> for type safety\r\n        return Object.values(item as Record<string, unknown>).some((val) => {\r\n          if (val === null || val === undefined) {\r\n            return false;\r\n          }\r\n    \r\n          if (typeof val === 'object') {\r\n            // Handle objects explicitly (e.g., check specific properties or skip them)\r\n            return false; // Skip objects to avoid default stringification\r\n          }\r\n    \r\n          // Ensure val is a string, number, or boolean before calling .toString()\r\n          if (typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean') {\r\n            return val.toString().toLowerCase().includes(lowerQuery);\r\n          }\r\n\r\n          return false; // Skip unsupported types\r\n        });\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.filtered.emit(result);\r\n  }\r\n}\r\n","<mat-form-field appearance=\"fill\" class=\"custom-fill-field\">\r\n  <mat-label>{{ placeholder }}</mat-label>\r\n  <input\r\n    matInput\r\n    type=\"text\"\r\n    [(ngModel)]=\"searchQuery\"\r\n    (ngModelChange)=\"onSearch($event)\"\r\n    placeholder=\"Search...\"\r\n  />\r\n</mat-form-field>\r\n","// Angular core and drag-drop imports\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  DragDropModule,\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-column-customizer', // Component selector for template usage\r\n  standalone: true, // Allows standalone usage without needing module declarations\r\n  imports: [CommonModule, DragDropModule, MatButtonModule], // Modules needed for this component\r\n  templateUrl: './column-customizer.component.html', // Component template\r\n  styleUrl: './column-customizer.component.scss', // Component styles\r\n})\r\nexport class ColumnCustomizerComponent {\r\n  // List of all available columns\r\n  @Input() allColumns: string[] = [];\r\n\r\n  // List of currently visible columns\r\n  @Input() displayedColumns: string[] = [];\r\n\r\n  // Emits the updated list of displayed columns\r\n  @Output() displayedColumnsChange = new EventEmitter<string[]>();\r\n\r\n  // Controls visibility of the selector panel\r\n  showSelector = false;\r\n\r\n  // Reference to the selector panel element for click outside detection\r\n  @ViewChild('panelRef') panelRef!: ElementRef;\r\n\r\n  // Toggles the visibility of the column selector panel\r\n  toggleSelector(): void {\r\n    this.showSelector = !this.showSelector;\r\n  }\r\n\r\n  // Handles drag-and-drop reordering of columns\r\n  dropColumn(event: CdkDragDrop<string[]>): void {\r\n    moveItemInArray(this.allColumns, event.previousIndex, event.currentIndex);\r\n    this.syncVisibleColumns(); // Ensure visible column order is also updated\r\n  }\r\n\r\n  // Toggles visibility of a specific column\r\n  toggleColumn(column: string): void {\r\n    const index = this.displayedColumns.indexOf(column);\r\n\r\n    if (index > -1) {\r\n      // If currently visible, remove from the visible list\r\n      this.displayedColumns.splice(index, 1);\r\n    } else {\r\n      // If not visible, add it\r\n      this.displayedColumns.push(column);\r\n    }\r\n\r\n    this.syncVisibleColumns();\r\n  }\r\n\r\n  // Check if a column is currently visible\r\n  isDisplayed(column: string): boolean {\r\n    return this.displayedColumns.includes(column);\r\n  }\r\n\r\n  // Syncs the order of visible columns and emits the updated list\r\n  syncVisibleColumns(): void {\r\n    const ordered = this.allColumns.filter((col) =>\r\n      this.displayedColumns.includes(col)\r\n    );\r\n    this.displayedColumnsChange.emit([...ordered]);\r\n  }\r\n\r\n  // Listens for clicks anywhere on the document\r\n  // If a click happens outside the selector panel and toggle button, close the panel\r\n  @HostListener('document:click', ['$event'])\r\n  handleClickOutside(event: MouseEvent): void {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (\r\n      this.showSelector &&\r\n      this.panelRef &&\r\n      !this.panelRef.nativeElement.contains(target) &&\r\n      !target.closest('.customizeColumnsToggle')\r\n    ) {\r\n      this.showSelector = false;\r\n    }\r\n  }\r\n}\r\n","<!-- Trigger -->\r\n<button mat-raised-button class=\"customizeColumnsToggle\" (click)=\"toggleSelector()\">\r\n  Customize Columns\r\n</button>\r\n\r\n<!-- Dropdown Panel -->\r\n<div\r\n  #panelRef\r\n  class=\"dropdown-panel\"\r\n  *ngIf=\"showSelector\"\r\n  cdkDropList\r\n  (cdkDropListDropped)=\"dropColumn($event)\"\r\n>\r\n  <div\r\n    class=\"column-option\"\r\n    *ngFor=\"let col of allColumns\"\r\n    cdkDrag\r\n  >\r\n    <input\r\n      type=\"checkbox\"\r\n      [checked]=\"isDisplayed(col)\"\r\n      (change)=\"toggleColumn(col)\"\r\n    />\r\n    {{ col }}\r\n    <span class=\"drag-handle\">☰</span>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  MatPaginator,\r\n  MatPaginatorModule,\r\n  PageEvent,\r\n} from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n// SailPoint types and services\r\nimport {\r\n  IdentityV2025,\r\n  SearchDocumentsV2025,\r\n  SearchV2025ApiSearchPostRequest,\r\n} from 'sailpoint-api-client';\r\nimport { SailPointSDKService } from '../sailpoint-sdk.service';\r\n\r\n// Local components\r\nimport { GenericDialogComponent } from '../generic-dialog/generic-dialog.component';\r\nimport { SearchBarComponent } from './utils/search-bar/search-bar.component';\r\nimport { ColumnCustomizerComponent } from './utils/column-customizer/column-customizer.component';\r\n\r\n@Component({\r\n  selector: 'app-identities',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    SearchBarComponent,\r\n    ColumnCustomizerComponent,\r\n  ],\r\n  templateUrl: './identities.component.html',\r\n  styleUrl: './identities.component.scss',\r\n})\r\nexport class IdentitiesComponent implements OnInit {\r\n  title = 'Identities';\r\n\r\n  // Table and search state\r\n  identities: IdentityV2025[] & Record<string, unknown>[] = [];\r\n  filteredIdentities: IdentityV2025[] & Record<string, unknown>[] = [];\r\n\r\n  // Column state\r\n  columnOrder: string[] = [];\r\n  displayedColumns: string[] = [];\r\n  allColumns: string[] = [];\r\n\r\n  // Pagination and loading state\r\n  loading = false;\r\n  hasDataLoaded = false;\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  totalCount = 0;\r\n\r\n  // Sorting state\r\n  sorters: string[] = [];\r\n\r\n  // Optional for user context\r\n  profileId = '';\r\n\r\n  // Define sortable fields and column display name mapping\r\n  readonly sortableFields = ['name', 'alias', 'identityStatus'];\r\n  readonly sortFieldMap: Record<string, string> = {\r\n    identityStatus: 'cloudStatus',\r\n  };\r\n  readonly columnDisplayNames: Record<string, string> = {\r\n    alias: 'Username',\r\n    emailAddress: 'Email',\r\n    lifecycleState: 'Lifecycle State',\r\n    name: 'Name',\r\n    viewAction: 'Action',\r\n  };\r\n\r\n  // Access paginator component\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private sdk: SailPointSDKService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Load initial data\r\n    void this.loadIdentities();\r\n  }\r\n\r\n  async loadIdentities() {\r\n    this.loading = true;\r\n    this.hasDataLoaded = false;\r\n\r\n    try {\r\n      // Setup request for paged identity results\r\n      const offset = this.pageIndex * this.pageSize;\r\n      const limit = this.pageSize;\r\n      const sortersParam = this.sorters.join(',');\r\n\r\n      const request = {\r\n        offset,\r\n        limit,\r\n        count: true,\r\n        sorters: sortersParam || undefined,\r\n      };\r\n\r\n      // Fetch data\r\n      const response = await this.sdk.listIdentities(request);\r\n      this.identities = (response.data ?? []) as IdentityV2025[] &\r\n        Record<string, unknown>[];\r\n\r\n      // Extract total count from headers (if present)\r\n      let count: number | undefined;\r\n      if (\r\n        response.headers &&\r\n        typeof (response.headers as any).get === 'function'\r\n      ) {\r\n        const headerValue = (response.headers as any).get('X-Total-Count');\r\n        count = headerValue ? Number(headerValue) : undefined;\r\n      } else if (\r\n        response.headers &&\r\n        typeof (response.headers as any)['x-total-count'] !== 'undefined'\r\n      ) {\r\n        count = Number((response.headers as any)['x-total-count']);\r\n      }\r\n\r\n      this.totalCount = count ?? 500;\r\n\r\n      // Initialize columns if first load\r\n      if (this.allColumns.length === 0 && this.identities.length > 0) {\r\n        this.allColumns = Object.keys(this.identities[0]);\r\n        this.columnOrder = [...this.allColumns];\r\n\r\n        if (!this.columnOrder.includes('viewAction')) {\r\n          this.columnOrder.push('viewAction');\r\n        }\r\n\r\n        this.displayedColumns = [\r\n          'alias',\r\n          'emailAddress',\r\n          'name',\r\n          'lifecycleState',\r\n        ];\r\n        if (!this.displayedColumns.includes('viewAction')) {\r\n          this.displayedColumns.push('viewAction');\r\n        }\r\n      }\r\n\r\n      this.filteredIdentities = [...this.identities];\r\n      this.hasDataLoaded = true;\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n      this.openMessageDialog(\r\n        'Error loading identities: ' + String(error),\r\n        'Error'\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  // Remote API search\r\n  async onRemoteSearch(query: string): Promise<void> {\r\n    if (!query || query.length < 3) return;\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      // Build search query\r\n      let queryString = ``;\r\n      if (query.trim()) {\r\n        const escaped = query.replace(/\"/g, '\\\\\"');\r\n        queryString += `(name:*${escaped}*) OR (alias:*${escaped}*) OR (emailAddress:*${escaped}*) OR (lifecycleState:*${escaped}*)`;\r\n      }\r\n\r\n      const request: SearchV2025ApiSearchPostRequest = {\r\n        searchV2025: {\r\n          indices: ['identities'],\r\n          query: { query: queryString },\r\n          sort: ['name'],\r\n        },\r\n        limit: 250,\r\n      };\r\n\r\n      // Call search endpoint\r\n      const { data: identities } = await this.sdk.searchPost(request);\r\n\r\n      // Transform search results\r\n      this.filteredIdentities = (identities ?? []).map(\r\n        (identity: SearchDocumentsV2025) => {\r\n          // Need to use any here because SearchDocumentsV2025 is a union type\r\n          // and TypeScript can't determine if attributes exists at compile time\r\n          const docWithAttrs = identity as any;\r\n          const attrs = docWithAttrs.attributes as\r\n            | Record<string, unknown>\r\n            | undefined;\r\n          return {\r\n            ...identity,\r\n            alias: (attrs?.uid as string) ?? '–',\r\n            emailAddress: (attrs?.email as string) ?? docWithAttrs.email ?? '–',\r\n            lifecycleState: {\r\n              stateName:\r\n                (attrs?.identityState as string) ??\r\n                (attrs?.cloudStatus as string) ??\r\n                'Unknown',\r\n              manuallyUpdated: false,\r\n            },\r\n            created: docWithAttrs.created ?? undefined,\r\n          };\r\n        }\r\n      ) as IdentityV2025[] & Record<string, unknown>[];\r\n\r\n      this.totalCount = this.filteredIdentities.length;\r\n      this.pageIndex = 0;\r\n    } catch (err) {\r\n      this.openMessageDialog(`Search failed: ${String(err)}`, 'Search Error');\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  // Handle paginator page change\r\n  onPageChange(event: PageEvent) {\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n    void this.loadIdentities();\r\n  }\r\n\r\n  // Toggle sorting on a column\r\n  toggleSort(displayColumn: string): void {\r\n    if (!this.sortableFields.includes(displayColumn)) return;\r\n\r\n    const apiField = this.sortFieldMap[displayColumn] || displayColumn;\r\n    const existingIndex = this.sorters.findIndex(\r\n      (s) => s === apiField || s === `-${apiField}`\r\n    );\r\n\r\n    if (existingIndex > -1) {\r\n      const isAsc = !this.sorters[existingIndex].startsWith('-');\r\n      this.sorters[existingIndex] = isAsc ? `-${apiField}` : '';\r\n      if (!this.sorters[existingIndex]) this.sorters.splice(existingIndex, 1);\r\n    } else {\r\n      this.sorters.push(apiField);\r\n    }\r\n\r\n    void this.loadIdentities();\r\n  }\r\n\r\n  // Check if column is sorted\r\n  isSorted(column: string): boolean {\r\n    const apiField = this.sortFieldMap[column] || column;\r\n    return this.sorters.some((s) => s === apiField || s === `-${apiField}`);\r\n  }\r\n\r\n  // Get sort symbol (▲/▼)\r\n  getSortSymbol(displayColumn: string): string | null {\r\n    const apiField = this.sortFieldMap[displayColumn] || displayColumn;\r\n    const match = this.sorters.find(\r\n      (s) => s === apiField || s === `-${apiField}`\r\n    );\r\n    if (!match) return null;\r\n    return match.startsWith('-') ? '▼' : '▲';\r\n  }\r\n\r\n  // Clear all sorting\r\n  clearSort(): void {\r\n    this.sorters = [];\r\n    void this.loadIdentities();\r\n  }\r\n\r\n  // For *ngFor trackBy\r\n  trackByFn(index: number, item: string): string {\r\n    return item;\r\n  }\r\n\r\n  // View identity details in dialog\r\n  async onView(identity: IdentityV2025): Promise<void> {\r\n    try {\r\n      if (!identity.id) {\r\n        this.openMessageDialog('Identity ID is missing.', 'Error');\r\n        return;\r\n      }\r\n      const response = await this.sdk.getIdentity({ id: identity.id });\r\n      const details = JSON.stringify(response.data, null, 2);\r\n      this.openMessageDialog(\r\n        details,\r\n        `Identity Details: ${identity.name || identity.id}`\r\n      );\r\n    } catch (error) {\r\n      this.openMessageDialog(\r\n        `Failed to load identity details: ${String(error)}`,\r\n        'Error'\r\n      );\r\n    }\r\n  }\r\n\r\n  // Fetch a single identity\r\n  getIdentityById(id: string): Promise<IdentityV2025> {\r\n    return this.sdk.getIdentity({ id }).then((res) => res.data);\r\n  }\r\n\r\n  // Show dialog with title + message\r\n  openMessageDialog(errorMessage: string, title: string): void {\r\n    this.dialog.open(GenericDialogComponent, {\r\n      minWidth: '800px',\r\n      data: {\r\n        title: title,\r\n        message: errorMessage,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Show manager details\r\n  onViewManager(identity: IdentityV2025): void {\r\n    const manager = identity.managerRef;\r\n\r\n    if (!manager) {\r\n      this.openMessageDialog(\r\n        'No manager information available.',\r\n        'Manager Info'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const formatted = JSON.stringify(manager, null, 2);\r\n    this.openMessageDialog(\r\n      formatted,\r\n      `Manager: ${manager.type || manager.name || identity.id}`\r\n    );\r\n  }\r\n\r\n  // Show identity attribute details\r\n  onViewAttributes(identity: IdentityV2025): void {\r\n    const attributes = identity.attributes ?? {};\r\n    const formatted = JSON.stringify(attributes, null, 2);\r\n    this.openMessageDialog(\r\n      formatted,\r\n      `Attributes: ${identity.name || identity.id}`\r\n    );\r\n  }\r\n\r\n  // Format column values (especially lifecycleState)\r\n  formatValue(column: string, value: any): string {\r\n    if (column === 'lifecycleState') {\r\n      if (!value) return '–';\r\n\r\n      const state = value.stateName ?? '';\r\n      const manual = value.manuallyUpdated ? ' (manual)' : '';\r\n      return `${this.capitalize(state as string)}${manual}`;\r\n    }\r\n\r\n    // For objects, stringify; else return raw value or dash\r\n    if (typeof value === 'object' && value !== null) {\r\n      return JSON.stringify(value);\r\n    }\r\n\r\n    return (value as string) ?? '–';\r\n  }\r\n\r\n  // Capitalize helper\r\n  private capitalize(str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n}\r\n","<div class=\"identities-container\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-icon>assignment_ind</mat-icon>\r\n    <span class=\"toolbar-title\">{{ title }}</span>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"content\">\r\n    <!-- Search bar for local and remote filtering -->\r\n    <app-search-bar\r\n      [data]=\"identities\"\r\n      placeholder=\"Search identities...\"\r\n      (filtered)=\"filteredIdentities = $event\"\r\n      (searchApi)=\"onRemoteSearch($event)\"\r\n    ></app-search-bar>\r\n\r\n    <!-- Column customization control (lets user choose visible columns) -->\r\n    <app-column-customizer\r\n      [allColumns]=\"columnOrder\"\r\n      [displayedColumns]=\"displayedColumns\"\r\n      (displayedColumnsChange)=\"displayedColumns = $event\"\r\n    />\r\n\r\n    <!-- Loading spinner shown while data is being fetched -->\r\n    <div *ngIf=\"loading\" class=\"spinner-container\">\r\n      <mat-spinner diameter=\"75\"></mat-spinner>\r\n    </div>\r\n\r\n    <!-- Identity table, shown only when data is loaded and not empty -->\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"filteredIdentities\"\r\n      class=\"mat-elevation-z8\"\r\n      *ngIf=\"!loading && filteredIdentities.length\"\r\n    >\r\n      <!-- Dynamically create table columns based on allColumns -->\r\n      <ng-container\r\n        *ngFor=\"let column of allColumns; trackBy: trackByFn\"\r\n        [matColumnDef]=\"column\"\r\n      >\r\n        <!-- Table header cell with optional sort functionality -->\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          [ngClass]=\"{ sortable: sortableFields.includes(column) }\"\r\n          (click)=\"sortableFields.includes(column) && toggleSort(column)\"\r\n        >\r\n          <div class=\"header-content\">\r\n            <span>{{ columnDisplayNames[column] || column }}</span>\r\n            <!-- Show sort icon if the column is sortable -->\r\n            <ng-container *ngIf=\"sortableFields.includes(column)\">\r\n              <span class=\"sort-icon\" [class.active]=\"isSorted(column)\">\r\n                <ng-container\r\n                  *ngIf=\"getSortSymbol(column) as symbol; else idleIcon\"\r\n                >\r\n                  {{ symbol }}\r\n                </ng-container>\r\n                <ng-template #idleIcon>⇅</ng-template>\r\n              </span>\r\n            </ng-container>\r\n          </div>\r\n        </th>\r\n\r\n        <!-- Table data cell logic based on column type -->\r\n        <td mat-cell *matCellDef=\"let identity\">\r\n          <ng-container [ngSwitch]=\"column\">\r\n            <!-- Custom button for attribute details -->\r\n            <ng-container *ngSwitchCase=\"'attributes'\">\r\n              <button\r\n                id=\"attibuteDetails\"\r\n                mat-button\r\n                color=\"accent\"\r\n                (click)=\"onViewAttributes(identity)\"\r\n              >\r\n                Attribute Details\r\n              </button>\r\n            </ng-container>\r\n\r\n            <!-- Manager reference handling -->\r\n            <ng-container *ngSwitchCase=\"'managerRef'\">\r\n              <ng-container *ngIf=\"identity.managerRef; else noManager\">\r\n                <button\r\n                  id=\"managerDetails\"\r\n                  mat-button\r\n                  color=\"accent\"\r\n                  (click)=\"onViewManager(identity)\"\r\n                >\r\n                  Manager Details\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #noManager>–</ng-template>\r\n            </ng-container>\r\n\r\n            <!-- Default data display for other fields -->\r\n            <ng-container *ngSwitchDefault>\r\n              {{ formatValue(column, identity[column]) }}\r\n            </ng-container>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Extra column for action buttons like \"View\" -->\r\n      <ng-container matColumnDef=\"viewAction\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n        <td mat-cell *matCellDef=\"let identity\">\r\n          <button\r\n            id=\"viewIdentity\"\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"onView(identity)\"\r\n          >\r\n            View\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- paginator column -->\r\n      <ng-container matColumnDef=\"paginator\">\r\n        <td\r\n          mat-footer-cell\r\n          *matFooterCellDef\r\n          [attr.colspan]=\"displayedColumns.length\"\r\n          class=\"paginator-footer-cell\"\r\n        >\r\n          <mat-paginator\r\n            [length]=\"totalCount\"\r\n            [pageSize]=\"pageSize\"\r\n            [pageIndex]=\"pageIndex\"\r\n            [pageSizeOptions]=\"[10, 25, 50, 100]\"\r\n            (page)=\"onPageChange($event)\"\r\n            showFirstLastButtons\r\n          ></mat-paginator>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Header and row definitions -->\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      <!-- footer row with only the paginator column -->\r\n      <tr mat-footer-row *matFooterRowDef=\"['paginator']\"></tr>\r\n    </table>\r\n\r\n    <!-- Message shown when no data was returned after loading completes -->\r\n    <div\r\n      *ngIf=\"!loading && hasDataLoaded && identities.length === 0\"\r\n      class=\"empty-message\"\r\n    >\r\n      No identities found.\r\n    </div>\r\n\r\n    <!-- Paginator for navigating identity pages\r\n    <mat-paginator\r\n      *ngIf=\"!loading && identities.length\"\r\n      [length]=\"totalCount\"\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"pageIndex\"\r\n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\r\n      (page)=\"onPageChange($event)\"\r\n      showFirstLastButtons\r\n    ></mat-paginator> -->\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportDataService {\r\n  private identities: IdentityV2025[] = [];\r\n  private dataLoadedSubject = new BehaviorSubject<boolean>(false);\r\n  private isCompleteDataSubject = new BehaviorSubject<boolean>(false);\r\n  \r\n  // Expose as observable to allow components to react to data loaded state\r\n  public dataLoaded$: Observable<boolean> = this.dataLoadedSubject.asObservable();\r\n  public isCompleteData$: Observable<boolean> = this.isCompleteDataSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setIdentities(identities: IdentityV2025[], isCompleteDataset: boolean) {\r\n    this.identities = [...identities];\r\n    this.dataLoadedSubject.next(true);\r\n    this.isCompleteDataSubject.next(isCompleteDataset);\r\n  }\r\n\r\n  getIdentities(): IdentityV2025[] {\r\n    return [...this.identities]; // Return a copy to prevent direct modification\r\n  }\r\n\r\n  clearIdentities() {\r\n    this.identities = [];\r\n    this.dataLoadedSubject.next(false);\r\n    this.isCompleteDataSubject.next(false);\r\n  }\r\n  \r\n  hasLoadedData(): boolean {\r\n    return this.dataLoadedSubject.getValue() && this.identities.length > 0;\r\n  }\r\n  \r\n  isDataComplete(): boolean {\r\n    return this.isCompleteDataSubject.getValue();\r\n  }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\r\nimport { MatSortModule, Sort } from '@angular/material/sort';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport { ReportDataService } from '../report-data.service';\r\n\r\n@Component({\r\n  selector: 'app-identity-detail-view',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  templateUrl: './identity-detail-view.component.html',\r\n  styleUrl: './identity-detail-view.component.scss',\r\n})\r\nexport class IdentityDetailViewComponent implements OnInit {\r\n  // Data properties\r\n  displayedIdentities: IdentityV2025[] = [];\r\n  allIdentities: IdentityV2025[] = [];\r\n  loading = true;\r\n  filterCategory = '';\r\n  filterValue = '';\r\n  title = '';\r\n\r\n  // Table configuration\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'alias',\r\n    'emailAddress',\r\n    'identityStatus',\r\n    'lifecycleState',\r\n  ];\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  totalCount = 0;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dataService: ReportDataService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Get the filter category and value from the route params\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.filterCategory = params['category'] || '';\r\n      this.filterValue = params['value'] || '';\r\n      this.title = this.generateTitle(this.filterCategory, this.filterValue);\r\n\r\n      this.loadFilteredIdentities();\r\n    });\r\n  }\r\n\r\n  private loadFilteredIdentities() {\r\n    this.loading = true;\r\n\r\n    // Get all identities from the service\r\n    const allIdentities = this.dataService.getIdentities();\r\n\r\n    // Apply filtering based on category and value\r\n    if (this.filterCategory && this.filterValue) {\r\n      this.allIdentities = this.filterIdentities(\r\n        allIdentities,\r\n        this.filterCategory,\r\n        this.filterValue\r\n      );\r\n    } else {\r\n      this.allIdentities = [...allIdentities];\r\n    }\r\n\r\n    this.totalCount = this.allIdentities.length;\r\n    this.updateDisplayedIdentities();\r\n    this.loading = false;\r\n  }\r\n\r\n  private filterIdentities(\r\n    identities: IdentityV2025[],\r\n    category: string,\r\n    value: string\r\n  ): IdentityV2025[] {\r\n    return identities.filter((identity) => {\r\n      switch (category) {\r\n        case 'status':\r\n          return identity.identityStatus === value;\r\n\r\n        case 'manager':\r\n          // For manager status (with/without)\r\n          if (value === 'With Manager') {\r\n            return identity.managerRef && identity.managerRef.id;\r\n          } else {\r\n            return !identity.managerRef || !identity.managerRef.id;\r\n          }\r\n\r\n        case 'lifecycle':\r\n          // special case for \"Unknown\" filter\r\n          if (value === 'Unknown') {\r\n            // neither a populated lifecycleState nor a cloudLifecycleState attribute\r\n            const hasStateName = !!identity.lifecycleState?.stateName;\r\n            const hasCloud = !!(\r\n              identity.attributes &&\r\n              'cloudLifecycleState' in identity.attributes &&\r\n              identity.attributes.cloudLifecycleState\r\n            );\r\n            return !hasStateName && !hasCloud;\r\n          }\r\n\r\n          // normal matching\r\n          if (identity.lifecycleState?.stateName) {\r\n            return identity.lifecycleState.stateName === value;\r\n          }\r\n          if (\r\n            identity.attributes &&\r\n            'cloudLifecycleState' in identity.attributes\r\n          ) {\r\n            return identity.attributes.cloudLifecycleState === value;\r\n          }\r\n          return false;\r\n\r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private generateTitle(category: string, value: string): string {\r\n    if (!category || !value) {\r\n      return 'All Identities';\r\n    }\r\n\r\n    switch (category) {\r\n      case 'status':\r\n        return `Identities with Status: ${value}`;\r\n      case 'manager':\r\n        return `Identities ${value}`; // 'With Manager' or 'Without Manager'\r\n      case 'lifecycle':\r\n        return `Identities in Lifecycle State: ${value}`;\r\n      default:\r\n        return `Filtered Identities: ${value}`;\r\n    }\r\n  }\r\n\r\n  private updateDisplayedIdentities() {\r\n    const startIndex = this.pageIndex * this.pageSize;\r\n    this.displayedIdentities = this.allIdentities.slice(\r\n      startIndex,\r\n      startIndex + this.pageSize\r\n    );\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.pageIndex = event.pageIndex;\r\n    this.pageSize = event.pageSize;\r\n    this.updateDisplayedIdentities();\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    if (!sort.active || sort.direction === '') {\r\n      return;\r\n    }\r\n\r\n    this.allIdentities = this.allIdentities.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'name':\r\n          return this.compare(a.name || '', b.name || '', isAsc);\r\n        case 'alias':\r\n          return this.compare(a.alias || '', b.alias || '', isAsc);\r\n        case 'emailAddress':\r\n          return this.compare(\r\n            a.emailAddress || '',\r\n            b.emailAddress || '',\r\n            isAsc\r\n          );\r\n        case 'identityStatus':\r\n          return this.compare(\r\n            a.identityStatus || '',\r\n            b.identityStatus || '',\r\n            isAsc\r\n          );\r\n        case 'lifecycleState': {\r\n          const aState = a.lifecycleState?.stateName || '';\r\n          const bState = b.lifecycleState?.stateName || '';\r\n          return this.compare(aState, bState, isAsc);\r\n        }\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    this.updateDisplayedIdentities();\r\n  }\r\n\r\n  private compare(a: string | number, b: string | number, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  navigateBack() {\r\n    void this.router.navigate(['/report-example']);\r\n  }\r\n\r\n  formatLifecycleState(identity: IdentityV2025): string {\r\n    if (identity.lifecycleState && identity.lifecycleState.stateName) {\r\n      return identity.lifecycleState.stateName;\r\n    } else if (\r\n      identity.attributes &&\r\n      'cloudLifecycleState' in identity.attributes\r\n    ) {\r\n      return identity.attributes.cloudLifecycleState as string;\r\n    }\r\n    return 'Unknown';\r\n  }\r\n}\r\n","<div class=\"identity-detail-container\">\r\n  <mat-toolbar color=\"primary\">\r\n    <button mat-icon-button (click)=\"navigateBack()\" aria-label=\"Back to charts\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"toolbar-title\">{{ title }}</span>\r\n    \r\n    <div class=\"spacer\"></div>\r\n    \r\n    <span *ngIf=\"totalCount > 0\" class=\"count-badge\">\r\n      {{ totalCount }} identities\r\n    </span>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"content\">\r\n    <div *ngIf=\"loading\" class=\"loading-container\">\r\n      <mat-spinner diameter=\"40\"></mat-spinner>\r\n      <p>Loading identity details...</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!loading\" class=\"table-container\">\r\n      <mat-card>\r\n        <mat-card-content>\r\n          <div *ngIf=\"allIdentities.length === 0\" class=\"no-data\">\r\n            <mat-icon>info</mat-icon>\r\n            <p>No identities match the selected criteria</p>\r\n            <button mat-raised-button color=\"primary\" (click)=\"navigateBack()\">\r\n              Back to Charts\r\n            </button>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"allIdentities.length > 0\">\r\n            <!-- Filter form -->\r\n            <div class=\"filter-container\">\r\n              <h3>{{ filterCategory }}: {{ filterValue }}</h3>\r\n            </div>\r\n\r\n            <!-- Identity table -->\r\n            <table mat-table [dataSource]=\"displayedIdentities\" matSort (matSortChange)=\"sortData($event)\" class=\"identity-table\">\r\n              \r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n                <td mat-cell *matCellDef=\"let identity\">{{ identity.name }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Alias Column -->\r\n              <ng-container matColumnDef=\"alias\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Username</th>\r\n                <td mat-cell *matCellDef=\"let identity\">{{ identity.alias || '–' }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Email Column -->\r\n              <ng-container matColumnDef=\"emailAddress\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\r\n                <td mat-cell *matCellDef=\"let identity\">{{ identity.emailAddress || '–' }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Status Column -->\r\n              <ng-container matColumnDef=\"identityStatus\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\r\n                <td mat-cell *matCellDef=\"let identity\">{{ identity.identityStatus || 'Unknown' }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Lifecycle State Column -->\r\n              <ng-container matColumnDef=\"lifecycleState\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Lifecycle State</th>\r\n                <td mat-cell *matCellDef=\"let identity\">{{ formatLifecycleState(identity) }}</td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <!-- Pagination -->\r\n            <mat-paginator \r\n              [length]=\"totalCount\"\r\n              [pageSize]=\"pageSize\"\r\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n              (page)=\"onPageChange($event)\"\r\n              aria-label=\"Select page of identities\">\r\n            </mat-paginator>\r\n          </ng-container>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","/// <reference path=\"../../global.ts\" />\r\nexport interface ThemeConfig {\r\n  primary: string;\r\n  secondary: string;\r\n  primaryText: string;\r\n  secondaryText: string;\r\n  hoverText: string;\r\n  background: string;\r\n  logoLight?: string;\r\n  logoDark?: string;\r\n  logoLightFileName?: string;\r\n  logoDarkFileName?: string;\r\n}\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n// Needed for deep cloning objects\r\ndeclare function structuredClone<T>(value: T): T;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ThemeService {\r\n  // Check if the app is running inside Electron\r\n  private isElectron = typeof window !== 'undefined' && !!window.electronAPI;\r\n\r\n  // Observable for dark mode status\r\n  private isDarkSubject = new BehaviorSubject<boolean>(false);\r\n  readonly isDark$ = this.isDarkSubject.asObservable();\r\n\r\n  // Emits whenever a logo is updated\r\n  logoUpdated$ = new Subject<void>();\r\n\r\n  // Observable for the active theme config\r\n  private themeSubject = new BehaviorSubject<ThemeConfig | null>(null);\r\n  theme$ = this.themeSubject.asObservable();\r\n\r\n  // Last raw configuration read from disk\r\n  private lastRawConfig: any = {};\r\n\r\n  constructor() {\r\n    // Load theme on startup\r\n    void this.loadTheme();\r\n  }\r\n\r\n  // Returns the most recently read config object\r\n  getRawConfig(): any {\r\n    return this.lastRawConfig;\r\n  }\r\n\r\n  /**\r\n   * Loads a theme from localStorage or Electron config.\r\n   * If `apply` is true, applies the theme to the DOM.\r\n   */\r\n  async loadTheme(mode?: 'light' | 'dark', apply = true): Promise<ThemeConfig> {\r\n    const currentMode =\r\n      mode ??\r\n      (localStorage.getItem('themeMode') as 'light' | 'dark') ??\r\n      'light';\r\n\r\n    let config: ThemeConfig;\r\n\r\n    if (this.isElectron) {\r\n      const raw = await window.electronAPI.readConfig();\r\n      this.lastRawConfig = raw;\r\n      config =\r\n        raw[`theme-${currentMode}`] ??\r\n        (await this.getDefaultTheme(currentMode));\r\n    } else {\r\n      const stored = localStorage.getItem(`theme-${currentMode}`);\r\n      config = stored\r\n        ? JSON.parse(stored)\r\n        : await this.getDefaultTheme(currentMode);\r\n    }\r\n\r\n    if (apply) {\r\n      this.applyTheme(config, currentMode);\r\n    }\r\n\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Saves a theme configuration and applies it.\r\n   */\r\n  async saveTheme(config: ThemeConfig, mode: 'light' | 'dark'): Promise<void> {\r\n    localStorage.setItem('themeMode', mode);\r\n    const themeToSave = structuredClone(config);\r\n\r\n    if (this.isElectron) {\r\n      const raw = await window.electronAPI.readConfig();\r\n      raw[`theme-${mode}`] = themeToSave;\r\n      this.lastRawConfig = raw;\r\n      await window.electronAPI.writeConfig(raw);\r\n    } else {\r\n      localStorage.setItem(`theme-${mode}`, JSON.stringify(themeToSave));\r\n    }\r\n\r\n    console.log(`[ThemeService] Saving theme (${mode}):`, config);\r\n    this.applyTheme(themeToSave, mode);\r\n  }\r\n\r\n  /**\r\n   * Validates if a given logo path is a file or base64 URL.\r\n   */\r\n  isValidLogoPath(value?: string): boolean {\r\n    if (!value) return false;\r\n    if (value.startsWith('file://')) return true;\r\n    if (value.startsWith('data:')) return true;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Applies the given theme config to the DOM.\r\n   */\r\n  private applyTheme(config: ThemeConfig, mode: 'light' | 'dark') {\r\n    const {\r\n      primary,\r\n      secondary,\r\n      primaryText,\r\n      secondaryText,\r\n      hoverText,\r\n      background,\r\n    } = config;\r\n\r\n    // Fallback to default logos if missing or invalid\r\n    if (!this.isValidLogoPath(config.logoLight)) {\r\n      config.logoLight = 'assets/icons/logo.png';\r\n    }\r\n    if (!this.isValidLogoPath(config.logoDark)) {\r\n      config.logoDark = 'assets/icons/logo-dark.png';\r\n    }\r\n\r\n    // Apply CSS variables for theme colors\r\n    document.body.style.setProperty('--theme-primary', primary);\r\n    document.body.style.setProperty('--theme-secondary', secondary);\r\n    document.body.style.setProperty('--theme-primary-text', primaryText);\r\n    document.body.style.setProperty('--theme-secondary-text', secondaryText);\r\n    document.body.style.setProperty('--theme-hover-text', hoverText);\r\n    document.body.style.setProperty('--theme-background', background);\r\n\r\n    // Apply light or dark theme class\r\n    document.body.classList.remove('light-theme', 'dark-theme');\r\n    document.body.classList.add(`${mode}-theme`);\r\n\r\n    // Emit updated theme config\r\n    this.isDarkSubject.next(mode === 'dark');\r\n    this.themeSubject.next(structuredClone(config));\r\n  }\r\n\r\n  /**\r\n   * Returns the current saved mode.\r\n   */\r\n  getCurrentMode(): 'light' | 'dark' {\r\n    return (localStorage.getItem('themeMode') as 'light' | 'dark') ?? 'light';\r\n  }\r\n\r\n  /**\r\n   * Returns the default theme for the specified mode.\r\n   * If running in Electron and logos exist, includes custom logos.\r\n   */\r\n  public async getDefaultTheme(mode: 'light' | 'dark'): Promise<ThemeConfig> {\r\n    const fallbackLight = 'assets/icons/logo.png';\r\n    const fallbackDark = 'assets/icons/logo-dark.png';\r\n\r\n    let logoLight = fallbackLight;\r\n    let logoDark = fallbackDark;\r\n\r\n    if (this.isElectron && window.electronAPI.checkLogoExists) {\r\n      const userLogoLightExists = await window.electronAPI.checkLogoExists('logo.png');\r\n      const userLogoDarkExists = await window.electronAPI.checkLogoExists('logo-dark.png');\r\n\r\n      if (userLogoLightExists) {\r\n        logoLight = await window.electronAPI.getLogoDataUrl('logo.png');\r\n      }\r\n\r\n      if (userLogoDarkExists) {\r\n        logoDark = await window.electronAPI.getLogoDataUrl('logo-dark.png');\r\n      }\r\n    }\r\n\r\n    return {\r\n      primary: mode === 'dark' ? '#54c0e8' : '#0071ce',\r\n      secondary: mode === 'dark' ? '#f48fb1' : '#6c63ff',\r\n      primaryText: mode === 'dark' ? '#ffffff' : '#415364',\r\n      secondaryText: mode === 'dark' ? '#cccccc' : '#415364',\r\n      hoverText: mode === 'dark' ? '#54c0e8' : '#ffffff',\r\n      background: mode === 'dark' ? '#151316' : '#ffffff',\r\n      logoLight,\r\n      logoDark,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Waits for a file to appear on disk, useful after saving a logo.\r\n   */\r\n  async waitForFile(path: string, timeout = 1000): Promise<boolean> {\r\n    const interval = 100;\r\n    const retries = timeout / interval;\r\n\r\n    for (let i = 0; i < retries; i++) {\r\n      const exists = await window.electronAPI.checkLogoExists(\r\n        path.split('/').pop()!\r\n      );\r\n      if (exists) return true;\r\n      await new Promise((res) => setTimeout(res, interval));\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport * as d3 from 'd3';\r\nimport { ThemeService } from '../../theme/theme.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-identity-status-chart',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  templateUrl: './identity-status-chart.component.html',\r\n  styleUrl: './identity-status-chart.component.scss'\r\n})\r\nexport class IdentityStatusChartComponent implements OnChanges, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  isDark = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private themeService: ThemeService\r\n  ) {\r\n    this.themeService.isDark$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isDark => {\r\n        this.isDark = isDark;\r\n        if (this.identities.length > 0) {\r\n          this.renderIdentityStatusChart();\r\n        }\r\n      });\r\n  }\r\n  @Input() identities: IdentityV2025[] = [];\r\n  @ViewChild('barChart', { static: true }) private barChartContainer!: ElementRef;\r\n\r\n  // Chart dimensions\r\n  private width = 700;\r\n  private height = 400;\r\n  private margin = { top: 20, right: 30, bottom: 60, left: 40 };\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['identities'] && this.identities.length > 0) {\r\n      this.renderIdentityStatusChart();\r\n    }\r\n  }\r\n\r\n  renderIdentityStatusChart() {\r\n    if (!this.barChartContainer) return;\r\n    \r\n    const element = this.barChartContainer.nativeElement;\r\n    d3.select(element).selectAll('*').remove();\r\n    \r\n    // Count identities by status\r\n    const statusCounts: {[key: string]: number} = {};\r\n    this.identities.forEach(identity => {\r\n      const status = identity.identityStatus || 'Unknown';\r\n      statusCounts[status] = (statusCounts[status] || 0) + 1;\r\n    });\r\n    \r\n    const data = Object.entries(statusCounts).map(([key, value]) => ({ status: key, count: value }));\r\n    \r\n    const svg = d3.select(element)\r\n      .append('svg')\r\n      .attr('width', this.width)\r\n      .attr('height', this.height)\r\n      .append('g')\r\n      .attr('transform', `translate(${this.margin.left},${this.margin.top})`);\r\n    \r\n    const x = d3.scaleBand()\r\n      .domain(data.map(d => d.status))\r\n      .range([0, this.width - this.margin.left - this.margin.right])\r\n      .padding(0.2);\r\n      \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => d.count) || 0])\r\n      .nice()\r\n      .range([this.height - this.margin.top - this.margin.bottom, 0]);\r\n    \r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${this.height - this.margin.top - this.margin.bottom})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .attr('transform', 'translate(-10,0)rotate(-45)')\r\n      .style('text-anchor', 'end');\r\n    \r\n    // Add Y axis\r\n    svg.append('g')\r\n      .call(d3.axisLeft(y));\r\n    \r\n    // Color scale\r\n    const color = d3.scaleOrdinal()\r\n      .domain(data.map(d => d.status))\r\n      .range(d3.schemeCategory10);\r\n    \r\n    // Add bars with click events\r\n    svg.selectAll('rect')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => x(d.status) || 0)\r\n      .attr('y', d => y(d.count))\r\n      .attr('width', x.bandwidth())\r\n      .attr('height', d => this.height - this.margin.top - this.margin.bottom - y(d.count))\r\n      .attr('fill', d => color(d.status) as string)\r\n      .attr('rx', 4)\r\n      .attr('ry', 4)\r\n      .style('cursor', 'pointer') // Add pointer cursor to indicate clickable\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with status filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'status',\r\n            value: d.status\r\n          }\r\n        });\r\n      });\r\n      \r\n    // Add title with theme-aware color\r\n    svg.append('text')\r\n      .attr('x', (this.width - this.margin.left - this.margin.right) / 2)\r\n      .attr('y', -5)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text('Identities by Status');\r\n      \r\n    // Add clickable labels\r\n    svg.selectAll('.label')\r\n      .data(data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => (x(d.status) || 0) + x.bandwidth() / 2)\r\n      .attr('y', d => y(d.count) - 5)\r\n      .attr('text-anchor', 'middle')\r\n      .style('cursor', 'pointer') // Add pointer cursor\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text(d => d.count)\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with status filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'status',\r\n            value: d.status\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}","<div class=\"chart-container\">\r\n  <div #barChart class=\"chart\"></div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport * as d3 from 'd3';\r\nimport { ThemeService } from '../../theme/theme.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n// Define interface for chart data\r\ninterface ChartDataPoint {\r\n  label: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manager-distribution-chart',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  templateUrl: './manager-distribution-chart.component.html',\r\n  styleUrl: './manager-distribution-chart.component.scss'\r\n})\r\nexport class ManagerDistributionChartComponent implements OnChanges, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  isDark = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private themeService: ThemeService\r\n  ) {\r\n    this.themeService.isDark$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isDark => {\r\n        this.isDark = isDark;\r\n        if (this.identities.length > 0) {\r\n          this.renderManagerDistributionChart();\r\n        }\r\n      });\r\n  }\r\n  @Input() identities: IdentityV2025[] = [];\r\n  @ViewChild('pieChart', { static: true }) private pieChartContainer!: ElementRef;\r\n\r\n  // Chart dimensions\r\n  private width = 700;\r\n  private height = 400;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['identities'] && this.identities.length > 0) {\r\n      this.renderManagerDistributionChart();\r\n    }\r\n  }\r\n\r\n  renderManagerDistributionChart() {\r\n    if (!this.pieChartContainer) return;\r\n    \r\n    const element = this.pieChartContainer.nativeElement;\r\n    d3.select(element).selectAll('*').remove();\r\n    \r\n    // Count identities with/without managers\r\n    const withManager = this.identities.filter(i => i.managerRef && i.managerRef.id).length;\r\n    const withoutManager = this.identities.length - withManager;\r\n    \r\n    const data = [\r\n      { label: 'With Manager', value: withManager },\r\n      { label: 'Without Manager', value: withoutManager }\r\n    ];\r\n    \r\n    const radius = Math.min(this.width, this.height) / 2 - 50;\r\n    \r\n    const svg = d3.select(element)\r\n      .append('svg')\r\n      .attr('width', this.width)\r\n      .attr('height', this.height)\r\n      .append('g')\r\n      .attr('transform', `translate(${this.width / 2},${this.height / 2})`);\r\n    \r\n    const color = d3.scaleOrdinal()\r\n      .domain(data.map(d => d.label))\r\n      .range(['#4CAF50', '#F44336']);\r\n    \r\n    const pie = d3.pie<ChartDataPoint>()\r\n      .value(d => d.value);\r\n    \r\n    const arc = d3.arc()\r\n      .innerRadius(0)\r\n      .outerRadius(radius);\r\n    \r\n    const outerArc = d3.arc()\r\n      .innerRadius(radius * 0.9)\r\n      .outerRadius(radius * 0.9);\r\n    \r\n    const arcs = svg.selectAll('arc')\r\n      .data(pie(data))\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'arc');\r\n    \r\n    arcs.append('path')\r\n      .attr('d', d => {\r\n        // Cast to any to bypass type checking for D3's complex types\r\n        // Using 'as any' is required here since D3's type system doesn't properly align\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        return arc(d as any) || '';\r\n      })\r\n      .attr('fill', d => color(d.data.label) as string)\r\n      .style('cursor', 'pointer') // Add pointer cursor\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with manager filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'manager',\r\n            value: d.data.label\r\n          }\r\n        });\r\n      });\r\n    \r\n    // Add title with theme-aware color\r\n    svg.append('text')\r\n      .attr('x', 0)\r\n      .attr('y', -radius - 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text('Manager Distribution');\r\n    \r\n    // Add labels with lines\r\n    arcs.append('text')\r\n      .attr('transform', d => {\r\n        // Cast to any to bypass type checking for D3's complex types\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        const pos = outerArc.centroid(d as any) || [0, 0];\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.99 * (midAngle < Math.PI ? 1 : -1);\r\n        return `translate(${pos[0]},${pos[1]})`;\r\n      })\r\n      .attr('dy', '.35em')\r\n      .attr('text-anchor', d => {\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        return midAngle < Math.PI ? 'start' : 'end';\r\n      })\r\n      .attr('class', 'pie-label')\r\n      .style('cursor', 'pointer')\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text(d => `${d.data.label}: ${d.data.value} (${Math.round(d.data.value / this.identities.length * 100)}%)`)\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with manager filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'manager',\r\n            value: d.data.label\r\n          }\r\n        });\r\n      });\r\n    \r\n    // Add polylines\r\n    arcs.append('polyline')\r\n      .attr('points', d => {\r\n        // Cast to any to bypass type checking for D3's complex types\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        const pos = outerArc.centroid(d as any) || [0, 0];\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.95 * (midAngle < Math.PI ? 1 : -1);\r\n        // Cast to any to bypass type checking for D3's complex types\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        const arcCentroid = arc.centroid(d as any) || [0, 0];\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        const outerArcCentroid = outerArc.centroid(d as any) || [0, 0];\r\n        return `${arcCentroid[0]},${arcCentroid[1]},${outerArcCentroid[0]},${outerArcCentroid[1]},${pos[0]},${pos[1]}`;\r\n      })\r\n      .style('fill', 'none')\r\n      .style('stroke', 'gray')\r\n      .style('stroke-width', 1);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}","<div class=\"chart-container\">\r\n  <div #pieChart class=\"chart\"></div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport * as d3 from 'd3';\r\nimport { ThemeService } from '../../theme/theme.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-lifecycle-state-chart',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  templateUrl: './lifecycle-state-chart.component.html',\r\n  styleUrl: './lifecycle-state-chart.component.scss'\r\n})\r\nexport class LifecycleStateChartComponent implements OnChanges, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  isDark = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private themeService: ThemeService\r\n  ) {\r\n    this.themeService.isDark$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isDark => {\r\n        this.isDark = isDark;\r\n        if (this.identities.length > 0) {\r\n          this.renderLifecycleStateChart();\r\n        }\r\n      });\r\n  }\r\n  @Input() identities: IdentityV2025[] = [];\r\n  @ViewChild('lifecycleChart', { static: true }) private lifecycleChartContainer!: ElementRef;\r\n\r\n  // Chart dimensions\r\n  private width = 700;\r\n  private height = 400;\r\n  private margin = { top: 20, right: 30, bottom: 60, left: 40 };\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['identities'] && this.identities.length > 0) {\r\n      this.renderLifecycleStateChart();\r\n    }\r\n  }\r\n\r\n  renderLifecycleStateChart() {\r\n    if (!this.lifecycleChartContainer) return;\r\n    \r\n    const element = this.lifecycleChartContainer.nativeElement;\r\n    d3.select(element).selectAll('*').remove();\r\n    \r\n    // Count identities by lifecycle state\r\n    const lifecycleCounts: {[key: string]: number} = {};\r\n    \r\n    this.identities.forEach(identity => {\r\n      let state = 'Unknown';\r\n      \r\n      if (identity.lifecycleState && identity.lifecycleState.stateName) {\r\n        state = identity.lifecycleState.stateName;\r\n      } else if (identity.attributes && 'cloudLifecycleState' in identity.attributes) {\r\n        state = identity.attributes.cloudLifecycleState as string;\r\n      }\r\n      \r\n      lifecycleCounts[state] = (lifecycleCounts[state] || 0) + 1;\r\n    });\r\n    \r\n    const data = Object.entries(lifecycleCounts)\r\n      .map(([key, value]) => ({ state: key, count: value }))\r\n      .sort((a, b) => b.count - a.count);\r\n    \r\n    const svg = d3.select(element)\r\n      .append('svg')\r\n      .attr('width', this.width)\r\n      .attr('height', this.height)\r\n      .append('g')\r\n      .attr('transform', `translate(${this.margin.left},${this.margin.top})`);\r\n    \r\n    const x = d3.scaleBand()\r\n      .domain(data.map(d => d.state))\r\n      .range([0, this.width - this.margin.left - this.margin.right])\r\n      .padding(0.2);\r\n      \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => d.count) || 0])\r\n      .nice()\r\n      .range([this.height - this.margin.top - this.margin.bottom, 0]);\r\n    \r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${this.height - this.margin.top - this.margin.bottom})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .attr('transform', 'translate(-10,0)rotate(-45)')\r\n      .style('text-anchor', 'end');\r\n    \r\n    // Add Y axis\r\n    svg.append('g')\r\n      .call(d3.axisLeft(y));\r\n    \r\n    // Color scale\r\n    const color = d3.scaleOrdinal()\r\n      .domain(data.map(d => d.state))\r\n      .range(d3.schemeSet2);\r\n    \r\n    // Add horizontal lines\r\n    svg.selectAll('.grid-line')\r\n      .data(y.ticks())\r\n      .enter()\r\n      .append('line')\r\n      .attr('class', 'grid-line')\r\n      .attr('x1', 0)\r\n      .attr('x2', this.width - this.margin.left - this.margin.right)\r\n      .attr('y1', d => y(d))\r\n      .attr('y2', d => y(d))\r\n      .attr('stroke', '#e0e0e0')\r\n      .attr('stroke-width', 0.5);\r\n    \r\n    // Add clickable bars\r\n    svg.selectAll('rect')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => x(d.state) || 0)\r\n      .attr('y', d => y(d.count))\r\n      .attr('width', x.bandwidth())\r\n      .attr('height', d => this.height - this.margin.top - this.margin.bottom - y(d.count))\r\n      .attr('fill', d => color(d.state) as string)\r\n      .attr('rx', 4)\r\n      .attr('ry', 4)\r\n      .style('cursor', 'pointer')\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with lifecycle state filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'lifecycle',\r\n            value: d.state\r\n          }\r\n        });\r\n      });\r\n      \r\n    // Add title with theme-aware color\r\n    svg.append('text')\r\n      .attr('x', (this.width - this.margin.left - this.margin.right) / 2)\r\n      .attr('y', -5)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text('Identities by Lifecycle State');\r\n      \r\n    // Add clickable labels\r\n    svg.selectAll('.label')\r\n      .data(data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => (x(d.state) || 0) + x.bandwidth() / 2)\r\n      .attr('y', d => y(d.count) - 5)\r\n      .attr('text-anchor', 'middle')\r\n      .style('cursor', 'pointer')\r\n      .style('fill', this.isDark ? '#ffffff' : '#000000')\r\n      .text(d => d.count)\r\n      .on('click', (event, d) => {\r\n        // Navigate to details view with lifecycle state filter\r\n        void this.router.navigate(['/report-example/details'], { \r\n          queryParams: { \r\n            category: 'lifecycle',\r\n            value: d.state\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}","<div class=\"chart-container\">\r\n  <div #lifecycleChart class=\"chart\"></div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { IdentityV2025 } from 'sailpoint-api-client';\r\nimport { SailPointSDKService } from '../sailpoint-sdk.service';\r\nimport { ReportDataService } from './report-data.service';\r\nimport { ThemeService } from '../theme/theme.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n// Import chart components\r\nimport { IdentityStatusChartComponent } from './identity-status-chart/identity-status-chart.component';\r\nimport { ManagerDistributionChartComponent } from './manager-distribution-chart/manager-distribution-chart.component';\r\nimport { LifecycleStateChartComponent } from './lifecycle-state-chart/lifecycle-state-chart.component';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n@Component({\r\n  selector: 'app-report-example',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    IdentityStatusChartComponent,\r\n    ManagerDistributionChartComponent,\r\n    LifecycleStateChartComponent\r\n  ],\r\n  templateUrl: './report-example.component.html',\r\n  styleUrl: './report-example.component.scss'\r\n})\r\nexport class ReportExampleComponent implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  title = 'Identity Analytics';\r\n  loadingMessage = 'Loading identity data...';\r\n  isCancelled = false;\r\n  isLoadingComplete = false;\r\n  isDark = false;\r\n  \r\n  // Data properties\r\n  identities: IdentityV2025[] = [];\r\n  loading = false;\r\n  hasError = false;\r\n  errorMessage = '';\r\n  totalLoaded = 0;\r\n\r\n  constructor(\r\n    private sdk: SailPointSDKService, \r\n    private dataService: ReportDataService,\r\n    private themeService: ThemeService\r\n  ) {\r\n    this.themeService.isDark$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isDark => {\r\n        this.isDark = isDark;\r\n      });\r\n  }\r\n  \r\n  ngOnInit() {\r\n    // Check if data is already loaded in the service\r\n    if (this.dataService.hasLoadedData()) {\r\n      console.log('Using cached identity data');\r\n      this.identities = this.dataService.getIdentities();\r\n      this.totalLoaded = this.identities.length;\r\n      this.isLoadingComplete = this.dataService.isDataComplete();\r\n    } else {\r\n      // No cached data, load from API\r\n      void this.loadIdentities();\r\n    }\r\n  }\r\n  \r\n  cancelLoading() {\r\n    this.isCancelled = true;\r\n    console.log('Loading cancelled by user');\r\n    this.loadingMessage = 'Loading cancelled. Displaying partial results...';\r\n  }\r\n\r\n  async loadIdentities() {\r\n    this.loading = true;\r\n    this.hasError = false;\r\n    this.identities = [];\r\n    this.isCancelled = false;\r\n    this.isLoadingComplete = false;\r\n    \r\n    const BATCH_SIZE = 250; // API max limit\r\n    const MAX_PARALLEL_REQUESTS = 8; // Number of parallel fetch threads\r\n    let offset = 0;\r\n    this.totalLoaded = 0;\r\n    \r\n    try {\r\n      // First, make one request to get an idea of the total count\r\n      const initialResponse = await this.sdk.listIdentities({\r\n        limit: BATCH_SIZE,\r\n        offset: 0,\r\n        count: true\r\n      });\r\n      \r\n      const initialBatch = initialResponse.data || [];\r\n      this.identities = [...initialBatch];\r\n      this.totalLoaded = initialBatch.length;\r\n      \r\n      // If the first batch is less than BATCH_SIZE, we already have all the data\r\n      if (initialBatch.length < BATCH_SIZE) {\r\n        this.isLoadingComplete = true;\r\n        console.log(`Completed loading ${this.identities.length} total identities`);\r\n        this.dataService.setIdentities(this.identities, this.isLoadingComplete);\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      \r\n      // Start with offset after the first batch\r\n      offset = BATCH_SIZE;\r\n      \r\n      // Continue fetching batches in parallel until cancelled or no more data\r\n      while (!this.isCancelled) {\r\n        this.loadingMessage = `Loading identities... (${this.totalLoaded} loaded so far)`;\r\n        \r\n        // Create an array of promises for parallel requests\r\n        const batchPromises: Promise<AxiosResponse<IdentityV2025[]>>[] = [];\r\n        \r\n        for (let i = 0; i < MAX_PARALLEL_REQUESTS && !this.isCancelled; i++) {\r\n          const currentOffset = offset + (i * BATCH_SIZE);\r\n          \r\n          // Create a promise for each batch request\r\n          const batchPromise = this.sdk.listIdentities({\r\n            limit: BATCH_SIZE,\r\n            offset: currentOffset,\r\n            count: true\r\n          });\r\n          \r\n          batchPromises.push(batchPromise);\r\n        }\r\n        \r\n        if (batchPromises.length === 0) {\r\n          break; // Exit if no promises were created (cancelled)\r\n        }\r\n        \r\n        // Wait for all parallel requests to complete\r\n        const batchResponses = await Promise.all(batchPromises);\r\n        \r\n        // Process all responses\r\n        let hasMoreData = false;\r\n        \r\n        for (const response of batchResponses) {\r\n          const batchData = response.data || [];\r\n          \r\n          // Add the batch to our collected identities\r\n          this.identities = [...this.identities, ...batchData];\r\n          \r\n          // Check if this batch indicates more data available\r\n          if (batchData.length === BATCH_SIZE) {\r\n            hasMoreData = true;\r\n          }\r\n        }\r\n        \r\n        this.totalLoaded = this.identities.length;\r\n        \r\n        // Update offset for next parallel batch\r\n        offset += (BATCH_SIZE * MAX_PARALLEL_REQUESTS);\r\n        \r\n        // If no batch was full size, we've reached the end\r\n        if (!hasMoreData) {\r\n          this.isLoadingComplete = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (this.isCancelled) {\r\n        console.log(`Loading cancelled. Loaded ${this.identities.length} identities so far.`);\r\n      } else {\r\n        console.log(`Completed loading ${this.identities.length} total identities`);\r\n        this.isLoadingComplete = true;\r\n      }\r\n      \r\n      this.loadingMessage = 'Loading identity data...'; // Reset the message for next time\r\n      \r\n      // Store identities in the shared service with completion state\r\n      this.dataService.setIdentities(this.identities, this.isLoadingComplete);\r\n    } catch (error) {\r\n      this.hasError = true;\r\n      this.errorMessage = `Error loading identities: ${String(error)}`;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n  \r\n  \r\n  refresh() {\r\n    // Force reload from API, ignoring cache\r\n    this.isCancelled = false;\r\n    this.isLoadingComplete = false;\r\n    void this.loadIdentities();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"report-example-container\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-icon>insert_chart</mat-icon>\r\n    <span class=\"toolbar-title\">{{ title }}</span>\r\n    \r\n    <div class=\"spacer\"></div>\r\n    \r\n    <button mat-icon-button (click)=\"refresh()\" aria-label=\"Refresh data\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"content\">\r\n    <div *ngIf=\"loading\" class=\"loading-container\">\r\n      <mat-spinner diameter=\"40\"></mat-spinner>\r\n      <p>{{ loadingMessage }}</p>\r\n      <button mat-raised-button color=\"warn\" (click)=\"cancelLoading()\" class=\"cancel-button\">\r\n        Cancel & View Partial Results\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"hasError\" class=\"error-container\">\r\n      <mat-icon color=\"warn\">error</mat-icon>\r\n      <p>{{ errorMessage }}</p>\r\n      <button mat-raised-button color=\"primary\" (click)=\"refresh()\">\r\n        Try Again\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"!loading && !hasError\" class=\"charts-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Identity Data Visualization</mat-card-title>\r\n          <mat-card-subtitle>\r\n            Visual analytics based on identity data\r\n            <span *ngIf=\"!isLoadingComplete && totalLoaded > 0\" class=\"partial-data-badge\">\r\n              Partial Data ({{ totalLoaded }} identities)\r\n            </span>\r\n          </mat-card-subtitle>\r\n        </mat-card-header>\r\n        \r\n        <mat-card-content>\r\n          <div *ngIf=\"identities.length === 0\" class=\"no-data\">\r\n            <mat-icon>info</mat-icon>\r\n            <p>No identity data available</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"identities.length > 0\" class=\"charts-content\">\r\n            <div class=\"chart-section\">\r\n              <h3>Status Distribution</h3>\r\n              <mat-divider></mat-divider>\r\n              <app-identity-status-chart [identities]=\"identities\"></app-identity-status-chart>\r\n            </div>\r\n\r\n            <div class=\"chart-section\">\r\n              <h3>Manager Distribution</h3>\r\n              <mat-divider></mat-divider>\r\n              <app-manager-distribution-chart [identities]=\"identities\"></app-manager-distribution-chart>\r\n            </div>\r\n\r\n            <div class=\"chart-section\">\r\n              <h3>Lifecycle States</h3>\r\n              <mat-divider></mat-divider>\r\n              <app-lifecycle-state-chart [identities]=\"identities\"></app-lifecycle-state-chart>\r\n            </div>\r\n            \r\n            <div class=\"data-summary\" [ngStyle]=\"{'--background-color': isDark ? '#333333' : '#f5f5f5', '--text-color': isDark ? '#ffffff' : 'inherit'}\">\r\n              <p>\r\n                <strong>Total Identities:</strong> {{ identities.length }}\r\n                <span *ngIf=\"!isLoadingComplete && identities.length > 0\" class=\"partial-data-note\">\r\n                  (Partial data - loading was cancelled)\r\n                </span>\r\n                <span *ngIf=\"isLoadingComplete\" class=\"complete-data-note\">\r\n                  (Complete dataset)\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { ReportExampleComponent } from './report-example.component';\r\nimport { IdentityDetailViewComponent } from './identity-detail-view/identity-detail-view.component';\r\n\r\nexport const REPORT_EXAMPLE_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportExampleComponent\r\n  },\r\n  {\r\n    path: 'details',\r\n    component: IdentityDetailViewComponent\r\n  }\r\n];","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sailpoint-components',\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      sailpoint-components works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class SailpointComponentsComponent {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SailpointComponentsService {\r\n\r\n  constructor() { }\r\n}\r\n","/// <reference path=\"../../global.ts\" />\r\n\r\n// Angular core and common modules\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\n// Angular Material UI modules\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSelectModule     } from '@angular/material/select';\r\n\r\n\r\n// Theme management service and config interface\r\nimport { ThemeService, ThemeConfig } from '../theme/theme.service';\r\n\r\n// Required for deep cloning\r\ndeclare function structuredClone<T>(value: T): T;\r\n\r\n@Component({\r\n  selector: 'app-theme-picker',\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n  ],\r\n  templateUrl: './theme-picker.component.html',\r\n  styleUrl: './theme-picker.component.scss',\r\n})\r\nexport class ThemePickerComponent implements OnInit {\r\n  title = 'Theme Picker';\r\n  selectedLogoFileName = '';\r\n\r\n  // Reference to the logo <img> in the template\r\n  @ViewChild('logoImage') logoImageRef!: ElementRef<HTMLImageElement>;\r\n\r\n    // now type the fields so that `key` is ONLY one of the keys of ThemeConfig:\r\n  readonly colorFields: Array<{ label: string; key: keyof ThemeConfig }> = [\r\n    { label: 'Primary',       key: 'primary'       },\r\n    { label: 'Secondary',     key: 'secondary'     },\r\n    { label: 'Primary Text',  key: 'primaryText'   },\r\n    { label: 'Secondary Text',key: 'secondaryText' },\r\n    { label: 'Hover Text',    key: 'hoverText'     },\r\n    { label: 'Background',    key: 'background'    },\r\n  ];\r\n\r\n  // Track current theme mode\r\n  mode: 'light' | 'dark' = 'light'; // Will be initialized in constructor\r\n\r\n  // Spinner visibility\r\n  loading = false;\r\n\r\n  // Factory for empty theme object\r\n  emptyTheme(): ThemeConfig {\r\n    return {\r\n      primary: '',\r\n      secondary: '',\r\n      primaryText: '',\r\n      secondaryText: '',\r\n      hoverText: '',\r\n      background: '',\r\n      logoLight: '',\r\n      logoDark: '',\r\n    };\r\n  }\r\n\r\n  // Store theme colors for each mode\r\n  lightColors: ThemeConfig = { ...this.emptyTheme() };\r\n  darkColors: ThemeConfig = { ...this.emptyTheme() };\r\n\r\n  // Getter for current mode's color config\r\n  get colors(): ThemeConfig {\r\n    return this.mode === 'dark' ? this.darkColors : this.lightColors;\r\n  }\r\n\r\n  // Setter for updating current mode's color config\r\n  set colors(value: ThemeConfig) {\r\n    if (this.mode === 'dark') {\r\n      this.darkColors = structuredClone(value);\r\n    } else {\r\n      this.lightColors = structuredClone(value);\r\n    }\r\n  }\r\n\r\n  private ignoreNextDarkChange = false; // reserved for preventing recursive theme toggling (not used here)\r\n\r\n  ngOnInit(): void {\r\n    // Restore mode from local storage\r\n    const storedMode =\r\n      (localStorage.getItem('themeMode') as 'light' | 'dark') ?? 'light';\r\n    this.mode = storedMode;\r\n\r\n    // Load theme config for selected mode\r\n    void this.loadThemeForMode().then(() => {\r\n      // Subscribe to dark mode changes from ThemeService\r\n      this.themeService.isDark$.subscribe((isDark) => {\r\n        const newMode = isDark ? 'dark' : 'light';\r\n        if (newMode === this.mode) return; // Avoid redundant updates\r\n\r\n        this.mode = newMode;\r\n        void this.loadThemeForMode(); // Reload theme config on mode change\r\n      });\r\n    });\r\n  }\r\n\r\n  // Handler for manual mode toggle (e.g., from UI switch)\r\n  async onModeChange() {\r\n    localStorage.setItem('themeMode', this.mode);\r\n    const loaded = await this.themeService.loadTheme(this.mode, false); // Don't apply automatically\r\n    this.colors = structuredClone(loaded);\r\n    this.themeService['applyTheme'](this.colors, this.mode); // Apply manually\r\n  }\r\n\r\n  // Set selected logo file from file input\r\n  selectedLogoFile?: File;\r\n  onFileSelected(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    if (!input.files?.length) {\r\n      return;\r\n    }\r\n\r\n    const file = input.files[0];\r\n    // only allow PNG\r\n    if (\r\n      file.type !== 'image/png' &&\r\n      !file.name.toLowerCase().endsWith('.png')\r\n    ) {\r\n      this.snackBar.open('Please select a PNG image.', 'Close', {\r\n        duration: 3000,\r\n      });\r\n      input.value = ''; // clear invalid selection\r\n      return;\r\n    }\r\n\r\n    this.selectedLogoFile = file;\r\n    this.selectedLogoFileName = file.name;\r\n  }\r\n\r\n  // Load both light and dark themes into memory (from config or default)\r\n  async loadThemeForMode(): Promise<void> {\r\n    const raw = this.themeService.getRawConfig();\r\n    this.lightColors =\r\n      raw?.['theme-light'] ??\r\n      (await this.themeService.getDefaultTheme('light'));\r\n    this.darkColors =\r\n      raw?.['theme-dark'] ?? (await this.themeService.getDefaultTheme('dark'));\r\n    // now populate the displayed “filename” field\r\n    this.selectedLogoFileName =\r\n      this.mode === 'dark'\r\n        ? this.darkColors.logoDarkFileName || ''\r\n        : this.lightColors.logoLightFileName || '';\r\n  }\r\n\r\n  constructor(\r\n    private themeService: ThemeService,\r\n    private cdr: ChangeDetectorRef,\r\n    private snackBar: MatSnackBar \r\n  ) {\r\n    // Initialize mode after dependency injection\r\n    this.mode = this.themeService.getCurrentMode();\r\n  }\r\n\r\n  // Utility: Read file input into Uint8Array buffer\r\n  private readFileAsBuffer(file: File): Promise<Uint8Array> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () =>\r\n        resolve(new Uint8Array(reader.result as ArrayBuffer));\r\n      reader.onerror = reject;\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  async onResetLogo() {\r\n    if (this.mode === 'dark') {\r\n      this.darkColors.logoDark = 'assets/icons/logo-dark.png';\r\n      this.darkColors.logoDarkFileName = '';\r\n    } else {\r\n      this.lightColors.logoLight = 'assets/icons/logo.png';\r\n      this.lightColors.logoLightFileName = '';\r\n    }\r\n\r\n    this.selectedLogoFile = undefined;\r\n    this.selectedLogoFileName = '';\r\n\r\n    await this.themeService.saveTheme(\r\n      this.mode === 'dark' ? this.darkColors : this.lightColors,\r\n      this.mode\r\n    );\r\n\r\n    this.themeService.logoUpdated$.next();\r\n  }\r\n\r\n  // Main action to apply the selected theme and optional new logo\r\n  async apply() {\r\n    this.loading = true;\r\n    this.cdr.detectChanges(); // Ensure spinner updates in UI\r\n\r\n    try {\r\n      if (this.selectedLogoFile) {\r\n        const buffer = await this.readFileAsBuffer(this.selectedLogoFile);\r\n        const originalFileName = this.selectedLogoFile.name;\r\n        const fileName = this.mode === 'dark' ? 'logo-dark.png' : 'logo.png';\r\n\r\n        // Save the logo image to disk and wait for it to be ready\r\n        await window.electronAPI?.writeLogo(buffer, fileName);\r\n        await this.themeService.waitForFile(fileName);\r\n\r\n        // Retrieve the base64 image URL for display\r\n        const base64 = await window.electronAPI.getLogoDataUrl(fileName);\r\n        const updatedColors = structuredClone(this.colors);\r\n\r\n        // Assign the base64 image as the logo\r\n        if (this.mode === 'dark') {\r\n          updatedColors.logoDark = base64;\r\n          updatedColors.logoDarkFileName = originalFileName;\r\n        } else {\r\n          updatedColors.logoLight = base64;\r\n          updatedColors.logoLightFileName = originalFileName; // Keep original name for light mode\r\n        }\r\n        this.selectedLogoFileName = originalFileName;\r\n        this.colors = updatedColors;\r\n        this.selectedLogoFile = undefined;\r\n      }\r\n\r\n      // Save updated theme config\r\n      await this.themeService.saveTheme(\r\n        this.mode === 'dark' ? this.darkColors : this.lightColors,\r\n        this.mode\r\n      );\r\n\r\n      // Apply the new theme to the UI\r\n      this.themeService['applyTheme'](this.colors, this.mode);\r\n      this.themeService.logoUpdated$.next(); // Notify subscribers (like the app component)\r\n\r\n      // Wait for logo update event or timeout to avoid UI stalling\r\n      await Promise.race([\r\n        new Promise<void>((resolve) => {\r\n          const sub = this.themeService.logoUpdated$.subscribe(() => {\r\n            resolve();\r\n            sub.unsubscribe();\r\n          });\r\n        }),\r\n        new Promise((resolve) => setTimeout(resolve, 1000)), // fallback timeout\r\n      ]);\r\n    } catch (err) {\r\n      console.error('Failed to apply theme:', err);\r\n    } finally {\r\n      this.loading = false;\r\n      this.cdr.detectChanges(); // Stop spinner\r\n    }\r\n  }\r\n}\r\n","<div class=\"theme-picker-container\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-icon>palette</mat-icon>\r\n    <span class=\"toolbar-title\">{{ title }}</span>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"content\">\r\n    <div class=\"theme-picker\">\r\n      <h2>Theme Customization</h2>\r\n\r\n      <div *ngIf=\"loading\" class=\"spinner-container\">\r\n        <mat-spinner diameter=\"75\"></mat-spinner>\r\n      </div>\r\n\r\n      <!-- Mode selector -->\r\n      <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n        <mat-label>Mode</mat-label>\r\n        <mat-select [(value)]=\"mode\" (selectionChange)=\"onModeChange()\">\r\n          <mat-option value=\"light\">Light</mat-option>\r\n          <mat-option value=\"dark\">Dark</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <!-- Color + Hex pairs -->\r\n      <ng-container *ngFor=\"let field of colorFields\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            class=\"color-swatch\"\r\n            matInput\r\n            type=\"color\"\r\n            [(ngModel)]=\"colors[field.key]\"\r\n          />\r\n\r\n          <mat-form-field appearance=\"outline\" class=\"hex-field\">\r\n            <mat-label>{{ field.label }} Hex</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              [(ngModel)]=\"colors[field.key]\"\r\n              maxlength=\"7\"\r\n              pattern=\"#[A-Fa-f0-9]{6}\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"form-group\">\r\n        <mat-form-field appearance=\"outline\" class=\"upload-logo-label\">\r\n          <mat-label>Upload Logo ({{ mode }})</mat-label>\r\n\r\n          <input\r\n            matInput\r\n            [value]=\"selectedLogoFileName || 'No file chosen…'\"\r\n            readonly\r\n          />\r\n          <div matSuffix class=\"logo-suffix\">\r\n            <button\r\n              class=\"upload-button\"\r\n              mat-icon-button\r\n              aria-label=\"Select logo file\"\r\n              (click)=\"fileInput.click()\"\r\n            >\r\n              <mat-icon>upload</mat-icon>\r\n            </button>\r\n\r\n            <button\r\n              *ngIf=\"selectedLogoFileName\"\r\n              class=\"reset-button\"\r\n              mat-icon-button\r\n              aria-label=\"Reset to default\"\r\n              (click)=\"onResetLogo()\"\r\n            >\r\n              <mat-icon>autorenew</mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <input\r\n            #fileInput\r\n            type=\"file\"\r\n            accept=\"image/png\"\r\n            hidden\r\n            (change)=\"onFileSelected($event)\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"actions\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"apply()\">\r\n          Apply\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createBooleanValueModel,\r\n  createChoiceValueModel,\r\n  createNullableVariableValueModel,\r\n  createStepModel,\r\n  createStringValueModel,\r\n  NullableVariable,\r\n} from 'sequential-workflow-editor-model';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\n\r\nlet description = 'Use the account attribute transform to look up an account for a particular source on an identity and return a specific attribute value from that account.';\r\n\r\n\r\nexport function createAccountAttribute(): AccountAttributeStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Account Attribute',\r\n    type: 'accountAttribute',\r\n    description: description,\r\n    properties: {\r\n      attributeName: '',\r\n      sourceName: '',\r\n      accountSortAttribute: null,\r\n      accountSortDescending: false,\r\n      accountReturnFirstLink: false,\r\n      accountFilter: null,\r\n      accountPropertyFilter: null,\r\n    },\r\n  };\r\n}\r\n\r\nexport interface AccountAttributeStep extends Step {\r\n  type: 'accountAttribute';\r\n  componentType: 'task';\r\n  description: string;\r\n  properties: {\r\n    attributeName: string;\r\n    sourceName: string;\r\n    accountSortAttribute?: NullableVariable;\r\n    accountSortDescending?: boolean;\r\n    accountReturnFirstLink?: boolean;\r\n    accountFilter?: NullableVariable;\r\n    accountPropertyFilter?: NullableVariable;\r\n  };\r\n}\r\n\r\nexport function createAccountAttributeModel(sources: string[]) {\r\nreturn createStepModel<AccountAttributeStep>(\r\n  'accountAttribute',\r\n  'task',\r\n  (step) => {\r\n    step\r\n      .property('attributeName')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .hint(\"The name of the account attribute to retrieve.\")\r\n      .label('Account Attribute Name');\r\n\r\n    step\r\n      .property('sourceName')\r\n      .value(createChoiceValueModel({ choices: sources })\r\n      )\r\n      .hint(\"The source from which to retrieve the account attribute.\")\r\n      .label('Source Name');\r\n\r\n    step\r\n      .property('accountSortAttribute')\r\n      .value(\r\n        createNullableVariableValueModel({\r\n          valueType: 'string',\r\n          isRequired: false\r\n        })\r\n      )\r\n      .hint(\"This configuration's value is a string name of the attribute to use when determining the ordering of returned accounts when there are multiple entries.\")\r\n      .label('Account Sort Attribute');\r\n\r\n    step\r\n      .property('accountSortDescending')\r\n      .value(\r\n        createBooleanValueModel({\r\n          defaultValue: true,\r\n        })\r\n      )\r\n      .hint(\"This configuration's value is a boolean (true/false). It controls the sort order when there are multiple accounts.\")\r\n      .label('Sort Descending');\r\n\r\n    step\r\n      .property('accountReturnFirstLink')\r\n      .value(\r\n        createBooleanValueModel({\r\n          defaultValue: true,\r\n        })\r\n      )\r\n      .hint(\"This configuration's value is a boolean (true/false). It controls which account to source a value from for an attribute. If this flag is set to true, the transform returns the value from the first account in the list, even if it is null. If this flag is set to false, the transform returns the first non-null value.\")\r\n      .label('Return First Link');\r\n\r\n    step\r\n      .property('accountFilter')\r\n      .value(\r\n        createNullableVariableValueModel({\r\n          valueType: 'string',\r\n          isRequired: false\r\n        })\r\n      )\r\n      .hint(\"This expression queries the database to narrow search results. This configuration's value is a sailpoint.object.Filter expression for searching against the database. The default filter always includes the source and identity, and any subsequent expressions are combined in an AND operation with the existing search criteria.\")\r\n      .label('Account Filter');\r\n\r\n    step\r\n      .property('accountPropertyFilter')\r\n      .value(\r\n        createNullableVariableValueModel({\r\n          valueType: 'string',\r\n          isRequired: false\r\n        })\r\n      )\r\n      .hint(\"Use this expression to search and filter accounts in memory. This configuration's value is a sailpoint.object.Filter expression for searching against the returned result set.\")\r\n      .label('Account Property Filter');\r\n  }\r\n);\r\n}\r\n\r\n\r\nexport async function getAvailableSources(sdk: SailPointSDKService): Promise<{\r\n    names: string[],\r\n    map: Map<string, string>\r\n}> {\r\n    const response = await sdk.listSources();\r\n    const sourceMap = new Map<string, string>();\r\n    \r\n    response.data.forEach(source => {\r\n        if (typeof source.name === 'string' && typeof source.id === 'string') {\r\n            sourceMap.set(source.name, source.id);\r\n        }\r\n    });\r\n    \r\n    return {\r\n        names: response.data.map(source => source.name),\r\n        map: sourceMap\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function serializeAccountAttribute(step: AccountAttributeStep) {\r\n  const {\r\n    accountSortDescending,\r\n    accountReturnFirstLink,\r\n    accountSortAttribute,\r\n    accountFilter,\r\n    accountPropertyFilter,\r\n  } = step.properties;\r\n\r\n  const attributes: Record<string, any> = {\r\n    attributeName: step.properties.attributeName,\r\n    sourceName: step.properties.sourceName,\r\n  };\r\n\r\n  if (accountSortDescending !== false)\r\n    attributes.accountSortDescending = accountSortDescending;\r\n  if (accountReturnFirstLink !== false)\r\n    attributes.accountReturnFirstLink = accountReturnFirstLink;\r\n  if (accountSortAttribute != null)\r\n    attributes.accountSortAttribute = accountSortAttribute;\r\n  if (accountFilter !== null) attributes.accountFilter = accountFilter;\r\n  if (accountPropertyFilter !== null)\r\n    attributes.accountPropertyFilter = accountPropertyFilter;\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeAccountAttribute(data: any): AccountAttributeStep {  \r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'task',\r\n      type: 'accountAttribute',\r\n      name: data.name ?? 'Account Attribute',\r\n      description: description,\r\n      properties: {\r\n        attributeName: data.attributes.attributeName ?? '',\r\n        sourceName: data.attributes.sourceName ?? '',\r\n        accountSortAttribute: data.attributes.accountSortAttribute ?? null,\r\n        accountSortDescending: data.attributes.accountSortDescending ?? false,\r\n        accountReturnFirstLink: data.attributes.accountReturnFirstLink ?? false,\r\n        accountFilter: data.attributes.accountFilter ?? null,\r\n        accountPropertyFilter: data.attributes.accountPropertyFilter ?? null,\r\n      }\r\n    };\r\n  }\r\n\r\nexport function isAccountAttributeStep(\r\n  step: Step\r\n): step is AccountAttributeStep {\r\n  return step.type === 'accountAttribute';\r\n}\r\n\r\nexport function getAccountAttributeIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" fill=\"gray\">\r\n    <path d=\"M12 12c2.7 0 5-2.3 5-5s-2.3-5-5-5-5 2.3-5 5 2.3 5 5 5zm0 2c-3.3 0-10 1.7-10 5v3h20v-3c0-3.3-6.7-5-10-5z\"/>\r\n  </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}\r\n","import {\r\n  BranchedStep,\r\n  Properties,\r\n  PropertyValue,\r\n  Sequence,\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the concatenation transform to join two or more string values into a combined output. The concatenation transform often joins elements such as first and last name into a full display name, but it has many other uses';\r\n\r\nexport function createConcat(): ConcatStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    description: description,\r\n    name: 'Concatenate',\r\n    type: 'concat',\r\n    properties: {},\r\n    branches: {\r\n        variable1: [],\r\n        variable2: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface ConcatStep extends BranchedStep {\r\n  type: 'concat';\r\n  description: string;\r\n  componentType: 'switch';\r\n  properties: Properties;\r\n}\r\n\r\nexport const ConcatModel = createStepModel<ConcatStep>(\r\n  'concat',\r\n  'switch',\r\n  () => {}\r\n);\r\n\r\nexport function serializeConcat(step: ConcatStep): {\r\n  name: string;\r\n  type: string;\r\n  attributes: {\r\n    values: any[];\r\n  };\r\n} {\r\n  const arrayOfValues: PropertyValue[] = [];\r\n\r\n  for (const [, sequence] of Object.entries(step.branches)) {\r\n    for (const step of sequence) {\r\n      arrayOfValues.push(serializeStep(step));\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: {\r\n      values: arrayOfValues,\r\n    },\r\n  };\r\n}\r\n\r\nexport function deserializeConcat(data: any): ConcatStep {\r\n  const branches: { [key: string]: Sequence } = {};\r\n  data.attributes.values.forEach((element: any, index: number) => {\r\n    const key = element.name ?? `Variable${index}`;\r\n    branches[key] = [deserializeToStep(element)];\r\n  });\r\n\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    description: description,\r\n    type: 'concat',\r\n    name: data.name ? `Concatenate (${data.name})` : 'Concatenate',\r\n    properties: {},\r\n    branches: branches,\r\n  };\r\n}\r\n\r\nexport function isConcatStep(step: Step): step is ConcatStep {\r\n  return step.type === 'concat';\r\n}\r\n\r\nexport function getConcatIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n  <path fill=\"gray\" d=\"M22 12l-4 4-1.41-1.41L18.17 13h-5.23c-.34 3.1-2.26 5.72-4.94 7.05C7.96 21.69 6.64 23 5 23c-1.66 0-3-1.34-3-3s1.34-3 3-3c.95 0 1.78.45 2.33 1.14 1.9-1.03 3.26-2.91 3.58-5.14h-3.1C7.4 14.16 6.3 15 5 15c-1.66 0-3-1.34-3-3s1.34-3 3-3c1.3 0 2.4.84 2.82 2h3.1c-.32-2.23-1.69-4.1-3.59-5.14C6.78 6.55 5.95 7 5 7 3.34 7 2 5.66 2 4s1.34-3 3-3c1.64 0 2.96 1.31 2.99 2.95 2.68 1.33 4.6 3.95 4.94 7.05h5.23l-1.58-1.59L18 8l4 4z\"/>\r\n  </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}\r\n","import {\r\n  BranchedStep,\r\n  Sequence,\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport { createStepModel, createStringValueModel } from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the static transform to return a fixed string value, or more commonly, to evaluate Velocity Template Language. The latter implementation is often useful when you are using if/then/else logic or iterating through a for loop. The static transform can also take other dynamically provided variables as inputs into the value attribute.';\r\n\r\nexport function createStatic(): StaticStep  {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Static',\r\n      type: 'static',\r\n      description: description,\r\n      properties: {\r\n        value: ''\r\n      },\r\n      branches: {},\r\n    };\r\n  }\r\n\r\n  export interface StaticStep extends BranchedStep {\r\n    type: 'static';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n        value: string;\r\n    };\r\n  }\r\n\r\nexport const StaticModel = createStepModel<StaticStep>('static', 'switch', step => {\r\n    step.property('value')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n          multiline: true,\r\n        })\r\n      )\r\n      .hint('Static values support apache velocity language')\r\n      .label('Static Value');\r\n  });\r\n\r\n\r\n\r\nexport function serializeStatic(step: StaticStep): {\r\n    name: string;\r\n    type: string;\r\n    attributes: {\r\n      value: string;\r\n      [key: string]: any;\r\n    };\r\n  } {\r\n    const attributes: { value: string; [key: string]: any } = {\r\n        value: step.properties.value,\r\n    };\r\n\r\n    for (const [branchName, sequence] of Object.entries(step.branches)) {\r\n        if (sequence.length === 1) {\r\n          attributes[branchName] = serializeStep(sequence[0]);\r\n        }\r\n      }\r\n\r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes\r\n    };\r\n  }\r\n\r\n  export function deserializeStatic(data: any): StaticStep {\r\n    const branches: { [key: string]: Sequence } = {};\r\n    \r\n    const attributes = data.attributes as Record<string, unknown>;\r\n    Object.keys(attributes).forEach((key) => {\r\n      if (key !== 'value') {\r\n        branches[key] = [deserializeToStep(attributes[key])];\r\n      }\r\n    });\r\n\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    type: 'static',\r\n    name: data.name ? `Static (${data.name})` : 'Static',\r\n    description: description,\r\n    properties: { value: data.attributes.value},\r\n    branches: branches,\r\n  };\r\n}\r\n\r\nexport function isStaticStep(step: Step): step is StaticStep {\r\n  return step.type === 'static';\r\n}\r\n\r\n\r\nexport function getStaticIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill=\"gray\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><g>\r\n  // <path d=\"M2.5,4v3h5v12h3V7h5V4H2.5z M21.5,9h-9v3h3v7h3v-7h3V9z\"/></g></g></g>\r\n  // </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}","// velocity-editor-dialog.component.ts\r\nimport { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n// CodeMirror 6 imports\r\nimport { completionKeymap } from '@codemirror/autocomplete';\r\nimport { indentWithTab } from '@codemirror/commands';\r\nimport { StreamLanguage, foldKeymap } from '@codemirror/language';\r\nimport { velocity } from '@codemirror/legacy-modes/mode/velocity';\r\nimport { searchKeymap } from '@codemirror/search';\r\nimport { EditorState, Extension } from '@codemirror/state';\r\nimport { oneDark } from '@codemirror/theme-one-dark';\r\nimport { keymap } from '@codemirror/view';\r\nimport { EditorView, basicSetup } from 'codemirror';\r\nimport { smoothy } from 'thememirror';\r\n\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ThemeService } from '../theme/theme.service';\r\n\r\n\r\nexport interface VelocityEditorData {\r\n  code: string;\r\n  title?: string;\r\n  readonly?: boolean;\r\n  theme?: 'light' | 'dark';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-velocity-editor-dialog',\r\n  templateUrl: './velocity-editor-dialog.component.html',\r\n  styleUrls: ['./velocity-editor-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule\r\n  ]\r\n})\r\nexport class VelocityEditorDialogComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef<HTMLDivElement>;\r\n  private destroy$ = new Subject<void>();\r\n  isDark = false;\r\n  editorForm: FormGroup;\r\n  editorView!: EditorView;\r\n  originalCode: string;\r\n  hasChanges: boolean = false;\r\n  editorStats: any = '{\"lines\":0,\"length\":0,\"selection\":0,\"cursor\":\"1:1\"}';\r\n  currentTheme: 'light' | 'dark' = 'light';\r\n  wordWrapEnabled: boolean = true;\r\n  identities: any;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<VelocityEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: VelocityEditorData,\r\n    private fb: FormBuilder,\r\n    private themeService: ThemeService,\r\n    private changeRef: ChangeDetectorRef\r\n  ) {\r\n    this.originalCode = data.code || '';\r\n    this.currentTheme = data.theme || 'light';\r\n    this.editorForm = this.fb.group({\r\n      code: [this.originalCode, (control: AbstractControl<any, any>) => Validators.required(control)]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Set dialog configuration\r\n    this.dialogRef.disableClose = true;\r\n    this.dialogRef.backdropClick().subscribe(() => {\r\n      this.onCancel();\r\n    });\r\n\r\n    this.themeService.isDark$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isDark => {\r\n        this.isDark = isDark;\r\n        this.recreateEditor();\r\n      });\r\n  }\r\n  \r\n  renderIdentityStatusChart() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initializeCodeMirror();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.editorView) {\r\n      this.editorView.destroy();\r\n    }\r\n\r\n  }\r\n\r\n  private initializeCodeMirror(): void {\r\n    // Auto-format code if requested\r\n    let initialCode = this.originalCode;\r\n    initialCode = this.formatVelocityCode(this.originalCode);\r\n    this.originalCode = initialCode; // Update original to formatted version\r\n    \r\n    \r\n    const extensions = this.getExtensions();\r\n    \r\n    const state = EditorState.create({\r\n      doc: initialCode,\r\n      extensions\r\n    });\r\n\r\n    this.editorView = new EditorView({\r\n      state,\r\n      parent: this.editorContainer.nativeElement,\r\n      dispatch: (tr) => {\r\n        this.editorView.update([tr]);\r\n        \r\n        if (tr.docChanged) {\r\n          const currentValue = this.editorView.state.doc.toString();\r\n          this.editorForm.patchValue({ code: currentValue });\r\n          this.hasChanges = currentValue !== this.originalCode;\r\n          this.updateEditorStats();\r\n        }\r\n        \r\n        if (tr.selection) {\r\n          this.updateEditorStats();\r\n        }\r\n      }\r\n    });\r\n\r\n    // Initial stats\r\n    this.updateEditorStats();\r\n\r\n    // Focus the editor\r\n    setTimeout(() => {\r\n      this.editorView.focus();\r\n    }, 100);\r\n  }\r\n\r\n  private getExtensions(): Extension[] {\r\n    const extensions: Extension[] = [\r\n      basicSetup,\r\n      StreamLanguage.define(velocity),\r\n      keymap.of([\r\n        indentWithTab,\r\n        ...searchKeymap,\r\n        ...foldKeymap,\r\n        ...completionKeymap,\r\n        {\r\n          key: 'Ctrl-s',\r\n          run: () => {\r\n            this.onSave();\r\n            return true;\r\n          }\r\n        },\r\n        {\r\n          key: 'Escape',\r\n          run: () => {\r\n            this.onCancel();\r\n            return true;\r\n          }\r\n        }\r\n      ])\r\n    ];\r\n\r\n    // Add word wrapping conditionally\r\n    if (this.wordWrapEnabled) {\r\n      extensions.push(EditorView.lineWrapping);\r\n    }\r\n\r\n    // Add readonly mode if specified\r\n    if (this.data.readonly) {\r\n      extensions.push(EditorState.readOnly.of(true));\r\n    }\r\n\r\n    // Add theme\r\n    if (this.isDark === true) {\r\n      extensions.push(oneDark);\r\n    } else {\r\n      extensions.push(smoothy);\r\n    }\r\n\r\n    return extensions;\r\n  }\r\n\r\n  private updateEditorStats(): void {\r\n    if (!this.editorView) return;\r\n\r\n    const state = this.editorView.state;\r\n    const doc = state.doc;\r\n    const selection = state.selection.main;\r\n    \r\n    this.editorStats = {\r\n      lines: doc.lines,\r\n      length: doc.length,\r\n      selection: selection.empty ? 0 : selection.to - selection.from,\r\n      cursor: `${doc.lineAt(selection.head).number}:${selection.head - doc.lineAt(selection.head).from + 1}`\r\n    };\r\n    \r\n    this.changeRef.detectChanges();\r\n  }\r\n\r\n  toggleWordWrap(): void {\r\n    this.wordWrapEnabled = !this.wordWrapEnabled;\r\n    this.recreateEditor();\r\n  }\r\n\r\n  formatCode(): void {\r\n    if (!this.editorView) return;\r\n\r\n    const currentCode = this.editorView.state.doc.toString();\r\n    \r\n    // Basic Velocity code formatting\r\n    const formattedCode = this.formatVelocityCode(currentCode);\r\n    \r\n    if (formattedCode !== currentCode) {\r\n      this.editorView.dispatch({\r\n        changes: {\r\n          from: 0,\r\n          to: this.editorView.state.doc.length,\r\n          insert: formattedCode\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private formatVelocityCode(code: string): string {\r\n    // First, handle single-line concatenated Velocity directives\r\n    let formatted = this.splitConcatenatedDirectives(code);\r\n    \r\n    // Split into lines and process each one\r\n    const lines = formatted.split('\\n');\r\n    let indentLevel = 0;\r\n    const indentSize = 2;\r\n    let inComment = false;\r\n\r\n    const formattedLines = lines.map((line) => {\r\n      const trimmed = line.trim();\r\n      \r\n      // Handle multi-line comments\r\n      if (trimmed.startsWith('#*')) {\r\n        inComment = true;\r\n      }\r\n      if (trimmed.endsWith('*#')) {\r\n        inComment = false;\r\n        return ' '.repeat(indentLevel * indentSize) + trimmed;\r\n      }\r\n      if (inComment) {\r\n        return ' '.repeat(indentLevel * indentSize) + trimmed;\r\n      }\r\n      \r\n      // Skip empty lines\r\n      if (!trimmed) {\r\n        return '';\r\n      }\r\n      \r\n      // Handle block end directives - decrease indent before formatting\r\n      if (this.isBlockEndDirective(trimmed)) {\r\n        indentLevel = Math.max(0, indentLevel - 1);\r\n      }\r\n      \r\n      // Handle else/elseif - same level as if\r\n      if (this.isElseDirective(trimmed)) {\r\n        const currentIndent = Math.max(0, indentLevel - 1);\r\n        const formattedLine = ' '.repeat(currentIndent * indentSize) + this.formatVelocityLine(trimmed);\r\n        return formattedLine;\r\n      }\r\n      \r\n      // Apply current indentation\r\n      const formattedLine = ' '.repeat(indentLevel * indentSize) + this.formatVelocityLine(trimmed);\r\n      \r\n      // Handle block start directives - increase indent after formatting\r\n      if (this.isBlockStartDirective(trimmed)) {\r\n        indentLevel++;\r\n      }\r\n      \r\n      return formattedLine;\r\n    });\r\n    \r\n    // Clean up extra blank lines\r\n    let result = formattedLines.join('\\n');\r\n    \r\n    // Remove multiple consecutive blank lines\r\n    result = result.replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n');\r\n    \r\n    // Add spacing around major blocks\r\n    result = this.addBlockSpacing(result);\r\n    \r\n    return result;\r\n  }\r\n\r\n  private splitConcatenatedDirectives(code: string): string {\r\n    // Handle single-line concatenated Velocity directives\r\n    let formatted = code;\r\n    \r\n    // Split lines that have multiple directives concatenated\r\n    const lines = formatted.split('\\n');\r\n    const expandedLines: string[] = [];\r\n    \r\n    lines.forEach(line => {\r\n      const trimmed = line.trim();\r\n      \r\n      // Skip if line is already properly formatted or is a comment\r\n      if (!trimmed || trimmed.startsWith('##') || trimmed.startsWith('#*')) {\r\n        expandedLines.push(line);\r\n        return;\r\n      }\r\n      \r\n      // Check if this line has concatenated directives\r\n      if (this.hasConcatenatedDirectives(trimmed)) {\r\n        const splitLine = this.splitVelocityDirectiveLine(trimmed);\r\n        expandedLines.push(...splitLine);\r\n      } else {\r\n        expandedLines.push(line);\r\n      }\r\n    });\r\n    \r\n    return expandedLines.join('\\n');\r\n  }\r\n  \r\n  private hasConcatenatedDirectives(line: string): boolean {\r\n    // Count directive occurrences (including #{else} format)\r\n    const directivePattern = /#(if|elseif|else|end|foreach|while|macro|define|set|parse|include)\\b|#{else}/g;\r\n    const matches = line.match(directivePattern);\r\n    return !!matches && matches.length > 1;\r\n  }\r\n  \r\n  private splitVelocityDirectiveLine(line: string): string[] {\r\n    const result: string[] = [];\r\n    let i = 0;\r\n    \r\n    while (i < line.length) {\r\n      const char = line[i];\r\n      \r\n      // Look for directive starts\r\n      if (char === '#') {\r\n        const remainingLine = line.substring(i);\r\n        \r\n        // Check for #{else} first, then other directives\r\n        let directiveMatch;\r\n        if (remainingLine.startsWith('#{else}')) {\r\n          directiveMatch = { 0: '#{else}', 1: 'else', length: 7 };\r\n        } else {\r\n          const match = remainingLine.match(/^#(if|elseif|else|end|foreach|while|macro|define|set|parse|include)\\b/);\r\n          if (match) {\r\n            directiveMatch = { 0: match[0], 1: match[1], length: match[0].length };\r\n          }\r\n        }\r\n        \r\n        if (directiveMatch) {\r\n          // Find the end of this directive\r\n          let directiveEnd;\r\n          \r\n          if (directiveMatch[1] === 'else' && remainingLine.startsWith('#{else}')) {\r\n            // Special handling for #{else}\r\n            directiveEnd = i + 7; // Length of '#{else}'\r\n            result.push('#{else}');\r\n          } else if (directiveMatch[1] === 'end' || directiveMatch[1] === 'else') {\r\n            // Simple directives without parameters\r\n            directiveEnd = i + directiveMatch.length;\r\n            result.push(line.substring(i, directiveEnd as number));\r\n          } else {\r\n            // Complex directives with parameters\r\n            directiveEnd = this.findDirectiveEnd(line, i);\r\n            const directive = line.substring(i, directiveEnd as number).trim();\r\n            result.push(directive);\r\n          }\r\n          \r\n          i = directiveEnd;\r\n        } else {\r\n          // Not a directive, treat as content\r\n          const nextDirectivePos = this.findNextDirective(line, i + 1);\r\n          const content = line.substring(i, nextDirectivePos).trim();\r\n          if (content) {\r\n            result.push(content);\r\n          }\r\n          i = nextDirectivePos;\r\n        }\r\n      } else {\r\n        // Find content until next directive\r\n        const nextDirectivePos = this.findNextDirective(line, i);\r\n        const content = line.substring(i, nextDirectivePos).trim();\r\n        if (content) {\r\n          result.push(content);\r\n        }\r\n        i = nextDirectivePos;\r\n      }\r\n      \r\n      // Safety check to prevent infinite loop\r\n      if (i === 0) {\r\n        i++;\r\n      }\r\n    }\r\n    \r\n    return result.length > 0 ? result : [line];\r\n  }\r\n  \r\n  private findNextDirective(line: string, startPos: number): number {\r\n    let inString = false;\r\n    let stringChar = '';\r\n    let parenCount = 0;\r\n    \r\n    for (let i = startPos; i < line.length; i++) {\r\n      const char = line[i];\r\n      const prevChar = line[i - 1];\r\n      \r\n      // Handle string literals (including escaped quotes)\r\n      if (!inString && (char === '\"' || char === \"'\")) {\r\n        if (prevChar !== '\\\\') {\r\n          inString = true;\r\n          stringChar = char;\r\n        }\r\n      } else if (inString && char === stringChar) {\r\n        if (prevChar !== '\\\\') {\r\n          inString = false;\r\n          stringChar = '';\r\n        }\r\n      }\r\n      \r\n      if (!inString) {\r\n        // Handle parentheses\r\n        if (char === '(') {\r\n          parenCount++;\r\n        } else if (char === ')') {\r\n          parenCount--;\r\n        }\r\n        \r\n        // Look for directive starts when not inside parentheses or strings\r\n        if (char === '#' && parenCount === 0) {\r\n          const remainingLine = line.substring(i);\r\n          if (remainingLine.startsWith('#{else}') || \r\n              remainingLine.match(/^#(if|elseif|else|end|foreach|while|macro|define|set|parse|include)\\b/)) {\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return line.length;\r\n  }\r\n  \r\n  private findDirectiveEnd(line: string, startPos: number): number {\r\n    let pos = startPos;\r\n    let parenCount = 0;\r\n    let inString = false;\r\n    let stringChar = '';\r\n    \r\n    // Skip the directive name\r\n    while (pos < line.length && /[a-zA-Z#{}]/.test(line[pos])) {\r\n      pos++;\r\n    }\r\n    \r\n    // For directives without parameters (like #else, #end), return immediately\r\n    if (pos >= line.length || line[pos] !== '(') {\r\n      // Check for #{else} format\r\n      if (line.substring(startPos).startsWith('#{else}')) {\r\n        return startPos + 7;\r\n      }\r\n      // Look for the next directive or end of line\r\n      const nextDirectivePos = line.indexOf('#', pos);\r\n      return nextDirectivePos > 0 ? nextDirectivePos : line.length;\r\n    }\r\n    \r\n    // Handle directives with parameters\r\n    while (pos < line.length) {\r\n      const char = line[pos];\r\n      const prevChar = line[pos - 1];\r\n      \r\n      // Handle string literals (including escaped quotes)\r\n      if (!inString && (char === '\"' || char === \"'\")) {\r\n        // Check if it's not escaped (handle \\\" and \\')\r\n        if (prevChar !== '\\\\') {\r\n          inString = true;\r\n          stringChar = char;\r\n        }\r\n      } else if (inString && char === stringChar) {\r\n        // Check if it's not escaped\r\n        if (prevChar !== '\\\\') {\r\n          inString = false;\r\n          stringChar = '';\r\n        }\r\n      }\r\n      \r\n      if (!inString) {\r\n        if (char === '(') {\r\n          parenCount++;\r\n        } else if (char === ')') {\r\n          parenCount--;\r\n          if (parenCount === 0) {\r\n            return pos + 1; // Include the closing parenthesis\r\n          }\r\n        }\r\n      }\r\n      \r\n      pos++;\r\n    }\r\n    \r\n    return pos;\r\n  }\r\n  \r\n  private formatVelocityLine(line: string): string {\r\n    let formatted = line;\r\n    \r\n    // Handle escaped quotes in strings - convert \\\" back to \"\r\n    formatted = formatted.replace(/\\\\\"/g, '\"');\r\n    formatted = formatted.replace(/\\\\'/g, \"'\");\r\n    \r\n    // Add spaces around operators in #set statements\r\n    if (formatted.startsWith('#set')) {\r\n      formatted = formatted.replace(/\\s*=\\s*/g, ' = ');\r\n      formatted = formatted.replace(/\\s*\\+\\s*/g, ' + ');\r\n      formatted = formatted.replace(/\\s*-\\s*/g, ' - ');\r\n      formatted = formatted.replace(/\\s*\\*\\s*/g, ' * ');\r\n      formatted = formatted.replace(/\\s*\\/\\s*/g, ' / ');\r\n    }\r\n    \r\n    // Add spaces around comparison operators\r\n    formatted = formatted.replace(/\\s*==\\s*/g, ' == ');\r\n    formatted = formatted.replace(/\\s*!=\\s*/g, ' != ');\r\n    formatted = formatted.replace(/\\s*<=\\s*/g, ' <= ');\r\n    formatted = formatted.replace(/\\s*>=\\s*/g, ' >= ');\r\n    formatted = formatted.replace(/\\s*&&\\s*/g, ' && ');\r\n    formatted = formatted.replace(/\\s*\\|\\|\\s*/g, ' || ');\r\n    \r\n    // Format method calls with proper spacing\r\n    formatted = formatted.replace(/\\s*\\(\\s*/g, '(');\r\n    formatted = formatted.replace(/\\s*\\)\\s*/g, ')');\r\n    formatted = formatted.replace(/\\s*,\\s*/g, ', ');\r\n    \r\n    // Format array/list literals\r\n    formatted = formatted.replace(/\\[\\s*/g, '[');\r\n    formatted = formatted.replace(/\\s*\\]/g, ']');\r\n    \r\n    // Format object literals\r\n    formatted = formatted.replace(/\\{\\s*/g, '{');\r\n    formatted = formatted.replace(/\\s*\\}/g, '}');\r\n    \r\n    // Clean up extra spaces\r\n    formatted = formatted.replace(/\\s+/g, ' ');\r\n    \r\n    return formatted;\r\n  }\r\n  \r\n  private isBlockStartDirective(line: string): boolean {\r\n    const blockStarts = [\r\n      '#if', '#foreach', '#while', '#macro', '#define', \r\n      '#@', '#{', '#parse', '#include', '#evaluate'\r\n    ];\r\n    return blockStarts.some(directive => \r\n      line.startsWith(directive + '(') || \r\n      line.startsWith(directive + ' ') ||\r\n      line === directive\r\n    );\r\n  }\r\n  \r\n  private isBlockEndDirective(line: string): boolean {\r\n    return line.startsWith('#end');\r\n  }\r\n  \r\n  private isElseDirective(line: string): boolean {\r\n    return line.startsWith('#else') || line.startsWith('#{else}');\r\n  }\r\n  \r\n  private addBlockSpacing(code: string): string {\r\n    let result = code;\r\n    \r\n    // Add space before major block directives (but not after #end and not if already has content after)\r\n    const majorBlocks = ['#if', '#foreach', '#while', '#macro', '#define'];\r\n    majorBlocks.forEach(block => {\r\n      // Only add spacing before blocks that don't already have proper spacing\r\n      // and are not immediately after another directive\r\n      const regex = new RegExp(`(\\\\n(?!\\\\s*$)(?!\\\\s*#)(?!\\\\n))(?=\\\\s*\\\\${block})`, 'g');\r\n      result = result.replace(regex, '\\n\\n');\r\n    });\r\n    \r\n    // Add space after #end directives (but only when not followed by another #end or end of string)\r\n    result = result.replace(/(#end[^\\n]*)\\n(?!\\s*$)(?!\\s*#end)(?!\\s*\\n)/g, '$1\\n\\n');\r\n    \r\n    // Add space before and after macro definitions\r\n    result = result.replace(/(\\n)(\\s*#macro)/g, '$1\\n$2');\r\n    result = result.replace(/(#end\\s*##[^\\n]*macro[^\\n]*)\\n/g, '$1\\n\\n');\r\n    \r\n    // Remove any double spacing that might have been created after directive blocks\r\n    // but preserve intentional spacing elsewhere\r\n    result = result.replace(/(\\n\\s*#\\w+[^\\n]*)\\n\\n(\\s*#)/g, '$1\\n$2');\r\n    result = result.replace(/(\\n\\s*#\\w+[^\\n]*)\\n\\n(\\s*\\$)/g, '$1\\n$2');\r\n    \r\n    return result;\r\n  }\r\n\r\n  private compressVelocityCode(code: string): string {\r\n    // Split into lines and process each one\r\n    const lines = code.split('\\n');\r\n    const compressedParts: string[] = [];\r\n    \r\n    lines.forEach(line => {\r\n      const trimmed = line.trim();\r\n      \r\n      // Skip empty lines\r\n      if (!trimmed) {\r\n        return;\r\n      }\r\n      \r\n      // Skip comments (but preserve inline comments that might be important)\r\n      if (trimmed.startsWith('##') && !trimmed.includes('#end')) {\r\n        return;\r\n      }\r\n      \r\n      compressedParts.push(trimmed);\r\n    });\r\n    \r\n    // Join all parts together\r\n    let compressed = compressedParts.join('');\r\n    \r\n    // Only do minimal cleanup - don't over-process\r\n    compressed = this.minimalCleanupCompressed(compressed);\r\n    \r\n    return compressed;\r\n  }\r\n  \r\n  private minimalCleanupCompressed(code: string): string {\r\n    let cleaned = code;\r\n    \r\n    // Only clean up obvious extra spaces while preserving string content\r\n    cleaned = this.preserveStringsWhileProcessing(cleaned, (content) => {\r\n      // Only remove spaces around commas and parentheses - be conservative\r\n      content = content.replace(/\\s*,\\s*/g, ',');\r\n      content = content.replace(/\\(\\s+/g, '(');\r\n      content = content.replace(/\\s+\\)/g, ')');\r\n      \r\n      // Clean up multiple spaces\r\n      content = content.replace(/\\s+/g, ' ');\r\n      \r\n      return content;\r\n    });\r\n    \r\n    return cleaned;\r\n  }\r\n  \r\n  private preserveStringsWhileProcessing(code: string, processor: (content: string) => string): string {\r\n    const stringMarkers: Array<{start: number, end: number, content: string}> = [];\r\n    let inString = false;\r\n    let stringChar = '';\r\n    let stringStart = 0;\r\n    \r\n    // Find all string literals\r\n    for (let i = 0; i < code.length; i++) {\r\n      const char = code[i];\r\n      const prevChar = code[i - 1];\r\n      \r\n      if (!inString && (char === '\"' || char === \"'\")) {\r\n        if (prevChar !== '\\\\') {\r\n          inString = true;\r\n          stringChar = char;\r\n          stringStart = i;\r\n        }\r\n      } else if (inString && char === stringChar) {\r\n        if (prevChar !== '\\\\') {\r\n          stringMarkers.push({\r\n            start: stringStart,\r\n            end: i + 1,\r\n            content: code.substring(stringStart, i + 1)\r\n          });\r\n          inString = false;\r\n          stringChar = '';\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Replace strings with placeholders\r\n    let processableCode = code;\r\n    const placeholders: string[] = [];\r\n    \r\n    stringMarkers.reverse().forEach((marker, index) => {\r\n      const placeholder = `__STRING_PLACEHOLDER_${index}__`;\r\n      placeholders.unshift(marker.content);\r\n      processableCode = processableCode.substring(0, marker.start) + \r\n                       placeholder + \r\n                       processableCode.substring(marker.end);\r\n    });\r\n    \r\n    // Process the code without strings\r\n    const processedCode = processor(processableCode);\r\n    \r\n    // Restore strings\r\n    let result = processedCode;\r\n    placeholders.forEach((stringContent, index) => {\r\n      const placeholder = `__STRING_PLACEHOLDER_${index}__`;\r\n      result = result.replace(placeholder, stringContent);\r\n    });\r\n    \r\n    return result;\r\n  }\r\n\r\n  private recreateEditor(): void {\r\n    if (!this.editorView) return;\r\n\r\n    const currentCode = this.editorView.state.doc.toString();\r\n    const currentSelection = this.editorView.state.selection;\r\n    \r\n    this.editorView.destroy();\r\n    \r\n    const extensions = this.getExtensions();\r\n    \r\n    const state = EditorState.create({\r\n      doc: currentCode,\r\n      extensions,\r\n      selection: currentSelection\r\n    });\r\n\r\n    this.editorView = new EditorView({\r\n      state,\r\n      parent: this.editorContainer.nativeElement,\r\n      dispatch: (tr) => {\r\n        this.editorView.update([tr]);\r\n        \r\n        if (tr.docChanged) {\r\n          const currentValue = this.editorView.state.doc.toString();\r\n          this.editorForm.patchValue({ code: currentValue });\r\n          this.hasChanges = currentValue !== this.originalCode;\r\n          this.updateEditorStats();\r\n        }\r\n        \r\n        if (tr.selection) {\r\n          this.updateEditorStats();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.updateEditorStats();\r\n  }\r\n\r\n  onSave(): void {\r\n    if (this.editorForm.valid && this.editorView) {\r\n      const code = this.editorView.state.doc.toString();\r\n      const compressedCode = this.compressVelocityCode(code);\r\n\r\n      this.dialogRef.close({\r\n        code: compressedCode,\r\n        saved: true\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    if (this.hasChanges) {\r\n      const confirmClose = window.confirm('You have unsaved changes. Are you sure you want to close?');\r\n      if (!confirmClose) {\r\n        return;\r\n      }\r\n    }\r\n    this.dialogRef.close({\r\n      code: this.originalCode,\r\n      saved: false\r\n    });\r\n  }\r\n}","<div class=\"velocity-editor-dialog\" (keydown)=\"$event.stopPropagation()\">\r\n      <h2 mat-dialog-title>{{ data.title || 'Edit Velocity Code' }}</h2>\r\n      \r\n      <mat-dialog-content class=\"dialog-content\">\r\n        <form [formGroup]=\"editorForm\" class=\"editor-form\">\r\n          <div class=\"editor-toolbar\">\r\n            <div class=\"toolbar-left\">\r\n              <button \r\n                mat-icon-button \r\n                matTooltip=\"Format Code\"\r\n                type=\"button\" \r\n                (click)=\"formatCode()\"\r\n                title=\"Format Code\">\r\n                <mat-icon>code</mat-icon>\r\n              </button>\r\n              <button \r\n                mat-icon-button \r\n                type=\"button\" \r\n                (click)=\"toggleWordWrap()\"\r\n                title=\"Toggle Word Wrap\">\r\n                <mat-icon>wrap_text</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"toolbar-right\">\r\n              <span class=\"editor-info\" *ngIf=\"editorStats\">\r\n                <span class=\"info-item\">Lines: {{ editorStats.lines }}</span>\r\n                <span class=\"info-item\">Length: {{ editorStats.length }}</span>\r\n                <span class=\"info-item\">Sel: {{ editorStats.selection }}</span>\r\n                <span class=\"info-item\">Pos: {{ editorStats.cursor }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"code-editor-container\" #editorContainer>\r\n            <!-- CodeMirror will be mounted here -->\r\n          </div>\r\n        </form>\r\n      </mat-dialog-content>\r\n      \r\n      <mat-dialog-actions align=\"end\" class=\"dialog-actions\">\r\n        <button \r\n          mat-button \r\n          type=\"button\" \r\n          (click)=\"onCancel()\"\r\n          class=\"cancel-btn\">\r\n          Cancel\r\n        </button>\r\n        <button \r\n          mat-raised-button \r\n          color=\"primary\" \r\n          type=\"button\"\r\n          (click)=\"onSave()\"\r\n          [disabled]=\"!editorForm.valid || !hasChanges\"\r\n          class=\"save-btn\">\r\n          Save\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>","// auto-save.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { cloneDeep, isEqual } from 'lodash-es';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface SavedTransform {\r\n  id?: string;\r\n  name: string;\r\n  definition: any;\r\n  lastModified: number;\r\n  isNew: boolean;\r\n  cloudVersion?: any; // Store the original cloud version for comparison\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AutoSaveService {\r\n  private readonly STORAGE_KEY = 'sailpoint_transforms_autosave';\r\n  private readonly UNSAVED_CHANGES_KEY = 'sailpoint_transforms_unsaved';\r\n\r\n  private unsavedChangesSubject = new BehaviorSubject<Set<string>>(new Set());\r\n  public unsavedChanges$ = this.unsavedChangesSubject.asObservable();\r\n\r\n  constructor() {\r\n    this.loadUnsavedChanges();\r\n  }\r\n\r\n  /**\r\n   * Auto-save a transform locally\r\n   */\r\n  autoSave(\r\n    transformId: string,\r\n    name: string,\r\n    definition: any,\r\n    isNew: boolean = false,\r\n    cloudVersion?: any\r\n  ): void {  \r\n    const savedTransform: SavedTransform = {\r\n      id: isNew ? undefined : transformId,\r\n      name,\r\n      definition,\r\n      lastModified: Date.now(),\r\n      isNew,\r\n      cloudVersion,\r\n    };\r\n\r\n    const key = this.getStorageKey(transformId, isNew);\r\n    localStorage.setItem(key, JSON.stringify(savedTransform));\r\n\r\n    // Mark as having unsaved changes\r\n    this.markAsUnsaved(transformId);\r\n\r\n    console.log(`Auto-saved transform: ${name}`);\r\n  }\r\n\r\n  /**\r\n   * Get locally saved transform\r\n   */\r\n  getLocalSave(\r\n    transformId: string,\r\n    isNew: boolean = false\r\n  ): SavedTransform | null {\r\n    const key = this.getStorageKey(transformId, isNew);\r\n    const saved = localStorage.getItem(key);\r\n\r\n    if (!saved) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(saved) as SavedTransform;\r\n    } catch (error) {\r\n      console.error('Failed to parse saved transform:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear local save after successful cloud sync\r\n   */\r\n  clearLocalSave(transformId: string, isNew: boolean = false): void {\r\n    const key = this.getStorageKey(transformId, isNew);\r\n    localStorage.removeItem(key);\r\n\r\n    // Remove from unsaved changes\r\n    this.markAsSaved(transformId);\r\n\r\n    console.log(`Cleared local save for transform: ${transformId}`);\r\n  }\r\n\r\n  /**\r\n   * Get all locally saved transforms\r\n   */\r\n  getAllLocalSaves(): SavedTransform[] {\r\n    const saves: SavedTransform[] = [];\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key?.startsWith(this.STORAGE_KEY)) {\r\n        const saved = localStorage.getItem(key);\r\n        if (saved) {\r\n          try {\r\n            saves.push(JSON.parse(saved) as SavedTransform);\r\n          } catch (error) {\r\n            console.error('Failed to parse saved transform:', error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return saves.sort((a, b) => b.lastModified - a.lastModified);\r\n  }\r\n\r\n  /**\r\n   * Check if transform has local changes\r\n   */\r\n  hasLocalChanges(transformId: string): boolean {\r\n    return this.unsavedChangesSubject.value.has(transformId);\r\n  }\r\n\r\n  /**\r\n   * Check if transform definition differs from cloud version\r\n   */\r\n  hasUnsavedChanges(transformId: string, currentDefinition: any): boolean {\r\n    const localSave = this.getLocalSave(transformId);\r\n    const cloudVersion = localSave?.cloudVersion;\r\n\r\n    if (!cloudVersion) {\r\n      console.warn(\r\n        '[AutoSave] No cloud version found for transform:',\r\n        transformId\r\n      );\r\n      return false;\r\n    }\r\n\r\n    const normalizedCloud = this.normalizeDefinition(cloudVersion);\r\n    const normalizedCurrent = this.normalizeDefinition(currentDefinition);\r\n\r\n    const isDifferent = !isEqual(normalizedCloud, normalizedCurrent);\r\n\r\n    return isDifferent;\r\n  }\r\n\r\n  private normalizeDefinition(def: any): any {\r\n    console.log('[AutoSave] Normalizing definition:', def);\r\n    const clone = cloneDeep(def);\r\n\r\n    if (typeof clone !== 'object' || clone === null) {\r\n      return clone;\r\n    }\r\n\r\n    // Remove irrelevant top-level fields\r\n    delete clone.id;\r\n\r\n    // Normalize top-level name (Static (X) → X, Concatenate (X) → X)\r\n    if (typeof clone.name === 'string') {\r\n      const match = clone.name.match(/^(Static|Concatenate) \\((.+)\\)$/);\r\n      if (match) {\r\n        clone.name = match[2].trim();\r\n      }\r\n    }\r\n\r\n    // Normalize or remove internal\r\n    if (\r\n      'internal' in clone &&\r\n      (clone.internal === false || clone.internal === undefined)\r\n    ) {\r\n      delete clone.internal;\r\n    }\r\n\r\n    // Recursively clean nested \"name\" fields\r\n    function deepCleanNames(obj: any): void {\r\n      if (Array.isArray(obj)) {\r\n        obj.forEach(deepCleanNames);\r\n      } else if (typeof obj === 'object' && obj !== null) {\r\n        delete obj.name;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-unsafe-argument\r\n      Object.entries(obj).forEach(([_unusedKey, val]) => deepCleanNames(val));\r\n      }\r\n    }\r\n\r\n    // Apply deep clean to attributes\r\n    if (typeof clone.attributes === 'object' && clone.attributes !== null) {\r\n      deepCleanNames(clone.attributes);\r\n    }\r\n\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Get time since last auto-save\r\n   */\r\n  getTimeSinceLastSave(\r\n    transformId: string,\r\n    isNew: boolean = false\r\n  ): string | null {\r\n    const localSave = this.getLocalSave(transformId, isNew);\r\n    if (!localSave) {\r\n      return null;\r\n    }\r\n\r\n    const timeDiff = Date.now() - localSave.lastModified;\r\n    const minutes = Math.floor(timeDiff / 60000);\r\n    const seconds = Math.floor((timeDiff % 60000) / 1000);\r\n\r\n    if (minutes > 0) {\r\n      return `${minutes}m ago`;\r\n    } else {\r\n      return `${seconds}s ago`;\r\n    }\r\n  }\r\n\r\n  private getStorageKey(transformId: string, isNew: boolean): string {\r\n    if (isNew) {\r\n      return `${this.STORAGE_KEY}_new_${Date.now()}`;\r\n    }\r\n    return `${this.STORAGE_KEY}_${transformId}`;\r\n  }\r\n\r\n  private markAsUnsaved(transformId: string): void {\r\n    const current = this.unsavedChangesSubject.value;\r\n    const updated = new Set(current);\r\n    updated.add(transformId);\r\n    this.unsavedChangesSubject.next(updated);\r\n    this.saveUnsavedChanges(updated);\r\n  }\r\n\r\n  private markAsSaved(transformId: string): void {\r\n    const current = this.unsavedChangesSubject.value;\r\n    const updated = new Set(current);\r\n    updated.delete(transformId);\r\n    this.unsavedChangesSubject.next(updated);\r\n    this.saveUnsavedChanges(updated);\r\n  }\r\n\r\n  private saveUnsavedChanges(changes: Set<string>): void {\r\n    localStorage.setItem(\r\n      this.UNSAVED_CHANGES_KEY,\r\n      JSON.stringify(Array.from(changes))\r\n    );\r\n  }\r\n\r\n  private loadUnsavedChanges(): void {\r\n    const saved = localStorage.getItem(this.UNSAVED_CHANGES_KEY);\r\n    if (saved) {\r\n      try {\r\n        const changes = JSON.parse(saved) as string[];\r\n        this.unsavedChangesSubject.next(new Set(changes));\r\n      } catch (error) {\r\n        console.error('Failed to load unsaved changes:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all local saves (useful for cleanup)\r\n   */\r\n  clearAllLocalSaves(): void {\r\n    const keysToRemove: string[] = [];\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key?.startsWith(this.STORAGE_KEY)) {\r\n        keysToRemove.push(key);\r\n      }\r\n    }\r\n\r\n    keysToRemove.forEach((key) => localStorage.removeItem(key));\r\n    localStorage.removeItem(this.UNSAVED_CHANGES_KEY);\r\n\r\n    this.unsavedChangesSubject.next(new Set());\r\n\r\n    console.log('Cleared all local saves');\r\n  }\r\n}\r\n","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'The base64 decode transform allows you to take incoming data that has been encoded using a Base64-based text encoding scheme and render the data in its original binary format.';\r\n\r\nexport function createBase64Decode(): Base64DecodeStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Base64 Decode',\r\n    type: 'base64Decode',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface Base64DecodeStep extends BranchedStep {\r\n  type: 'base64Decode';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeBase64Decode(step: Base64DecodeStep) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeBase64Decode(data: any): Base64DecodeStep {\r\n  const step: Base64DecodeStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Base64 Decode',\r\n    type: 'base64Decode',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isBase64DecodeStep(step: Step): step is Base64DecodeStep {\r\n  return step.type === 'base64Decode';\r\n}\r\n\r\n\r\nexport function getBase64DecodeIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path fill=\"grey\" d=\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"/></svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }\r\n\r\n","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'The base64 encode transform allows you to take incoming data and encode it using a Base64-based text encoding scheme. The output of the transform is a string comprising 64 basic ASCII characters.';\r\n\r\nexport function createBase64Encode(): Base64EncodeStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Base64 Encode',\r\n    type: 'base64Encode',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface Base64EncodeStep extends BranchedStep {\r\n  type: 'base64Encode';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeBase64Encode(step: Base64EncodeStep) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeBase64Encode(data: any): Base64EncodeStep {\r\n  const step: Base64EncodeStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Base64 Encode',\r\n    type: 'base64Encode',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isBase64EncodeStep(step: Step): step is Base64EncodeStep {\r\n  return step.type === 'base64Encode';\r\n}\r\n\r\n\r\nexport function getBase64EncodeIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path fill=\"grey\" d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/></svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }\r\n\r\n","import {\r\n  BranchedStep,\r\n  Sequence,\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel,\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the conditional transform to output different values depending on simple conditional logic. This is a convenient transform - the same capability can be implemented with a \"static\" transform, but this transform has greater simplicity and null-safe error checking.'\r\n\r\nexport function createConditional(): ConditionalStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Conditional',\r\n    type: 'conditional',\r\n    description: description,\r\n    properties: {\r\n      expression: '',\r\n    },\r\n    branches: {\r\n      positiveCondition: [],\r\n      negativeCondition: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface ConditionalStep extends BranchedStep {\r\n  type: 'conditional';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    expression: string;\r\n  };\r\n}\r\n\r\nexport const ConditionalModel = createStepModel<ConditionalStep>(\r\n  'conditional',\r\n  'switch',\r\n  (step) => {\r\n    step\r\n      .property('expression')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n          multiline: true,\r\n          pattern: new RegExp('^.+\\\\s+eq\\\\s.+$'),\r\n        })\r\n      )\r\n      .hint(\r\n        'Conditional expression, e.g. $department eq Science, eq is the only supported operator'\r\n      )\r\n      .label('Expression');\r\n  }\r\n);\r\n\r\nexport function serializeConditional(step: ConditionalStep): {\r\n  name: string;\r\n  type: string;\r\n  attributes: {\r\n    expression: string;\r\n    [key: string]: any;\r\n  };\r\n} {\r\n  const attributes: { expression: string; [key: string]: any } =\r\n    {\r\n      expression: step.properties.expression,\r\n    };\r\n\r\n  for (const [branchName, sequence] of Object.entries(step.branches)) {\r\n    if (sequence.length === 1) {\r\n      attributes[branchName] = serializeStep(sequence[0]);\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: step.name, \r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\n\r\nexport function deserializeConditional(data: any): ConditionalStep {\r\n    const branches: { [key: string]: Sequence } = {};\r\n    \r\n    const attributes = data.attributes as Record<string, unknown>\r\n    Object.keys(attributes).forEach((key) => {\r\n      if (key !== 'expression') {\r\n        branches[key] = [deserializeToStep(attributes[key])];\r\n      }\r\n    });\r\n\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    type: 'conditional',\r\n    name: data.name ?? 'Conditional',\r\n    description: description,\r\n    properties: { expression: data.attributes.expression},\r\n    branches: branches,\r\n  };\r\n}\r\n\r\nexport function isConditionalStep(step: Step): step is ConditionalStep {\r\n  return step.type === 'conditional';\r\n}\r\n\r\nexport function getConditionalIcon(): string {\r\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill=\"gray\"><g><rect fill=\"none\" height=\"24\" width=\"24\" x=\"0\"/></g><g><g><g><path d=\"M9.01,14H2v2h7.01v3L13,15l-3.99-4V14z M14.99,13v-3H22V8h-7.01V5L11,9L14.99,13z\"/></g></g></g></svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n}","import {\r\n  BranchedStep,\r\n  Sequence,\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport {\r\n  createChoiceValueModel,\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the date compare transform to compare two dates and, depending on the comparison result, return one value if one date is after the other or return a different value if it is before the other.';\r\n  \r\n  export function createDateCompare(): DateCompareStep {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Date Compare',\r\n      type: 'dateCompare',\r\n      description: description,\r\n      properties: {\r\n        operator: '',\r\n      },\r\n      branches: {\r\n        positiveCondition: [],\r\n        negativeCondition: [],\r\n        firstDate: [],\r\n        secondDate: [],\r\n      },\r\n    };\r\n  }\r\n  \r\n  export interface DateCompareStep extends BranchedStep {\r\n    type: 'dateCompare';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n      operator: string;\r\n    };\r\n  }\r\n  \r\n  export const DateCompareModel = createStepModel<DateCompareStep>(\r\n    'dateCompare',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('operator')\r\n        .value(\r\n            createChoiceValueModel({\r\n                choices: [\r\n                  'GT',\r\n                  'GTE',\r\n                  'LT',\r\n                  'LTE',\r\n                ],\r\n              })\r\n        )\r\n        .hint(\r\n          'Comparison operator, e.g. gt, gte, lt, lte'\r\n        )\r\n        .label('Operator');\r\n    }\r\n  );\r\n  \r\n  export function serializeDateCompare(step: DateCompareStep): {\r\n    name: string;\r\n    type: string;\r\n    attributes: {\r\n      operator: string;\r\n      [key: string]: any;\r\n    };\r\n  } {\r\n    const attributes: { operator: string; [key: string]: any } =\r\n      {\r\n        operator: step.properties.operator,\r\n      };\r\n  \r\n    for (const [branchName, sequence] of Object.entries(step.branches)) {\r\n      if (sequence.length === 1) {\r\n        attributes[branchName] = serializeStep(sequence[0]);\r\n      }\r\n    }\r\n  \r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes,\r\n    };\r\n  }\r\n  \r\n  \r\n  export function deserializeDateCompare(data: any): DateCompareStep {\r\n      const branches: { [key: string]: Sequence } = {};\r\n      \r\n      const attributes = data.attributes as Record<string, unknown>;\r\n      Object.keys(attributes).forEach((key) => {\r\n        if (key !== 'operator') {\r\n          branches[key] = [deserializeToStep(attributes[key])];\r\n        }\r\n      });\r\n  \r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      type: 'dateCompare',\r\n      name: data.name ?? `Date Compare`,\r\n      description: description,\r\n      properties: { operator: data.attributes.operator},\r\n      branches: branches,\r\n    };\r\n  }\r\n  \r\n  export function isDateCompareStep(step: Step): step is DateCompareStep {\r\n    return step.type === 'dateCompare';\r\n  }\r\n\r\n  export const operatorMap: Record<string, string> = {\r\n    \"LT\": \"Less Than\",\r\n    \"LTE\": \"Less Than or Equal To\",\r\n    \"GT\": \"Greater Than\",\r\n    \"GTE\": \"Greater Than or Equal To\",\r\n  }\r\n\r\n  export function getDateCompareIcon(): string {\r\n      const svg = `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n      <path fill=\"gray\" d=\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"/>\r\n      </svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createChoiceValueModel,\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the date format transform to convert datetime strings from one format to another. This is often useful when you are syncing data from one system to another, where each application uses a different format for date and time data.'\r\n\r\nexport function createDateFormat(): DateFormatStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Date Format',\r\n    type: 'dateFormat',\r\n    description: description,\r\n    properties: {\r\n      inputFormat: 'ISO8601',\r\n      outputFormat: 'MM/dd/yyyy',\r\n      customInputFormat: '', // Add this for custom input format\r\n      customOutputFormat: '', // Add this for custom output format\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface DateFormatStep extends BranchedStep {\r\n  type: 'dateFormat';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    inputFormat: string;\r\n    outputFormat: string;\r\n    customInputFormat?: string; // Optional custom input format\r\n    customOutputFormat?: string; // Optional custom output format\r\n  };\r\n}\r\n\r\nexport const DateFormatModel = createStepModel<DateFormatStep>(\r\n    'dateFormat',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('inputFormat')\r\n        .value(\r\n          createChoiceValueModel({\r\n            choices: [\r\n              'ISO8601',\r\n              'LDAP',\r\n              'PEOPLE_SOFT',\r\n              'EPOCH_TIME_JAVA',\r\n              'EPOCH_TIME_WIN32',\r\n              'CUSTOM'\r\n            ],\r\n            defaultValue: 'ISO8601',\r\n          })\r\n        )\r\n        .hint(\r\n          'This string value indicates either the explicit SimpleDateFormat or the built-in named format of the incoming data.'\r\n        )\r\n        .label('Input Format');\r\n    \r\n    step\r\n        .property('outputFormat')\r\n        .value(\r\n            createChoiceValueModel({\r\n            choices: [\r\n              'ISO8601',\r\n              'LDAP',\r\n              'PEOPLE_SOFT',\r\n              'EPOCH_TIME_JAVA',\r\n              'EPOCH_TIME_WIN32',\r\n              'CUSTOM'\r\n            ],\r\n            defaultValue: 'ISO8601',\r\n          })\r\n        )\r\n        .hint(\r\n          'This string value indicates either the explicit SimpleDateFormat or the built-in named format that the data is formatted into.'\r\n        )\r\n        .label('Output Format');\r\n\r\n    // Add custom format properties\r\n    step\r\n        .property('customInputFormat')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 0,\r\n              })\r\n        )\r\n        .hint(\r\n          'Custom SimpleDateFormat pattern for input (e.g., yyyy-MM-dd HH:mm:ss)'\r\n        )\r\n        .label('Custom Input Format');\r\n\r\n    step\r\n        .property('customOutputFormat')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 0,\r\n              })\r\n        )\r\n        .hint(\r\n          'Custom SimpleDateFormat pattern for output (e.g., dd/MM/yyyy)'\r\n        )\r\n        .label('Custom Output Format');\r\n    }\r\n  );\r\n\r\nexport function serializeDateFormat(step: DateFormatStep) {\r\n  const attributes: Record<string, any> = {\r\n    // Use custom format if CUSTOM is selected, otherwise use the selected format\r\n    inputFormat: step.properties.inputFormat === 'CUSTOM' \r\n      ? step.properties.customInputFormat \r\n      : step.properties.inputFormat,\r\n    outputFormat: step.properties.outputFormat === 'CUSTOM' \r\n      ? step.properties.customOutputFormat \r\n      : step.properties.outputFormat,\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeDateFormat(data: any): DateFormatStep {  \r\n  const step: DateFormatStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Date Format',\r\n    type: 'dateFormat',\r\n    description: description,\r\n    properties: {\r\n      inputFormat: 'ISO8601',\r\n      outputFormat: 'MM/dd/yyyy',\r\n      customInputFormat: '',\r\n      customOutputFormat: '',\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  // Determine if the incoming format is a known format or custom\r\n  const knownFormats = ['ISO8601', 'LDAP', 'PEOPLE_SOFT', 'EPOCH_TIME_JAVA', 'EPOCH_TIME_WIN32'];\r\n  \r\n  if (data.attributes.inputFormat) {\r\n    if (data.attributes.inputFormat && knownFormats.includes(data.attributes.inputFormat as string)) {\r\n      step.properties.inputFormat = data.attributes.inputFormat as string;\r\n    } else {\r\n      step.properties.inputFormat = 'CUSTOM';\r\n      step.properties.customInputFormat = data.attributes.inputFormat ? String(data.attributes.inputFormat) : '';\r\n    }\r\n  }\r\n\r\n  if (data.attributes.outputFormat) {\r\n    if (data.attributes.outputFormat && knownFormats.includes(data.attributes.outputFormat as string)) {\r\n      step.properties.outputFormat = data.attributes.outputFormat as string;\r\n    } else {\r\n      step.properties.outputFormat = 'CUSTOM';\r\n      step.properties.customOutputFormat = data.attributes.outputFormat ? String(data.attributes.outputFormat) : '';\r\n    }\r\n  }\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nexport function isDateFormatStep(step: Step): step is DateFormatStep {\r\n  return step.type === 'dateFormat';\r\n}\r\n\r\nexport function getDateFormatIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n  <path fill=\"gray\" d=\"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"/>\r\n  </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}\r\n\r\nexport const DateFormatMap: Record<string, string> = {\r\n  \"ISO8601\": \"ISO8601\",\r\n  \"LDAP\": \"LDAP\",\r\n  \"PEOPLE_SOFT\": \"PeopleSoft\", \r\n  \"EPOCH_TIME_JAVA\": \"Epoch Time (Java)\",\r\n  \"EPOCH_TIME_WIN32\": \"Epoch Time (Win32)\",\r\n  \"CUSTOM\": \"Custom SimpleDateFormat\",\r\n}\r\n\r\n// Helper function to validate SimpleDateFormat patterns\r\nexport function validateDateFormatPattern(pattern: string): { isValid: boolean; error?: string } {\r\n  if (!pattern || pattern.trim() === '') {\r\n    return { isValid: false, error: 'Pattern cannot be empty' };\r\n  }\r\n\r\n  // Basic validation for common SimpleDateFormat patterns\r\n  const validPatterns = /^[yMdHhmsaEGwWDFkKzZSX\\s\\-/.,:'\"]*$/;\r\n  if (!validPatterns.test(pattern)) {\r\n    return { isValid: false, error: 'Invalid characters in date pattern' };\r\n  }\r\n\r\n  return { isValid: true };\r\n}\r\n\r\n// Helper function to get example output for a given pattern\r\nexport function getDateFormatExample(pattern: string): string {\r\n  const examples: Record<string, string> = {\r\n    'yyyy-MM-dd': '2024-03-15',\r\n    'MM/dd/yyyy': '03/15/2024',\r\n    'dd/MM/yyyy': '15/03/2024',\r\n    'yyyy-MM-dd HH:mm:ss': '2024-03-15 14:30:45',\r\n    'MMM dd, yyyy': 'Mar 15, 2024',\r\n    'EEEE, MMMM dd, yyyy': 'Friday, March 15, 2024',\r\n    'HH:mm:ss': '14:30:45',\r\n    'yyyy-DDD': '2024-075',\r\n  };\r\n\r\n  return examples[pattern] || 'Example: 2024-03-15';\r\n}","import { Uid } from \"sequential-workflow-designer\";\r\nimport { createBooleanValueModel, createChoiceValueModel, createStepModel, createStringValueModel } from \"sequential-workflow-editor-model\";\r\nimport { BranchedStep, Step } from \"sequential-workflow-model\";\r\nimport { deserializeToStep, serializeStep } from \"../transform-builder.component\";\r\n\r\nexport interface DateMathOperation {\r\n  operation: '+' | '-' | '/';\r\n  value?: number;\r\n  unit: 'y' | 'M' | 'w' | 'd' | 'h' | 'm' | 's';\r\n}\r\n\r\nlet description = 'Use the date math transform to add, subtract, and round components of a timestamp\\'s incoming value. It also allows you to work with a referential value of \"now\" to run operations against the current date and time instead of a fixed value.'\r\n\r\nexport function createDateMath(): DateMathStep {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Date Math',\r\n      type: 'dateMath',\r\n      description: description,\r\n      properties: {\r\n        expression: '',\r\n        roundUp: false,\r\n        useBuilder: true, // Toggle between builder and manual input\r\n        baseDate: 'input', // 'input' or 'now'\r\n        operations: [], // Array of operations for the builder\r\n      },\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\nexport interface DateMathStep extends BranchedStep {\r\n    type: 'dateMath';\r\n    componentType: 'switch';\r\n    description: string;\r\n    properties: {\r\n      expression: string;\r\n      roundUp: boolean;\r\n      useBuilder?: boolean;\r\n      baseDate?: string;\r\n      operations?: DateMathOperation[];\r\n    };\r\n}\r\n\r\nexport const DateMathModel = createStepModel<DateMathStep>(\r\n    'dateMath',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('useBuilder')\r\n        .value(\r\n            createBooleanValueModel({\r\n                defaultValue: true,\r\n              })\r\n        )\r\n        .hint('Use the visual builder or enter expression manually')\r\n        .label('Use Visual Builder');\r\n\r\n      step\r\n        .property('baseDate')\r\n        .value(\r\n            createChoiceValueModel({\r\n                choices: ['input', 'now'],\r\n                defaultValue: 'input',\r\n              })\r\n        )\r\n        .hint('Start with input date or current date/time')\r\n        .label('Base Date');\r\n\r\n      step\r\n        .property('expression')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 1,\r\n              })\r\n        )\r\n        .hint(\r\n          'A string value of the date and time components to operate on, along with the math operations to execute. Multiple operations on multiple components are supported. See <a href=\"https://developer.sailpoint.com/docs/extensibility/transforms/operations/date-math#transform-structure\" target=\"_blank\">Date Math Expression</a> for more details'\r\n        )\r\n        .label('Expression');\r\n\r\n      step\r\n        .property('roundUp')\r\n        .value(\r\n            createBooleanValueModel({\r\n                defaultValue: false,\r\n              })\r\n        )\r\n        .hint('This true or false value indicates whether the transform rounds up or down when the expression defines a rounding (\"/\") operation. If this value is not provided, the transform defaults to false.')\r\n        .label('Round Up');\r\n    }\r\n  );\r\n\r\nexport function serializeDateMath(step: DateMathStep) {\r\n    const attributes: Record<string, any> = {};\r\n\r\n    // If using builder, construct expression from operations\r\n    if (step.properties.useBuilder && step.properties.operations && step.properties.operations.length > 0) {\r\n      let expression = step.properties.baseDate === 'now' ? 'now' : '';\r\n      \r\n      for (const op of step.properties.operations) {\r\n        // For rounding operations, there's no value\r\n        if (op.operation === '/') {\r\n          expression += `${op.operation}${op.unit}`;\r\n        } else {\r\n          expression += `${op.operation}${op.value}${op.unit}`;\r\n        }\r\n      }\r\n      \r\n      attributes.expression = expression || (step.properties.baseDate === 'now' ? 'now' : '');\r\n    } else {\r\n      // Use manual expression\r\n      attributes.expression = step.properties.expression;\r\n    }\r\n\r\n    if (step.properties.roundUp === true) {\r\n        attributes.roundUp = step.properties.roundUp;\r\n    }\r\n     if (step.branches.input.length > 0) {\r\n        attributes.input = serializeStep(step.branches.input[0]);\r\n      }\r\n\r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes,\r\n    };\r\n  }\r\n\r\nexport function deserializeDateMath(data: any): DateMathStep {\r\n    console.log('Deserializing Date Math step:', data);\r\n    const step: DateMathStep = {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: data.name ?? 'Date Math',\r\n      type: 'dateMath',\r\n      description: description,\r\n      properties: {\r\n        expression: data.attributes.expression || '',\r\n        roundUp: data.attributes.roundUp ?? false,\r\n        useBuilder: true,\r\n        baseDate: 'input',\r\n        operations: [],\r\n      },\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n\r\n    // Try to parse expression into operations for builder\r\n    if (data.attributes.expression) {\r\n      const parsed = parseExpressionToOperations(data.attributes.expression as string);\r\n      step.properties.baseDate = parsed.baseDate;\r\n      step.properties.operations = parsed.operations;\r\n    }\r\n\r\n    if (data.attributes.input) {\r\n      step.branches.input.push(deserializeToStep(data.attributes.input));\r\n    }\r\n\r\n    return step;\r\n  }\r\n\r\nexport function parseExpressionToOperations(expression: string): { baseDate: 'input' | 'now', operations: DateMathOperation[] } {\r\n  if (!expression) {\r\n    return { baseDate: 'input', operations: [] };\r\n  }\r\n\r\n  const baseDate = expression.startsWith('now') ? 'now' : 'input';\r\n  const operations: DateMathOperation[] = [];\r\n  \r\n  // Remove 'now' from beginning if present\r\n  let remaining = expression.startsWith('now') ? expression.substring(3) : expression;\r\n  \r\n  // Parse operations using regex - make the value group optional for rounding operations\r\n  const operationRegex = /([+\\-/])(\\d*)([yMwdhms])/g;\r\n  let match;\r\n  while ((match = operationRegex.exec(remaining)) !== null) {\r\n    const [, operation, value, unit] = match;\r\n    console.log(`Found operation: ${operation}, value: ${value}, unit: ${unit}`);\r\n    \r\n    // For rounding operations (/), there's no value\r\n    if (operation === '/') {\r\n      operations.push({\r\n        operation: operation as '+' | '-' | '/',\r\n        unit: unit as 'y' | 'M' | 'w' | 'd' | 'h' | 'm' | 's'\r\n      });\r\n    } else {\r\n      // For add/subtract operations, parse the value\r\n      operations.push({\r\n        operation: operation as '+' | '-' | '/',\r\n        value: parseInt(value as string, 10),\r\n        unit: unit as 'y' | 'M' | 'w' | 'd' | 'h' | 'm' | 's'\r\n      });\r\n    }\r\n  }\r\n  \r\n  return { baseDate, operations };\r\n}\r\n\r\nexport function buildExpressionFromOperations(baseDate: 'input' | 'now', operations: DateMathOperation[]): string {\r\n  let expression = baseDate === 'now' ? 'now' : '';\r\n  \r\n  for (const op of operations) {\r\n    expression += `${op.operation}${op.value}${op.unit}`;\r\n  }\r\n  \r\n  return expression || (baseDate === 'now' ? 'now' : '');\r\n}\r\n\r\nexport function isDateMathStep(step: Step): step is DateMathStep {\r\n    return step.type === 'dateMath';\r\n}\r\n\r\nexport function getDateMathIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M16.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17.13-.39.19-.79.19-1.18 0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71-.51-.16-1.08-.24-1.72-.24-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H22v-1.71h-5.95zM8 7H6v4H2v2h4v4h2v-4h4v-2H8V7z\"/>\r\n    </svg>`\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n}\r\n\r\n// Helper functions for the UI\r\nexport const DateMathUnits = {\r\n  'y': 'Years',\r\n  'M': 'Months', \r\n  'w': 'Weeks',\r\n  'd': 'Days',\r\n  'h': 'Hours',\r\n  'm': 'Minutes',\r\n  's': 'Seconds'\r\n};\r\n\r\nexport const DateMathOperations = {\r\n  '+': 'Add',\r\n  '-': 'Subtract',\r\n  '/': 'Round to'\r\n};\r\n\r\nexport function getDateMathExamples(): { expression: string; description: string }[] {\r\n  return [\r\n    { expression: 'now', description: 'Current date and time' },\r\n    { expression: 'now/h', description: 'Current time rounded to the hour' },\r\n    { expression: 'now+1w', description: 'One week from now' },\r\n    { expression: 'now+1y+1M+2d-4h+1m-3s/s', description: 'Complex calculation rounded to seconds' },\r\n    { expression: '+3M', description: 'Add 3 months to input date' },\r\n    { expression: '-1d', description: 'Subtract 1 day from input date' },\r\n    { expression: '/d', description: 'Round input date to start of day' }\r\n  ];\r\n}","import { Uid } from \"sequential-workflow-designer\";\r\nimport { BranchedStep, Properties, Step } from \"sequential-workflow-model\";\r\nimport { deserializeToStep, serializeStep } from \"../transform-builder.component\";\r\n\r\nlet description = 'Use the decompose diacritical marks transform to clean or standardize symbols used within language to inform the reader how to say or pronounce a letter. These symbols are often incompatible with downstream applications and must be standardized to another character set such as ASCII.'\r\n\r\nexport function createDecomposeDiacriticalMarks(): DecomposeDiacriticalMarksStep {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Decompose Diacritical Marks',\r\n      type: 'decomposeDiacriticalMarks',\r\n      description: description,\r\n      properties: {},\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\nexport interface DecomposeDiacriticalMarksStep extends BranchedStep {\r\n    type: 'decomposeDiacriticalMarks';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: Properties;\r\n}\r\n\r\n\r\n\r\n  export function serializeDecomposeDiacriticalMarks(step: DecomposeDiacriticalMarksStep) {\r\n    const attributes: Record<string, any> = {};\r\n\r\n     if (step.branches.input.length > 0) {\r\n        attributes.input = serializeStep(step.branches.input[0]);\r\n      }\r\n  \r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes,\r\n    };\r\n  }\r\n\r\n  export function deserializeDecomposeDiacriticalMarks(data: any): DecomposeDiacriticalMarksStep {\r\n    const step: DecomposeDiacriticalMarksStep = {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: data.name ?? 'Decompose Diacritical Marks',\r\n      type: 'decomposeDiacriticalMarks',\r\n      description: description,\r\n      properties: {},\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  \r\n    if (data.attributes.input) {\r\n      step.branches.input.push(deserializeToStep(data.attributes.input));\r\n    }\r\n  \r\n    return step;\r\n\r\n  }\r\n\r\n  export function isDecomposeDiacriticalMarksStep(step: Step): step is DecomposeDiacriticalMarksStep {\r\n    return step.type === 'decomposeDiacriticalMarks';\r\n  }","import { Uid } from \"sequential-workflow-designer\";\r\nimport { createChoiceValueModel, createStepModel } from \"sequential-workflow-editor-model\";\r\nimport { BranchedStep, Step } from \"sequential-workflow-model\";\r\nimport { deserializeToStep, serializeStep } from \"../transform-builder.component\";\r\n\r\nlet description = 'Use the E.164 phone transform to convert an incoming phone number string into an E.164-compatible number.'\r\n\r\nexport function createE164Phone(): E164PhoneStep {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'E.164 Phone',\r\n      type: 'e164phone',\r\n      description: description,\r\n      properties: {\r\n        defaultRegion: 'US',\r\n      },\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\nexport interface E164PhoneStep extends BranchedStep {\r\n    type: 'e164phone';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n        defaultRegion: string;\r\n    };\r\n}\r\n\r\nexport const E164PhoneModel = createStepModel<E164PhoneStep>(\r\n    'e164phone',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('defaultRegion')\r\n        .value(\r\n            createChoiceValueModel({\r\n                choices: [\r\n                    \"AF\", \"AX\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"AQ\", \"AG\",\r\n                    \"AR\", \"AM\", \"AW\", \"AU\", \"AT\", \"AZ\", \"BS\", \"BH\", \"BD\", \"BB\",\r\n                    \"BY\", \"BE\", \"BZ\", \"BJ\", \"BM\", \"BT\", \"BO\", \"BQ\", \"BA\", \"BW\",\r\n                    \"BV\", \"BR\", \"IO\", \"BN\", \"BG\", \"BF\", \"BI\", \"CV\", \"KH\", \"CM\",\r\n                    \"CA\", \"KY\", \"CF\", \"TD\", \"CL\", \"CN\", \"CX\", \"CC\", \"CO\", \"KM\",\r\n                    \"CG\", \"CD\", \"CK\", \"CR\", \"HR\", \"CU\", \"CW\", \"CY\", \"CZ\", \"DK\",\r\n                    \"DJ\", \"DM\", \"DO\", \"EC\", \"EG\", \"SV\", \"GQ\", \"ER\", \"EE\", \"SZ\",\r\n                    \"ET\", \"FK\", \"FO\", \"FJ\", \"FI\", \"FR\", \"GF\", \"PF\", \"TF\", \"GA\",\r\n                    \"GM\", \"GE\", \"DE\", \"GH\", \"GI\", \"GR\", \"GL\", \"GD\", \"GP\", \"GU\",\r\n                    \"GT\", \"GG\", \"GN\", \"GW\", \"GY\", \"HT\", \"HM\", \"VA\", \"HN\", \"HK\",\r\n                    \"HU\", \"IS\", \"IN\", \"ID\", \"IR\", \"IQ\", \"IE\", \"IM\", \"IL\", \"IT\",\r\n                    \"JM\", \"JP\", \"JE\", \"JO\", \"KZ\", \"KE\", \"KI\", \"KP\", \"KR\", \"KW\",\r\n                    \"KG\", \"LA\", \"LV\", \"LB\", \"LS\", \"LR\", \"LY\", \"LI\", \"LT\", \"LU\",\r\n                    \"MO\", \"MG\", \"MW\", \"MY\", \"MV\", \"ML\", \"MT\", \"MH\", \"MQ\", \"MR\",\r\n                    \"MU\", \"YT\", \"MX\", \"FM\", \"MD\", \"MC\", \"MN\", \"ME\", \"MS\", \"MA\",\r\n                    \"MZ\", \"MM\", \"NA\", \"NR\", \"NP\", \"NL\", \"NC\", \"NZ\", \"NI\", \"NE\",\r\n                    \"NG\", \"NU\", \"NF\", \"MK\", \"MP\", \"NO\", \"OM\", \"PK\", \"PW\", \"PS\",\r\n                    \"PA\", \"PG\", \"PY\", \"PE\", \"PH\", \"PN\", \"PL\", \"PT\", \"PR\", \"QA\",\r\n                    \"RE\", \"RO\", \"RU\", \"RW\", \"BL\", \"SH\", \"KN\", \"LC\", \"MF\", \"PM\",\r\n                    \"VC\", \"WS\", \"SM\", \"ST\", \"SA\", \"SN\", \"RS\", \"SC\", \"SL\", \"SG\",\r\n                    \"SX\", \"SK\", \"SI\", \"SB\", \"SO\", \"ZA\", \"GS\", \"SS\", \"ES\", \"LK\",\r\n                    \"SD\", \"SR\", \"SJ\", \"SE\", \"CH\", \"SY\", \"TW\", \"TJ\", \"TZ\", \"TH\",\r\n                    \"TL\", \"TG\", \"TK\", \"TO\", \"TT\", \"TN\", \"TR\", \"TM\", \"TV\", \"UG\",\r\n                    \"UA\", \"AE\", \"GB\", \"US\", \"UY\", \"UZ\", \"VU\", \"VE\", \"VN\", \"EH\",\r\n                    \"YE\", \"ZM\", \"ZW\"\r\n                  ],\r\n              })\r\n        )\r\n        .hint('This is an optional attribute used to define the phone number region to format into. If no defaultRegion is provided, the transform takes US as the default country. The format of the country code must be in ISO 3166-1 alpha-2 format.')\r\n        .label('Default Region');\r\n    }\r\n  );\r\n\r\n\r\n    export function serializeE164Phone(step: E164PhoneStep) {\r\n        // const match = step.properties.defaultRegion.match(/\\(([^)]+)\\)/);\r\n        // const code = match ? match[1] : null;\r\n      const attributes: Record<string, any> = {\r\n        defaultRegion: step.properties.defaultRegion,\r\n      };\r\n  \r\n       if (step.branches.input.length > 0) {\r\n          attributes.input = serializeStep(step.branches.input[0]);\r\n        }\r\n    \r\n      return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: attributes,\r\n      };\r\n    }\r\n  \r\nexport function deserializeE164Phone(data: any): E164PhoneStep {\r\n      const step: E164PhoneStep = {\r\n        id: Uid.next(),\r\n        componentType: 'switch',\r\n        name: data.name ?? 'E.164 Phone',\r\n        type: 'e164phone',\r\n        description: description,\r\n        properties: {\r\n            defaultRegion: data.attributes?.defaultRegion ?? 'US',\r\n        },\r\n        branches: {\r\n          input: [],\r\n        },\r\n      };\r\n    \r\n      if (data.attributes?.input) {\r\n        step.branches.input.push(deserializeToStep(data.attributes?.input));\r\n      }\r\n    \r\n      return step;\r\n  \r\n    }\r\n  \r\nexport function isE164PhoneStep(step: Step): step is E164PhoneStep {\r\n      return step.type === 'e164phone';\r\n    }\r\n\r\nexport const isoAlpha2Map: Record<string, string> = {\r\n        \"AF\": \"Afghanistan (AF)\",\r\n        \"AX\": \"Åland Islands (AX)\",\r\n        \"AL\": \"Albania (AL)\",\r\n        \"DZ\": \"Algeria (DZ)\",\r\n        \"AS\": \"American Samoa (AS)\",\r\n        \"AD\": \"Andorra (AD)\",\r\n        \"AO\": \"Angola (AO)\",\r\n        \"AI\": \"Anguilla (AI)\",\r\n        \"AQ\": \"Antarctica (AQ)\",\r\n        \"AG\": \"Antigua and Barbuda (AG)\",\r\n        \"AR\": \"Argentina (AR)\",\r\n        \"AM\": \"Armenia (AM)\",\r\n        \"AW\": \"Aruba (AW)\",\r\n        \"AU\": \"Australia (AU)\",\r\n        \"AT\": \"Austria (AT)\",\r\n        \"AZ\": \"Azerbaijan (AZ)\",\r\n        \"BS\": \"Bahamas (BS)\",\r\n        \"BH\": \"Bahrain (BH)\",\r\n        \"BD\": \"Bangladesh (BD)\",\r\n        \"BB\": \"Barbados (BB)\",\r\n        \"BY\": \"Belarus (BY)\",\r\n        \"BE\": \"Belgium (BE)\",\r\n        \"BZ\": \"Belize (BZ)\",\r\n        \"BJ\": \"Benin (BJ)\",\r\n        \"BM\": \"Bermuda (BM)\",\r\n        \"BT\": \"Bhutan (BT)\",\r\n        \"BO\": \"Bolivia (BO)\",\r\n        \"BQ\": \"Bonaire, Sint Eustatius and Saba (BQ)\",\r\n        \"BA\": \"Bosnia and Herzegovina (BA)\",\r\n        \"BW\": \"Botswana (BW)\",\r\n        \"BV\": \"Bouvet Island (BV)\",\r\n        \"BR\": \"Brazil (BR)\",\r\n        \"IO\": \"British Indian Ocean Territory (IO)\",\r\n        \"BN\": \"Brunei Darussalam (BN)\",\r\n        \"BG\": \"Bulgaria (BG)\",\r\n        \"BF\": \"Burkina Faso (BF)\",\r\n        \"BI\": \"Burundi (BI)\",\r\n        \"CV\": \"Cabo Verde (CV)\",\r\n        \"KH\": \"Cambodia (KH)\",\r\n        \"CM\": \"Cameroon (CM)\",\r\n        \"CA\": \"Canada (CA)\",\r\n        \"KY\": \"Cayman Islands (KY)\",\r\n        \"CF\": \"Central African Republic (CF)\",\r\n        \"TD\": \"Chad (TD)\",\r\n        \"CL\": \"Chile (CL)\",\r\n        \"CN\": \"China (CN)\",\r\n        \"CX\": \"Christmas Island (CX)\",\r\n        \"CC\": \"Cocos (Keeling) Islands (CC)\",\r\n        \"CO\": \"Colombia (CO)\",\r\n        \"KM\": \"Comoros (KM)\",\r\n        \"CG\": \"Congo (CG)\",\r\n        \"CD\": \"Congo, Democratic Republic of the (CD)\",\r\n        \"CK\": \"Cook Islands (CK)\",\r\n        \"CR\": \"Costa Rica (CR)\",\r\n        \"HR\": \"Croatia (HR)\",\r\n        \"CU\": \"Cuba (CU)\",\r\n        \"CW\": \"Curaçao (CW)\",\r\n        \"CY\": \"Cyprus (CY)\",\r\n        \"CZ\": \"Czechia (CZ)\",\r\n        \"DK\": \"Denmark (DK)\",\r\n        \"DJ\": \"Djibouti (DJ)\",\r\n        \"DM\": \"Dominica (DM)\",\r\n        \"DO\": \"Dominican Republic (DO)\",\r\n        \"EC\": \"Ecuador (EC)\",\r\n        \"EG\": \"Egypt (EG)\",\r\n        \"SV\": \"El Salvador (SV)\",\r\n        \"GQ\": \"Equatorial Guinea (GQ)\",\r\n        \"ER\": \"Eritrea (ER)\",\r\n        \"EE\": \"Estonia (EE)\",\r\n        \"SZ\": \"Eswatini (SZ)\",\r\n        \"ET\": \"Ethiopia (ET)\",\r\n        \"FK\": \"Falkland Islands (Malvinas) (FK)\",\r\n        \"FO\": \"Faroe Islands (FO)\",\r\n        \"FJ\": \"Fiji (FJ)\",\r\n        \"FI\": \"Finland (FI)\",\r\n        \"FR\": \"France (FR)\",\r\n        \"GF\": \"French Guiana (GF)\",\r\n        \"PF\": \"French Polynesia (PF)\",\r\n        \"TF\": \"French Southern Territories (TF)\",\r\n        \"GA\": \"Gabon (GA)\",\r\n        \"GM\": \"Gambia (GM)\",\r\n        \"GE\": \"Georgia (GE)\",\r\n        \"DE\": \"Germany (DE)\",\r\n        \"GH\": \"Ghana (GH)\",\r\n        \"GI\": \"Gibraltar (GI)\",\r\n        \"GR\": \"Greece (GR)\",\r\n        \"GL\": \"Greenland (GL)\",\r\n        \"GD\": \"Grenada (GD)\",\r\n        \"GP\": \"Guadeloupe (GP)\",\r\n        \"GU\": \"Guam (GU)\",\r\n        \"GT\": \"Guatemala (GT)\",\r\n        \"GG\": \"Guernsey (GG)\",\r\n        \"GN\": \"Guinea (GN)\",\r\n        \"GW\": \"Guinea-Bissau (GW)\",\r\n        \"GY\": \"Guyana (GY)\",\r\n        \"HT\": \"Haiti (HT)\",\r\n        \"HM\": \"Heard Island and McDonald Islands (HM)\",\r\n        \"VA\": \"Holy See (VA)\",\r\n        \"HN\": \"Honduras (HN)\",\r\n        \"HK\": \"Hong Kong (HK)\",\r\n        \"HU\": \"Hungary (HU)\",\r\n        \"IS\": \"Iceland (IS)\",\r\n        \"IN\": \"India (IN)\",\r\n        \"ID\": \"Indonesia (ID)\",\r\n        \"IR\": \"Iran (IR)\",\r\n        \"IQ\": \"Iraq (IQ)\",\r\n        \"IE\": \"Ireland (IE)\",\r\n        \"IM\": \"Isle of Man (IM)\",\r\n        \"IL\": \"Israel (IL)\",\r\n        \"IT\": \"Italy (IT)\",\r\n        \"JM\": \"Jamaica (JM)\",\r\n        \"JP\": \"Japan (JP)\",\r\n        \"JE\": \"Jersey (JE)\",\r\n        \"JO\": \"Jordan (JO)\",\r\n        \"KZ\": \"Kazakhstan (KZ)\",\r\n        \"KE\": \"Kenya (KE)\",\r\n        \"KI\": \"Kiribati (KI)\",\r\n        \"KP\": \"Korea (Democratic People's Republic of) (KP)\",\r\n        \"KR\": \"Korea (Republic of) (KR)\",\r\n        \"KW\": \"Kuwait (KW)\",\r\n        \"KG\": \"Kyrgyzstan (KG)\",\r\n        \"LA\": \"Lao People's Democratic Republic (LA)\",\r\n        \"LV\": \"Latvia (LV)\",\r\n        \"LB\": \"Lebanon (LB)\",\r\n        \"LS\": \"Lesotho (LS)\",\r\n        \"LR\": \"Liberia (LR)\",\r\n        \"LY\": \"Libya (LY)\",\r\n        \"LI\": \"Liechtenstein (LI)\",\r\n        \"LT\": \"Lithuania (LT)\",\r\n        \"LU\": \"Luxembourg (LU)\",\r\n        \"MO\": \"Macao (MO)\",\r\n        \"MG\": \"Madagascar (MG)\",\r\n        \"MW\": \"Malawi (MW)\",\r\n        \"MY\": \"Malaysia (MY)\",\r\n        \"MV\": \"Maldives (MV)\",\r\n        \"ML\": \"Mali (ML)\",\r\n        \"MT\": \"Malta (MT)\",\r\n        \"MH\": \"Marshall Islands (MH)\",\r\n        \"MQ\": \"Martinique (MQ)\",\r\n        \"MR\": \"Mauritania (MR)\",\r\n        \"MU\": \"Mauritius (MU)\",\r\n        \"YT\": \"Mayotte (YT)\",\r\n        \"MX\": \"Mexico (MX)\",\r\n        \"FM\": \"Micronesia (FM)\",\r\n        \"MD\": \"Moldova (MD)\",\r\n        \"MC\": \"Monaco (MC)\",\r\n        \"MN\": \"Mongolia (MN)\",\r\n        \"ME\": \"Montenegro (ME)\",\r\n        \"MS\": \"Montserrat (MS)\",\r\n        \"MA\": \"Morocco (MA)\",\r\n        \"MZ\": \"Mozambique (MZ)\",\r\n        \"MM\": \"Myanmar (MM)\",\r\n        \"NA\": \"Namibia (NA)\",\r\n        \"NR\": \"Nauru (NR)\",\r\n        \"NP\": \"Nepal (NP)\",\r\n        \"NL\": \"Netherlands (NL)\",\r\n        \"NC\": \"New Caledonia (NC)\",\r\n        \"NZ\": \"New Zealand (NZ)\",\r\n        \"NI\": \"Nicaragua (NI)\",\r\n        \"NE\": \"Niger (NE)\",\r\n        \"NG\": \"Nigeria (NG)\",\r\n        \"NU\": \"Niue (NU)\",\r\n        \"NF\": \"Norfolk Island (NF)\",\r\n        \"MK\": \"North Macedonia (MK)\",\r\n        \"MP\": \"Northern Mariana Islands (MP)\",\r\n        \"NO\": \"Norway (NO)\",\r\n        \"OM\": \"Oman (OM)\",\r\n        \"PK\": \"Pakistan (PK)\",\r\n        \"PW\": \"Palau (PW)\",\r\n        \"PS\": \"Palestine (PS)\",\r\n        \"PA\": \"Panama (PA)\",\r\n        \"PG\": \"Papua New Guinea (PG)\",\r\n        \"PY\": \"Paraguay (PY)\",\r\n        \"PE\": \"Peru (PE)\",\r\n        \"PH\": \"Philippines (PH)\",\r\n        \"PN\": \"Pitcairn (PN)\",\r\n        \"PL\": \"Poland (PL)\",\r\n        \"PT\": \"Portugal (PT)\",\r\n        \"PR\": \"Puerto Rico (PR)\",\r\n        \"QA\": \"Qatar (QA)\",\r\n        \"RE\": \"Réunion (RE)\",\r\n        \"RO\": \"Romania (RO)\",\r\n        \"RU\": \"Russian Federation (RU)\",\r\n        \"RW\": \"Rwanda (RW)\",\r\n        \"BL\": \"Saint Barthélemy (BL)\",\r\n        \"SH\": \"Saint Helena, Ascension and Tristan da Cunha (SH)\",\r\n        \"KN\": \"Saint Kitts and Nevis (KN)\",\r\n        \"LC\": \"Saint Lucia (LC)\",\r\n        \"MF\": \"Saint Martin (MF)\",\r\n        \"PM\": \"Saint Pierre and Miquelon (PM)\",\r\n        \"VC\": \"Saint Vincent and the Grenadines (VC)\",\r\n        \"WS\": \"Samoa (WS)\",\r\n        \"SM\": \"San Marino (SM)\",\r\n        \"ST\": \"Sao Tome and Principe (ST)\",\r\n        \"SA\": \"Saudi Arabia (SA)\",\r\n        \"SN\": \"Senegal (SN)\",\r\n        \"RS\": \"Serbia (RS)\",\r\n        \"SC\": \"Seychelles (SC)\",\r\n        \"SL\": \"Sierra Leone (SL)\",\r\n        \"SG\": \"Singapore (SG)\",\r\n        \"SX\": \"Sint Maarten (SX)\",\r\n        \"SK\": \"Slovakia (SK)\",\r\n        \"SI\": \"Slovenia (SI)\",\r\n        \"SB\": \"Solomon Islands (SB)\",\r\n        \"SO\": \"Somalia (SO)\",\r\n        \"ZA\": \"South Africa (ZA)\",\r\n        \"GS\": \"South Georgia and the South Sandwich Islands (GS)\",\r\n        \"SS\": \"South Sudan (SS)\",\r\n        \"ES\": \"Spain (ES)\",\r\n        \"LK\": \"Sri Lanka (LK)\",\r\n        \"SD\": \"Sudan (SD)\",\r\n        \"SR\": \"Suriname (SR)\",\r\n        \"SJ\": \"Svalbard and Jan Mayen (SJ)\",\r\n        \"SE\": \"Sweden (SE)\",\r\n        \"CH\": \"Switzerland (CH)\",\r\n        \"SY\": \"Syrian Arab Republic (SY)\",\r\n        \"TW\": \"Taiwan (TW)\",\r\n        \"TJ\": \"Tajikistan (TJ)\",\r\n        \"TZ\": \"Tanzania (TZ)\",\r\n        \"TH\": \"Thailand (TH)\",\r\n        \"TL\": \"Timor-Leste (TL)\",\r\n        \"TG\": \"Togo (TG)\",\r\n        \"TK\": \"Tokelau (TK)\",\r\n        \"TO\": \"Tonga (TO)\",\r\n        \"TT\": \"Trinidad and Tobago (TT)\",\r\n        \"TN\": \"Tunisia (TN)\",\r\n        \"TR\": \"Turkey (TR)\",\r\n        \"TM\": \"Turkmenistan (TM)\",\r\n        \"TV\": \"Tuvalu (TV)\",\r\n        \"UG\": \"Uganda (UG)\",\r\n        \"UA\": \"Ukraine (UA)\",\r\n        \"AE\": \"United Arab Emirates (AE)\",\r\n        \"GB\": \"United Kingdom (GB)\",\r\n        \"US\": \"United States (US)\",\r\n        \"UY\": \"Uruguay (UY)\",\r\n        \"UZ\": \"Uzbekistan (UZ)\",\r\n        \"VU\": \"Vanuatu (VU)\",\r\n        \"VE\": \"Venezuela (VE)\",\r\n        \"VN\": \"Viet Nam (VN)\",\r\n        \"EH\": \"Western Sahara (EH)\",\r\n        \"YE\": \"Yemen (YE)\",\r\n        \"ZM\": \"Zambia (ZM)\",\r\n        \"ZW\": \"Zimbabwe (ZW)\"\r\n      }\r\n      \r\n  \r\n      export function getE164PhoneIcon(): string {\r\n        const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path fill=\"gray\" d=\"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"/>\r\n        </svg>`\r\n        const encoded = encodeURIComponent(svg.trim());\r\n        return `data:image/svg+xml,${encoded}`;\r\n      }","import { StepEditorContext } from \"sequential-workflow-designer\";\r\nimport { BranchedStep, Step } from \"sequential-workflow-model\";\r\n\r\nexport function createButton(\r\n    text: string,\r\n    clickHandler: (this: HTMLButtonElement, ev: MouseEvent) => any\r\n  ): HTMLButtonElement {\r\n    const button = document.createElement('button');\r\n    button.innerText = text;\r\n    button.addEventListener('click', clickHandler, false);\r\n    return button;\r\n  }\r\n  \r\n  export function appendTitle(root: HTMLElement, title: string): void {\r\n    const h2 = document.createElement('h2');\r\n    h2.innerText = title;\r\n    root.appendChild(h2);\r\n  }\r\n  \r\n  export function appendPropertyTitle(root: HTMLElement, title: string): void {\r\n    const h3 = document.createElement('h3');\r\n    h3.innerText = title;\r\n    root.appendChild(h3);\r\n  }\r\n  \r\n  export function appendNameEditor(\r\n    root: HTMLElement,\r\n    step: Step,\r\n    editorContext: StepEditorContext\r\n  ): void {\r\n    const input = document.createElement('input');\r\n    input.type = 'text';\r\n    input.value = step.name;\r\n    input.addEventListener(\r\n      'input',\r\n      () => {\r\n        step.name = input.value;\r\n        editorContext.notifyNameChanged();\r\n      },\r\n      false\r\n    );\r\n  \r\n    appendPropertyTitle(root, 'Name');\r\n    root.appendChild(input);\r\n  }\r\n  \r\n  export function appendBranchEditor(\r\n    root: HTMLElement,\r\n    step: BranchedStep,\r\n    editorContext: StepEditorContext,\r\n    typeName: string\r\n  ): void {\r\n    const input = document.createElement('input');\r\n    input.id = 'branch-editor-input'; // Assign an id here\r\n    input.type = 'text';\r\n    appendPropertyTitle(root, typeName);\r\n    root.appendChild(input);\r\n  }\r\n  \r\n  export function appendConditionEditor(\r\n    root: HTMLElement,\r\n    value: string,\r\n    onChange: (value: string) => void\r\n  ): void {\r\n    const input = document.createElement('input');\r\n    input.type = 'text';\r\n    input.value = value;\r\n    input.addEventListener(\r\n      'input',\r\n      () => {\r\n        onChange(input.value);\r\n      },\r\n      false\r\n    );\r\n    root.appendChild(input);\r\n  }\r\n  ","import {\r\n  BranchedStep,\r\n  Sequence,\r\n  Step,\r\n  StepEditorContext,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport { createBooleanValueModel, createStepModel } from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\nimport { appendPropertyTitle } from '../utils/utils';\r\n\r\nlet description = 'Use the first valid transform to perform if/then/else operations on multiple different data points to return the first piece of data that is not null.'\r\n\r\nexport function createFirstValid(): FirstValidStep  {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'First Valid',\r\n      type: 'firstValid',\r\n      description: description,\r\n      properties: {\r\n        ignoreErrors: false\r\n      },\r\n      branches: {},\r\n    };\r\n  }\r\n\r\n  export interface FirstValidStep extends BranchedStep {\r\n    type: 'firstValid';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n        ignoreErrors: boolean;\r\n    };\r\n  }\r\n\r\nexport const FirstValidModel = createStepModel<FirstValidStep>('firstValid', 'switch', step => {\r\n    step\r\n    .property('ignoreErrors')\r\n    .value(\r\n      createBooleanValueModel({\r\n        defaultValue: false,\r\n      })\r\n    )\r\n    .hint('This true or false value indicates whether to proceed to the next option if an error (like an NPE) occurs. Default is false.')\r\n    .label('Ignore Errors');\r\n  });\r\n\r\n\r\n\r\nexport function serializeFirstValid(step: FirstValidStep): {\r\n    name: string;\r\n    type: string;\r\n    attributes: {\r\n      [key: string]: any;\r\n    };\r\n  } {\r\n\r\n    const attributes: { [key: string]: any } = {};\r\n\r\n    if (step.properties.ignoreErrors === true) {\r\n        attributes.ignoreErrors = step.properties.ignoreErrors;\r\n    }\r\n\r\n\r\n    for (const [branchName, sequence] of Object.entries(step.branches)) {\r\n        if (sequence.length === 1) {\r\n          attributes[branchName] = serializeStep(sequence[0]);\r\n        } else {\r\n          throw new Error(`Branch \"${branchName}\" must have exactly one step.`);\r\n        }\r\n      }\r\n\r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes\r\n    };\r\n  }\r\n\r\n  export function deserializeFirstValid(data: any): FirstValidStep {\r\n    const branches: { [key: string]: Sequence } = {};\r\n    \r\n    const attributes = data.attributes;\r\n\r\n    if (attributes.ignoreErrors !== undefined) {\r\n        attributes.ignoreErrors = attributes.ignoreErrors === 'true';\r\n    } else {\r\n        attributes.ignoreErrors = false;\r\n    }\r\n\r\n    data.attributes.values.forEach((element: any, index: number) => {\r\n        const key = element.name ?? `Variable${index}`;\r\n        console.log(`iterating over: ` + element)\r\n        branches[key] = [deserializeToStep(element)];\r\n      });\r\n    \r\n\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    type: 'firstValid',\r\n    name: data.attributes.label ?? 'First Valid',\r\n    description: description,\r\n    properties: { ignoreErrors: attributes.ignoreErrors },\r\n    branches: branches,\r\n  };\r\n}\r\n\r\nexport function appendValueEditor(\r\n    root: HTMLElement,\r\n    step: FirstValidStep,\r\n    editorContext: StepEditorContext\r\n  ): void {\r\n    const select = document.createElement('select');\r\n  \r\n    const trueOption = document.createElement('option');\r\n    trueOption.value = 'true';\r\n    trueOption.text = 'True';\r\n    select.appendChild(trueOption);\r\n  \r\n    const falseOption = document.createElement('option');\r\n    falseOption.value = 'false';\r\n    falseOption.text = 'False';\r\n    select.appendChild(falseOption);\r\n  \r\n    if (step.properties.ignoreErrors !== undefined) {\r\n      select.value = String(step.properties.ignoreErrors);\r\n    }\r\n  \r\n    select.addEventListener(\r\n      'input',\r\n      () => {\r\n        step.properties.ignoreErrors = select.value === 'true';\r\n        editorContext.notifyNameChanged();\r\n      },\r\n      false\r\n    );\r\n  \r\n    appendPropertyTitle(root, 'Value');\r\n    root.appendChild(select);\r\n  }\r\n  \r\n\r\n  import { ViewContainerRef } from '@angular/core';\r\nimport { MatSlideToggle } from '@angular/material/slide-toggle';\r\n  \r\n  export function appendToggleEditor(\r\n    root: HTMLElement,\r\n    step: FirstValidStep,\r\n    editorContext: StepEditorContext,\r\n    viewContainerRef: ViewContainerRef\r\n  ): void {\r\n    appendPropertyTitle(root, 'Ignore Errors?');\r\n  \r\n    const toggleRef = viewContainerRef.createComponent(MatSlideToggle);\r\n  \r\n    toggleRef.instance.checked = !!step.properties.ignoreErrors;\r\n    toggleRef.instance.color = 'primary';\r\n    toggleRef.instance.labelPosition = 'after';\r\n    toggleRef.instance.name = 'ignoreErrorsToggle';\r\n  \r\n    toggleRef.instance.change.subscribe((event: any) => {\r\n      step.properties.ignoreErrors = event.checked;\r\n      editorContext.notifyNameChanged();\r\n    });\r\n  \r\n    root.appendChild(toggleRef.location.nativeElement);\r\n  }\r\n  \r\n\r\n\r\n  export function isFirstValidStep(step: Step): step is FirstValidStep {\r\n    return step.type === 'firstValid';\r\n}\r\n\r\nexport function getFirstValidIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill=\"gray\">\r\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"/>\r\n  </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}","import {\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport { createBooleanValueModel, createNumberValueModel, createStepModel } from 'sequential-workflow-editor-model';\r\n\r\nlet description = 'This transform allows you to generate a random string up to 450 characters, using true/false flags to denote whether the string includes numbers and/or special characters.'\r\n\r\nexport function createGenerateRandomString(): GenerateRandomStringStep  {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'task',\r\n      name: 'Generate Random String',\r\n      type: 'generateRandomString',\r\n      description: description,\r\n      properties: {\r\n        includeNumbers: true,\r\n        includeSpecialChars: true,\r\n        length: 16,\r\n      }\r\n    };\r\n  }\r\n\r\n  export interface GenerateRandomStringStep extends Step {\r\n    type: 'generateRandomString';\r\n    componentType: 'task';\r\n    description?: string;\r\n    properties: {\r\n        includeNumbers: boolean;\r\n        includeSpecialChars: boolean;\r\n        length: number;\r\n    };\r\n  }\r\n\r\n  export const GenerateRandomStringModel = createStepModel<GenerateRandomStringStep>(\r\n    'generateRandomString',\r\n    'task',\r\n    (step) => {\r\n\r\n      step.property('length').value(createNumberValueModel({\r\n        min: 1,\r\n        max: 450\r\n      })).label('String Length')\r\n      .hint('The length of the random string to generate. Must be between 1 and 450 characters.');\r\n\r\n      step\r\n      .property('includeNumbers')\r\n      .value(\r\n        createBooleanValueModel({\r\n          defaultValue: true,\r\n        })\r\n      )\r\n      .hint(\"This configuration's value is a boolean (true/false). It controls whether to include numbers in the generated string.\")\r\n      .label('Include Numbers');\r\n\r\n      step\r\n      .property('includeSpecialChars')\r\n      .value(\r\n        createBooleanValueModel({\r\n          defaultValue: true,\r\n        })\r\n      )\r\n      .hint(\"This configuration's value is a boolean (true/false). It controls whether to include special characters in the generated string.\")\r\n      .label('Include Special Characters');\r\n    }\r\n  );\r\n\r\n  export function serializeGenerateRandomString(step: GenerateRandomStringStep) {\r\n\r\n    return {\r\n      name: step.name,\r\n      type: \"rule\",\r\n      attributes: {\r\n        name: \"Cloud Services Deployment Utility\",\r\n        operation: \"generateRandomString\",\r\n        includeNumbers: step.properties.includeNumbers,\r\n        includeSpecialChars: step.properties.includeSpecialChars,\r\n        length: step.properties.length,\r\n      }\r\n    };\r\n  }\r\n  \r\n  export function deserializeGenerateRandomString(data: any): GenerateRandomStringStep {  \r\n      return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        type: 'generateRandomString',\r\n        name: data.name ?? 'Generate Random String',\r\n        description: description,\r\n        properties: {\r\n          includeNumbers: data.attributes.includeNumbers,\r\n          includeSpecialChars: data.attributes.includeSpecialChars,\r\n          length: data.attributes.length,\r\n        }\r\n      };\r\n    }\r\n  \r\n  export function isGenerateRandomStringStep(\r\n    step: Step\r\n  ): step is GenerateRandomStringStep {\r\n    return step.type === 'generateRandomString';\r\n  }","import {\r\n  BranchedStep,\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport { createNumberValueModel, createStepModel } from 'sequential-workflow-editor-model';\r\nimport { serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'This transform allows you to get the rightmost N characters of a string.'\r\n\r\nexport function createGetEndOfString(): GetEndOfStringStep  {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Get End of String',\r\n      type: 'getEndOfString',\r\n      description: description,\r\n      properties: {\r\n        numChars: 4,\r\n      },\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  export interface GetEndOfStringStep extends BranchedStep {\r\n    type: 'getEndOfString';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n        numChars: number;\r\n    };\r\n  }\r\n\r\n  export const GetEndOfStringModel = createStepModel<GetEndOfStringStep>(\r\n    'getEndOfString',\r\n    'switch',\r\n    (step) => {\r\n      step.property('numChars')\r\n        .value(createNumberValueModel({\r\n          min: 1,\r\n          max: 1000\r\n        })  \r\n      ).label('Number of Characters')\r\n      .hint('This specifies how many of the rightmost characters within the incoming string the transform returns. If the value of numChars is greater than the string length, the transform returns null.');\r\n    }\r\n  );\r\n\r\n\r\n  export function serializeGetEndOfString(step: GetEndOfStringStep) {\r\n\r\n      const attributes: Record<string, any> = {\r\n        name: \"Cloud Services Deployment Utility\",\r\n        operation: \"getEndOfString\",\r\n        numChars: step.properties.numChars,\r\n      };\r\n    \r\n      if (step.branches.input.length > 0) {\r\n        attributes.input = serializeStep(step.branches.input[0]);\r\n      }\r\n    \r\n      return {\r\n        name: step.name,\r\n        type: \"rule\",\r\n        attributes: attributes,\r\n      };\r\n  }\r\n  \r\n  export function deserializeGetEndOfString(data: any): GetEndOfStringStep {  \r\n      return {\r\n        id: Uid.next(),\r\n        componentType: 'switch',\r\n        type: 'getEndOfString',\r\n        name: data.name ?? 'Get End of String',\r\n        description: description,\r\n        properties: {\r\n            numChars: data.attributes.numChars,\r\n        },\r\n        branches: {\r\n          input: [],\r\n        },\r\n      };\r\n    }\r\n  \r\n  export function isGetEndOfStringStep(\r\n    step: Step\r\n  ): step is GetEndOfStringStep {\r\n    return step.type === 'getEndOfString';\r\n  }","import {\r\n  Step,\r\n  Uid\r\n} from 'sequential-workflow-designer';\r\nimport { createStepModel, createStringValueModel } from 'sequential-workflow-editor-model';\r\n\r\nlet description = 'This transform allows you to get the identity attribute of another user from within a given identity\\'s calculation. For your convenience, the transform allows you to use \"manager\" as a referential lookup to the target identity.'\r\n\r\nexport function createGetReferenceIdentityAttribute(): GetReferenceIdentityAttributeStep  {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'task',\r\n      name: 'Get Reference Identity Attribute',\r\n      type: 'getReferenceIdentityAttribute',\r\n      description: description,\r\n      properties: {\r\n        uid: '',\r\n        attributeName: '',\r\n      }\r\n    };\r\n  }\r\n\r\n  export interface GetReferenceIdentityAttributeStep extends Step {\r\n    type: 'getReferenceIdentityAttribute';\r\n    componentType: 'task';\r\n    description?: string;\r\n    properties: {\r\n        uid: string;\r\n        attributeName: string;\r\n    };\r\n  }\r\n\r\n  export const GetReferenceIdentityAttributeModel = createStepModel<GetReferenceIdentityAttributeStep>(\r\n    'getReferenceIdentityAttribute',\r\n    'task',\r\n    (step) => {\r\n\r\n      step\r\n        .property('uid')\r\n        .value(\r\n          createStringValueModel({\r\n            minLength: 1,\r\n          })\r\n        )\r\n        .hint('This is the SailPoint User Name (uid) value of the identity whose attribute is desired. For your convenience, you can use the \"manager\" keyword to look up the user\\'s manager and then get that manager\\'s identity attribute.')\r\n        .label('SailPoint User Name (uid)');\r\n\r\n      step\r\n        .property('attributeName')\r\n        .value(\r\n          createStringValueModel({\r\n            minLength: 1,\r\n          })\r\n        )\r\n        .hint('This is the name of the identity attribute to retrieve from the target identity. For example, you might use this to get the \"department\" attribute of a user\\'s manager.')\r\n        .label('Attribute Name');\r\n    }\r\n  );\r\n  \r\n\r\n\r\n  export function serializeGetReferenceIdentityAttribute(step: GetReferenceIdentityAttributeStep) {\r\n    return {\r\n      name: step.name,\r\n      type: \"rule\",\r\n      attributes: {\r\n        name: \"Cloud Services Deployment Utility\",\r\n        operation: \"getReferenceIdentityAttribute\",\r\n        uid: step.properties.uid,\r\n        attributeName: step.properties.attributeName,\r\n      }\r\n    };\r\n  }\r\n  \r\n  export function deserializeGetReferenceIdentityAttribute(data: any): GetReferenceIdentityAttributeStep {  \r\n      return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        type: 'getReferenceIdentityAttribute',\r\n        name: data.name ?? 'Get Reference Identity Attribute',\r\n        description: description,\r\n        properties: {\r\n            uid: data.attributes.uid,\r\n            attributeName: data.attributes.attributeName,\r\n        }\r\n      };\r\n    }\r\n  \r\n  export function isGetReferenceIdentityAttributeStep(\r\n    step: Step\r\n  ): step is GetReferenceIdentityAttributeStep {\r\n    return step.type === 'getReferenceIdentityAttribute';\r\n  }","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\n\r\nlet description = 'Use the identity attribute transform to get the value of a user\\'s identity attribute. This transform is often useful within a source\\'s account create or disable profile.'\r\n\r\nexport function createIdentityAttribute(): IdentityAttributeStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Identity Attribute',\r\n    type: 'identityAttribute',\r\n    description: description,\r\n    properties: {\r\n        name: '',\r\n    },\r\n  };\r\n}\r\n\r\nexport interface IdentityAttributeStep extends Step {\r\n  type: 'identityAttribute';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport const IdentityAttributeModel = createStepModel<IdentityAttributeStep>(\r\n  'identityAttribute',\r\n  'task',\r\n  (step) => {\r\n    step\r\n      .property('name')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .hint('The system (camel-cased) name of the identity attribute to bring in.')\r\n      .label('Identity Attribute Name');\r\n  }\r\n);\r\n\r\nexport function serializeIdentityAttribute(step: IdentityAttributeStep) {\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: {\r\n        name: step.properties.name,\r\n    }\r\n  };\r\n}\r\n\r\nexport function deserializeIdentityAttribute(data: any): IdentityAttributeStep {  \r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'task',\r\n      type: 'identityAttribute',\r\n      name: data.name ?? 'Identity Attribute',\r\n      description: description,\r\n      properties: {\r\n        name: data.attributes.name,\r\n      }\r\n    };\r\n  }\r\n\r\nexport function isIdentityAttributeStep(\r\n  step: Step\r\n): step is IdentityAttributeStep {\r\n  return step.type === 'identityAttribute';\r\n}\r\n\r\nexport function getIdentityAttributeIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"grey\" d=\"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }\r\n\r\n","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the index of transform to get the location of a specific substring within an incoming value. This transform is often useful in conjunction with the substring transform for getting parts of strings that can be dynamic in length or composition. If the substring you are searching for does not occur within the data, the transform returns -1.'\r\n\r\nexport function createIndexOf(): IndexOfStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Index Of',\r\n    type: 'indexOf',\r\n    description: description,\r\n    properties: {\r\n        substring: '',\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface IndexOfStep extends BranchedStep {\r\n  type: 'indexOf';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    substring: string;\r\n  };\r\n}\r\n\r\nexport const IndexOfModel = createStepModel<IndexOfStep>(\r\n    'indexOf',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('substring')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 1,\r\n              })\r\n        )\r\n        .hint(\r\n          'This string value indicates the substring to find the index of.'\r\n        )\r\n        .label('Search Substring');\r\n    }\r\n  );\r\n\r\nexport function serializeIndexOf(step: IndexOfStep) {\r\n  const attributes: Record<string, any> = {\r\n    substring: step.properties.substring,\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeIndexOf(data: any): IndexOfStep {\r\n  const step: IndexOfStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Index Of',\r\n    type: 'indexOf',\r\n    description: description,\r\n    properties: {\r\n        substring: data.attributes.substring,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isIndexOfStep(step: Step): step is IndexOfStep {\r\n  return step.type === 'indexOf';\r\n}","import { Uid } from \"sequential-workflow-designer\";\r\nimport { createChoiceValueModel, createStepModel } from \"sequential-workflow-editor-model\";\r\nimport { BranchedStep, Step } from \"sequential-workflow-model\";\r\nimport { deserializeToStep, serializeStep } from \"../transform-builder.component\";\r\n\r\nlet description = 'Use the ISO3166 transform to convert an incoming string into an ISO 3166 country code value. The incoming data must be either a recognized country name or country code'\r\n\r\nexport function createISO3166(): ISO3166Step {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'ISO 3166',\r\n      type: 'iso3166',\r\n      description: description,\r\n      properties: {\r\n        format: 'alpha2',\r\n      },\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\nexport interface ISO3166Step extends BranchedStep {\r\n    type: 'iso3166';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: {\r\n        format: string;\r\n    };\r\n}\r\n\r\nexport const ISO3166Model = createStepModel<ISO3166Step>(\r\n    'iso3166',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('format')\r\n        .value(\r\n            createChoiceValueModel({\r\n                choices: [\r\n                    \"alpha2\",\r\n                    \"alpha3\",\r\n                    \"numeric\",\r\n                  ],\r\n              })\r\n        )\r\n        .hint(\r\n          'This string value indicates the format of the ISO 3166 code. Default is alpha2.'\r\n        )\r\n        .label('Format');\r\n    }\r\n  );\r\n\r\n\r\n    export function serializeISO3166(step: ISO3166Step) {\r\n        // const match = step.properties.defaultRegion.match(/\\(([^)]+)\\)/);\r\n        // const code = match ? match[1] : null;\r\n      const attributes: Record<string, any> = {\r\n        format: step.properties.format,\r\n      };\r\n  \r\n       if (step.branches.input.length > 0) {\r\n          attributes.input = serializeStep(step.branches.input[0]);\r\n        }\r\n    \r\n      return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: attributes,\r\n      };\r\n    }\r\n  \r\nexport function deserializeISO3166(data: any): ISO3166Step {\r\n      const step: ISO3166Step = {\r\n        id: Uid.next(),\r\n        componentType: 'switch',\r\n        name: data.name ?? 'ISO 3166',\r\n        type: 'iso3166',\r\n        description: description,\r\n        properties: {\r\n            format: data.attributes?.format ?? 'alpha2',\r\n        },\r\n        branches: {\r\n          input: [],\r\n        },\r\n      };\r\n    \r\n      if (data.attributes?.input) {\r\n        step.branches.input.push(deserializeToStep(data.attributes?.input));\r\n      }\r\n    \r\n      return step;\r\n  \r\n    }\r\n  \r\nexport function isISO3166Step(step: Step): step is ISO3166Step {\r\n      return step.type === 'iso3166';\r\n    }\r\n\r\nexport const iso3166Map: Record<string, string> = {\r\n        \"ALPHA2\": \"Two letter country code (US)\",\r\n        \"ALPHA3\": \"Three letter country code (USA)\",\r\n        \"NUMERIC\": \"Three digit country code (840)\",\r\n      }\r\n      \r\n  ","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the last index of transform to get the last location of a specific substring within an incoming value. This transform is often useful in conjunction with the substring transform for getting parts of strings that can be dynamic in length or composition. If the substring you are searching for does not occur within the data, the transform returns -1.'\r\n\r\nexport function createLastIndexOf(): LastIndexOfStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Last Index Of',\r\n    type: 'lastIndexOf',\r\n    description: description,\r\n    properties: {\r\n        substring: '',\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface LastIndexOfStep extends BranchedStep {\r\n  type: 'lastIndexOf';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    substring: string;\r\n  };\r\n}\r\n\r\nexport const LastIndexOfModel = createStepModel<LastIndexOfStep>(\r\n    'lastIndexOf',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('substring')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 1,\r\n              })\r\n        )\r\n        .hint(\r\n          'This string value indicates the substring to find the last index of.'\r\n        )\r\n        .label('Search Substring');\r\n    }\r\n  );\r\n\r\nexport function serializeLastIndexOf(step: LastIndexOfStep) {\r\n  const attributes: Record<string, any> = {\r\n    substring: step.properties.substring,\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeLastIndexOf(data: any): LastIndexOfStep {\r\n  const step: LastIndexOfStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Last Index Of',\r\n    type: 'lastIndexOf',\r\n    description: description,\r\n    properties: {\r\n        substring: data.attributes.substring,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isLastIndexOfStep(step: Step): step is LastIndexOfStep {\r\n  return step.type === 'lastIndexOf';\r\n}","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createNumberValueModel,\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the left pad transform to pad an incoming string with a user-supplied character out to a specific number of characters. This transform is often useful for data normalization situations in which data such as employee IDs are not uniform in length but need to be for downstream systems.'\r\n\r\nexport function createLeftPad(): LeftPadStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Left Pad',\r\n    type: 'leftPad',\r\n    description: description,\r\n    properties: {\r\n        padding: '',\r\n        length: 0\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface LeftPadStep extends BranchedStep {\r\n  type: 'leftPad';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    padding: string;\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const LeftPadModel = createStepModel<LeftPadStep>(\r\n    'leftPad',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('padding')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 1,\r\n              })\r\n        )\r\n        .hint(\r\n          'This string value represents the character the transform will pad the incoming data to to get to the desired length.'\r\n        )\r\n        .label('Padding Character');\r\n\r\n    step\r\n        .property('length')\r\n        .value(\r\n            createNumberValueModel({\r\n                min: 1,\r\n                max: 50000,\r\n              })\r\n        )\r\n        .hint(\r\n          \"This is an integer value for the final output string's desired length.\"\r\n        )\r\n        .label('Total Length');\r\n    }\r\n  );\r\n\r\nexport function serializeLeftPad(step: LeftPadStep) {\r\n  const attributes: Record<string, any> = {\r\n    padding: step.properties.padding,\r\n    length: step.properties.length\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeLeftPad(data: any): LeftPadStep {\r\n  const step: LeftPadStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Left Pad',\r\n    type: 'leftPad',\r\n    description: description,\r\n    properties: {\r\n        padding: data.attributes.padding,\r\n        length: data.attributes.length\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isLeftPadStep(step: Step): step is LeftPadStep {\r\n  return step.type === 'leftPad';\r\n}\r\n\r\nexport function getLeftPadIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/>\r\n    </svg>`\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n}","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the lookup transform to take in an incoming string value and compare it to a list of key-value pairs to determine which output to return. If the incoming data matches a key, the transform returns the corresponding value. If the incoming key does not match a key, the transform returns the table\\'s optional default value.'\r\n\r\nexport function createLookup(): LookupStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Lookup',\r\n    type: 'lookup',\r\n    description: description,\r\n    properties: {\r\n        table: new Map<string, string>([['default', 'defaultReturnValue']]),\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface LookupStep extends BranchedStep {\r\n  type: 'lookup';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    table: Map<string, string>;\r\n  };\r\n}\r\n\r\nexport function serializeLookup(step: LookupStep) {\r\n  const attributes: Record<string, any> = {\r\n    table: Object.fromEntries(step.properties.table)\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeLookup(data: any): LookupStep {\r\n\r\n  const rawTable = data.attributes.table;\r\n  const table = new Map<string, string>(\r\n  rawTable && typeof rawTable === 'object'\r\n    ? Object.entries(rawTable as { [key: string]: string })\r\n    : []\r\n  );\r\n\r\n  const step: LookupStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Lookup',\r\n    type: 'lookup',\r\n    description: description,\r\n    properties: {\r\n        table: table,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  console.log(step.properties.table)\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isLookupStep(step: Step): step is LookupStep {\r\n  return step.type === 'lookup';\r\n}\r\n\r\nexport function getLookupIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\r\n    <path fill=\"grey\" d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n    </svg>`\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n}","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the lower transform to convert an input string into all lowercase letters.';\r\n\r\nexport function createLower(): LowerStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Lower',\r\n    type: 'lower',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface LowerStep extends BranchedStep {\r\n  type: 'lower';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeLower(step: LowerStep) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeLower(data: any): LowerStep {\r\n  const step: LowerStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Lower',\r\n    type: 'lower',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isLowerStep(step: Step): step is LowerStep {\r\n  return step.type === 'lower';\r\n}\r\n\r\n\r\nexport function getLowerIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\r\n    </svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }","import { Uid } from \"sequential-workflow-designer\";\r\nimport { BranchedStep, Properties, Step } from \"sequential-workflow-model\";\r\nimport { deserializeToStep, serializeStep } from \"../transform-builder.component\";\r\n\r\nlet description = 'Use the name normalizer transform to clean or standardize the spelling of strings coming in from source systems. The most common use for this transform is for names and other proper nouns, but the transform is not necessarily limited to those data elements.'\r\n\r\nexport function createNameNormalizer(): NameNormalizerStep {\r\n    return {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: 'Name Normalizer',\r\n      type: 'NameNormalizer',\r\n      description: description,\r\n      properties: {},\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  }\r\n\r\nexport interface NameNormalizerStep extends BranchedStep {\r\n    type: 'NameNormalizer';\r\n    componentType: 'switch';\r\n    description?: string;\r\n    properties: Properties;\r\n}\r\n\r\n\r\n\r\n  export function serializeNameNormalizer(step: NameNormalizerStep) {\r\n    const attributes: Record<string, any> = {};\r\n\r\n     if (step.branches.input.length > 0) {\r\n        attributes.input = serializeStep(step.branches.input[0]);\r\n      }\r\n  \r\n    return {\r\n      name: step.name,\r\n      type: step.type,\r\n      attributes: attributes,\r\n    };\r\n  }\r\n\r\n  export function deserializeNameNormalizer(data: any): NameNormalizerStep {\r\n    const step: NameNormalizerStep = {\r\n      id: Uid.next(),\r\n      componentType: 'switch',\r\n      name: data.name ?? 'Name Normalizer',\r\n      type: 'NameNormalizer',\r\n      description: description,\r\n      properties: {},\r\n      branches: {\r\n        input: [],\r\n      },\r\n    };\r\n  \r\n    if (data.attributes.input) {\r\n      step.branches.input.push(deserializeToStep(data.attributes.input));\r\n    }\r\n  \r\n    return step;\r\n\r\n  }\r\n\r\n  export function isNameNormalizerStep(step: Step): step is NameNormalizerStep {\r\n    return step.type === 'NameNormalizer';\r\n  }","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createNumberValueModel,\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\n\r\nlet description = 'Use the random alphanumeric transform to generate a random string of any length, comprising both numbers and letters (both lowercase and uppercase).'\r\n\r\nexport function createRandomAlphaNumeric(): RandomAlphaNumericStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Random Alpha Numeric',\r\n    type: 'randomAlphaNumeric',\r\n    description: description,\r\n    properties: {\r\n        length: 32,\r\n    },\r\n  };\r\n}\r\n\r\nexport interface RandomAlphaNumericStep extends Step {\r\n  type: 'randomAlphaNumeric';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: {\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const RandomAlphaNumericModel = createStepModel<RandomAlphaNumericStep>('randomAlphaNumeric', 'task', step => {\r\n    step.property('length').value(\r\n        createNumberValueModel({\r\n            defaultValue: 32,\r\n            min: 1,\r\n            max: 450\r\n        })\r\n      )\r\n      .hint('The length of the random alphanumeric string to generate. The maximum length is 450 characters. If no length is specified, the default is 32 characters.')\r\n      .label('String Length');\r\n  });\r\n\r\nexport function serializeRandomAlphaNumeric(step: RandomAlphaNumericStep){\r\n    return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: {\r\n            length: step.properties.length\r\n        }\r\n    }\r\n}\r\n\r\nexport function deserializeRandomAlphaNumeric(data: any): RandomAlphaNumericStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'Random Alpha Numeric',\r\n        type: 'randomAlphaNumeric',\r\n        description: description,\r\n        properties: {\r\n            length: data.attributes.length,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isRandomAlphaNumericStep(step: Step): step is RandomAlphaNumericStep {\r\n    return step.type === 'randomAlphaNumeric';\r\n}\r\n\r\n\r\nexport function getRandomAlphaNumericIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createNumberValueModel,\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\n\r\nlet description = 'Use the random numeric transform to generate a random number of any length.'\r\n\r\nexport function createRandomNumeric(): RandomNumericStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Random Numeric',\r\n    type: 'randomNumeric',\r\n    description: description,\r\n    properties: {\r\n        length: 10,\r\n    },\r\n  };\r\n}\r\n\r\nexport interface RandomNumericStep extends Step {\r\n  type: 'randomNumeric';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: {\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const RandomNumericModel = createStepModel<RandomNumericStep>('randomNumeric', 'task', step => {\r\n    step.property('length').value(\r\n        createNumberValueModel({\r\n            defaultValue: 10,\r\n            min: 1,\r\n            max: 450\r\n        })\r\n      )\r\n      .hint('The length of the random numeric string to generate. The maximum length is 450 characters. If no length is specified, the default is 10 characters.')\r\n      .label('String Length');\r\n  });\r\n\r\nexport function serializeRandomNumeric(step: RandomNumericStep){\r\n    return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: {\r\n            length: step.properties.length\r\n        }\r\n    }\r\n}\r\n\r\nexport function deserializeRandomNumeric(data: any): RandomNumericStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'Random Numeric',\r\n        type: 'randomNumeric',\r\n        description: description,\r\n        properties: {\r\n            length: data.attributes.length,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isRandomNumericStep(step: Step): step is RandomNumericStep {\r\n    return step.type === 'randomNumeric';\r\n}\r\n\r\n\r\nexport function getRandomNumericIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createChoiceValueModel,\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\n\r\nlet description = 'Use the reference transform to reuse a transform that has already been written within another transform. This transform is often useful when you want to repeat the same logic multiple times within other transforms. This transform allows you to maintain only one transform and have it propagate through to other implementations of that logic.'\r\n\r\nexport function createReference(): ReferenceStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Reference',\r\n    type: 'reference',\r\n    description: description,\r\n    properties: {\r\n        id: '',\r\n    },\r\n  };\r\n}\r\n\r\nexport interface ReferenceStep extends Step {\r\n  type: 'reference';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: {\r\n    id: string;\r\n  };\r\n}\r\n\r\nexport function createReferenceStepModel(transforms: string[]) {\r\n    return createStepModel<ReferenceStep>('reference', 'task', step => {\r\n    step.property('id').value(\r\n        createChoiceValueModel({\r\n            choices: transforms,\r\n        })\r\n      )\r\n      .hint('This specifies the name of the pre-existing transform you want to use within your current transform.')\r\n      .label('Transform to Reference');\r\n  });\r\n}\r\n\r\nexport async function getAvailableTransforms(sdk: SailPointSDKService): Promise<string[]> {\r\n    const response = await sdk.listTransforms();\r\n    return response.data.map(transform => transform.name);\r\n}\r\n\r\nexport function serializeReference(step: ReferenceStep){\r\n    return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: {\r\n            id: step.properties.id\r\n        }\r\n    }\r\n}\r\n\r\nexport function deserializeReference(data: any): ReferenceStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'Reference',\r\n        type: 'reference',\r\n        description: description,\r\n        properties: {\r\n            id: data.attributes.id,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isReferenceStep(step: Step): step is ReferenceStep {\r\n    return step.type === 'reference';\r\n}\r\n\r\n\r\nexport function getReferenceIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel,\r\n} from 'sequential-workflow-editor-model';\r\nimport {\r\n  deserializeToStep,\r\n  serializeStep,\r\n} from '../transform-builder.component';\r\n\r\nlet description = 'Use the replace transform to find a given pattern of characters within incoming data and replace all instances of that pattern with alternate values. The transform recognizes standard regex syntax.'\r\n\r\nexport function createReplace(): ReplaceStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Replace',\r\n    type: 'replace',\r\n    description: description,\r\n    properties: {\r\n      regex: '',\r\n      replacement: '',\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface ReplaceStep extends BranchedStep {\r\n  type: 'replace';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    regex: string;\r\n    replacement: string;\r\n  };\r\n}\r\n\r\nexport const ReplaceModel = createStepModel<ReplaceStep>(\r\n  'replace',\r\n  'switch',\r\n  (step) => {\r\n    step\r\n      .property('regex')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .hint('This is the pattern you want to replace.')\r\n      .label('Regex Pattern');\r\n\r\n    step\r\n      .property('replacement')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .hint(\r\n        \"This is the replacement string that replaces the pattern wherever it occurs.\"\r\n      )\r\n      .label('Replacement String');\r\n  }\r\n);\r\n\r\nexport function serializeReplace(step: ReplaceStep) {\r\n  const attributes: Record<string, any> = {\r\n    regex: step.properties.regex,\r\n    replacement: step.properties.replacement,\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeReplace(data: any): ReplaceStep {\r\n  const step: ReplaceStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Replace',\r\n    type: 'replace',\r\n    description: description,\r\n    properties: {\r\n      regex: data.attributes.regex,\r\n      replacement: data.attributes.replacement,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nexport function isReplaceStep(step: Step): step is ReplaceStep {\r\n  return step.type === 'replace';\r\n}\r\n\r\nexport function getReplaceIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z\"/>\r\n    </svg>`\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n}\r\n","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'The replace all transform works like the replace transform, except that it can perform multiple replace operations on the incoming data instead of just one pattern. Use the replace all transform to find multiple patterns of characters within incoming data and replace all instances of those patterns with alternate values. The transform recognizes standard regex syntax.'\r\n\r\nexport function createReplaceAll(): ReplaceAllStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'ReplaceAll',\r\n    type: 'replaceAll',\r\n    properties: {\r\n        table: new Map<string, string>(),\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface ReplaceAllStep extends BranchedStep {\r\n  type: 'replaceAll';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    table: Map<string, string>;\r\n  };\r\n}\r\n\r\nexport function serializeReplaceAll(step: ReplaceAllStep) {\r\n  const attributes: Record<string, any> = {\r\n    table: Object.fromEntries(step.properties.table)\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeReplaceAll(data: any): ReplaceAllStep {\r\n\r\n  const rawTable = data.attributes.table;\r\n  const table = new Map<string, string>(\r\n  rawTable && typeof rawTable === 'object'\r\n    ? Object.entries(rawTable as { [key: string]: string })\r\n    : []\r\n  );\r\n\r\n  const step: ReplaceAllStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'ReplaceAll',\r\n    type: 'replaceAll',\r\n    description: description,\r\n    properties: {\r\n        table: table,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isReplaceAllStep(step: Step): step is ReplaceAllStep {\r\n  return step.type === 'replaceAll';\r\n}\r\n\r\nexport function getReplaceAllIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z\"/>\r\n    </svg>`\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n}","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  deserializeToStep,\r\n  serializeStep,\r\n} from '../transform-builder.component';\r\n\r\nlet description = 'Use the RFC5646 transform to convert an incoming string into an RFC 5646 language tag value. The incoming data must be either a recognized language name or a three-letter abbreviation of locale\\'s language.'\r\n\r\nexport function createRFC5646(): RFC5646Step {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'RFC 5646',\r\n    type: 'rfc5646',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface RFC5646Step extends BranchedStep {\r\n  type: 'rfc5646';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeRFC5646(step: RFC5646Step) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeRFC5646(data: any): RFC5646Step {\r\n  const step: RFC5646Step = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'RFC5646',\r\n    type: 'rfc5646',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nexport function isRFC5646Step(step: Step): step is RFC5646Step {\r\n  return step.type === 'rfc5646';\r\n}\r\n\r\nexport function getRFC5646Icon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z\"/>\r\n    </svg>`\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n}\r\n","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createNumberValueModel,\r\n  createStepModel,\r\n  createStringValueModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the right pad transform to pad an incoming string with a user-supplied character out to a specific number of characters.'\r\n\r\nexport function createRightPad(): RightPadStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Right Pad',\r\n    type: 'rightPad',\r\n    description: description,\r\n    properties: {\r\n        padding: '',\r\n        length: 0\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface RightPadStep extends BranchedStep {\r\n  type: 'rightPad';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    padding: string;\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const RightPadModel = createStepModel<RightPadStep>(\r\n    'rightPad',\r\n    'switch',\r\n    (step) => {\r\n      step\r\n        .property('padding')\r\n        .value(\r\n            createStringValueModel({\r\n                minLength: 1,\r\n              })\r\n        )\r\n        .hint(\r\n          'This string value represents the character the transform will pad the incoming data to to get to the desired length.'\r\n        )\r\n        .label('Padding Character');\r\n\r\n    step\r\n        .property('length')\r\n        .value(\r\n            createNumberValueModel({\r\n                min: 1,\r\n                max: 450,\r\n              })\r\n        )\r\n        .hint(\r\n          \"This is an integer value for the final output string's desired length.\"\r\n        )\r\n        .label('Total Length');\r\n    }\r\n  );\r\n\r\nexport function serializeRightPad(step: RightPadStep) {\r\n  const attributes: Record<string, any> = {\r\n    padding: step.properties.padding,\r\n    length: step.properties.length\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeRightPad(data: any): RightPadStep {\r\n  const step: RightPadStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Right Pad',\r\n    type: 'rightPad',\r\n    description: description,\r\n    properties: {\r\n        padding: data.attributes.padding,\r\n        length: data.attributes.length\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isRightPadStep(step: Step): step is RightPadStep {\r\n  return step.type === 'rightPad';\r\n}\r\n\r\nexport function getRightPadIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"/>\r\n    </svg>`\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n}","import { SPConfigV2025ApiExportSpConfigRequest, SPConfigV2025ApiGetSpConfigExportRequest, SPConfigV2025ApiGetSpConfigExportStatusRequest } from 'sailpoint-api-client';\r\nimport { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createChoiceValueModel,\r\n  createStepModel\r\n} from 'sequential-workflow-editor-model';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\n\r\nlet description = 'The rule transform allows you to reuse logic that has already been written for a previous use case. However, you can use the rule transform to reuse code contained within a Transform rule that either is not possible through only transforms';\r\n\r\nexport function createRule(): RuleStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'Rule',\r\n    type: 'rule',\r\n    description: description,\r\n    properties: {\r\n        name: '',\r\n    },\r\n  };\r\n}\r\n\r\nexport interface RuleStep extends Step {\r\n  type: 'rule';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport function createRuleStepModel(rules: string[]) {\r\n    return createStepModel<RuleStep>('rule', 'task', step => {\r\n      if(rules.length > 0) {\r\n        step.property('name').value(\r\n                createChoiceValueModel({\r\n                    choices: rules,\r\n                })\r\n              )\r\n              .label('Name of the Rule to Reference');\r\n      }\r\n  });\r\n}\r\n\r\nexport async function getAvailableRules(sdk: SailPointSDKService): Promise<string[]> {\r\n  const request: SPConfigV2025ApiExportSpConfigRequest = {\r\n    exportPayloadV2025: {\r\n      description: 'Export rules',\r\n      includeTypes: ['RULE'],\r\n      objectOptions: {}\r\n    }\r\n  };\r\n  \r\n  const job = await sdk.exportSpConfig(request);\r\n\r\n  if (job.status !== 202) {\r\n    console.error('Error fetching rules:', job.data);\r\n    return [];\r\n  }\r\n\r\n  while (true) {\r\n    console.log('Waiting for job to complete...');\r\n    \r\n    const statusRequest: SPConfigV2025ApiGetSpConfigExportStatusRequest = {\r\n      id: job.data.jobId\r\n    };\r\n    const { data: response } = await sdk.getSpConfigExportStatus(statusRequest);\r\n\r\n    if (response.status === 'NOT_STARTED' || response.status === 'IN_PROGRESS') {\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n    } else {\r\n      switch (response.status) {\r\n        case 'COMPLETE': {\r\n          const downloadRequest: SPConfigV2025ApiGetSpConfigExportRequest = {\r\n            id: job.data.jobId\r\n          };\r\n          const { data: exportData } = await sdk.getSpConfigExport(downloadRequest);\r\n          const rules: string[] = [];\r\n\r\n          for (const obj of exportData.objects ?? []) {\r\n            if (obj.object?.type === 'Transform') {\r\n              if (obj.self?.name) {\r\n                rules.push(obj.self.name);\r\n              }\r\n            }\r\n          }\r\n\r\n          return rules.filter((rule): rule is string => rule !== undefined);\r\n        }\r\n        default:\r\n          throw new Error(`Unhandled status: ${response.status}`);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function serializeRule(step: RuleStep){\r\n    return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: {\r\n            name: step.properties.name\r\n        }\r\n    }\r\n}\r\n\r\nexport function deserializeRule(data: any): RuleStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'Rule',\r\n        type: 'rule',\r\n        description: description,\r\n        properties: {\r\n            name: data.attributes.name,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isRuleStep(step: Step): step is RuleStep {\r\n    return step.type === 'rule';\r\n}\r\n\r\n\r\nexport function getRuleIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createBooleanValueModel,\r\n  createNumberValueModel,\r\n  createStepModel,\r\n  createStringValueModel,\r\n} from 'sequential-workflow-editor-model';\r\nimport {\r\n  deserializeToStep,\r\n  serializeStep,\r\n} from '../transform-builder.component';\r\n\r\nlet description = 'Use the split transform to use a specific character or regex string as a delimiter and convert a single incoming string into an array of values. This transform then returns the Nth element of that array. This transform is often useful when you want to split combined names into their constituent parts or when you want to simplify an ordered list of values into a single attribute.'\r\n\r\nexport function createSplit(): SplitStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Split',\r\n    type: 'split',\r\n    description: description,\r\n    properties: {\r\n      delimiter: '',\r\n      index: 0,\r\n      throws: true,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface SplitStep extends BranchedStep {\r\n  type: 'split';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    delimiter: string;\r\n    index: number;\r\n    throws: boolean;\r\n  };\r\n}\r\n\r\nexport const SplitModel = createStepModel<SplitStep>(\r\n  'split',\r\n  'switch',\r\n  (step) => {\r\n    step\r\n      .property('delimiter')\r\n      .value(\r\n        createStringValueModel({\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .hint(\r\n        'This can be either a single character or a regex expression. Transforms use it identify the break point between two substrings in the incoming data.'\r\n      )\r\n      .label('Delimiter');\r\n\r\n    step\r\n      .property('index')\r\n      .value(\r\n        createNumberValueModel({\r\n          min: 0,\r\n          max: 2000,\r\n        })\r\n      )\r\n      .hint(\r\n        'This is the integer value for the desired array element after the incoming data has been split into a list'\r\n      )\r\n      .label('Index to return');\r\n    step\r\n      .property('throws')\r\n      .value(createBooleanValueModel({ defaultValue: true }))\r\n      .hint(\r\n        'This true or false value indicates whether to throw an error if the index is out of bounds. Default is true.'\r\n      )\r\n      .label('Throw Error if Index Out of Bounds');\r\n  }\r\n);\r\n\r\nexport function serializeSplit(step: SplitStep) {\r\n  const attributes: Record<string, any> = {\r\n    delimiter: step.properties.delimiter,\r\n    index: step.properties.index,\r\n    throws: step.properties.throws\r\n  };\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeSplit(data: any): SplitStep {\r\n  const step: SplitStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Split',\r\n    type: 'split',\r\n    description: description,\r\n    properties: {\r\n      delimiter: data.attributes.delimiter,\r\n      index: data.attributes.index,\r\n      throws: data.attributes.throws !== undefined ? data.attributes.throws : true\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nexport function isSplitStep(step: Step): step is SplitStep {\r\n  return step.type === 'split';\r\n}\r\n\r\nexport function getSplitIcon(): string {\r\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M14 4l2.29 2.29-2.88 2.88 1.42 1.42 2.88-2.88L20 10V4zm-4 0H4v6l2.29-2.29 4.71 4.7V20h2v-8.41l-5.29-5.3z\"/>\r\n    </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n}\r\n","import { Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createStepModel,\r\n  createStringValueModel,\r\n} from 'sequential-workflow-editor-model';\r\n\r\nexport function createString(): StringStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'String',\r\n    type: 'string',\r\n    properties: {\r\n        value: 'String value',\r\n    },\r\n  };\r\n}\r\n\r\nexport interface StringStep extends Step {\r\n  type: 'string';\r\n  componentType: 'task';\r\n  properties: {\r\n    value: string;\r\n  };\r\n}\r\n\r\nexport const StringModel = createStepModel<StringStep>('string', 'task', step => {\r\n    step.property('value').value(\r\n        createStringValueModel({\r\n          defaultValue: 'String value',\r\n          minLength: 1,\r\n        })\r\n      )\r\n      .label('String Value');\r\n  });\r\n\r\n  export function serializeStatic(step: StringStep): string {\r\n    return step.properties.value;\r\n}\r\n\r\nexport function deserializeString(value: string): StringStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'String',\r\n        type: 'string',\r\n        properties: {\r\n            value: value,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isStringStep(step: Step) {\r\n    return step.type === 'string';\r\n}\r\n\r\nexport function getStringIcon(): string {\r\n  const svg = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill=\"gray\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><g>\r\n  // <path d=\"M2.5,4v3h5v12h3V7h5V4H2.5z M21.5,9h-9v3h3v7h3v-7h3V9z\"/></g></g></g>\r\n  // </svg>`;\r\nconst encoded = encodeURIComponent(svg.trim());\r\nreturn `data:image/svg+xml,${encoded}`;\r\n}","import { BranchedStep, Step, Uid } from 'sequential-workflow-designer';\r\nimport {\r\n  createNumberValueModel,\r\n  createStepModel,\r\n} from 'sequential-workflow-editor-model';\r\nimport {\r\n  deserializeToStep,\r\n  serializeStep,\r\n} from '../transform-builder.component';\r\n\r\nlet description = 'Use the substring transform to get the inner portion of a string passed into the transform. You can use the substring transform to get the first n characters or get a set number of characters within the middle of a string.'\r\n\r\nexport function createSubString(): SubStringStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Sub String',\r\n    type: 'substring',\r\n    description: description,\r\n    properties: {\r\n      begin: 0,\r\n      beginOffset: 0,\r\n      end: 1,\r\n      endOffset: 1,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface SubStringStep extends BranchedStep {\r\n  type: 'substring';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: {\r\n    begin: number;\r\n    beginOffset: number;\r\n    end: number;\r\n    endOffset: number;\r\n  };\r\n}\r\n\r\nexport const SubStringModel = createStepModel<SubStringStep>(\r\n  'substring',\r\n  'switch',\r\n  (step) => {\r\n    step\r\n      .property('begin')\r\n      .value(\r\n        createNumberValueModel({\r\n          min: -2000,\r\n          max: 2000,\r\n          defaultValue: 0,\r\n        })\r\n      )\r\n      .hint(\r\n        'This is the integer value for the location within the input data that contains the first character of the substring you want to return.'\r\n      )\r\n      .label('Begin');\r\n\r\n    step\r\n      .property('beginOffset')\r\n      .value(\r\n        createNumberValueModel({\r\n          min: 0,\r\n          max: 2000,\r\n        })\r\n      )\r\n      .hint(\r\n        'This integer value is the number of characters to add to the begin attribute when the transform returns a substring. '\r\n      )\r\n      .label('Begin Offset');\r\n\r\n    step\r\n      .property('end')\r\n      .value(\r\n        createNumberValueModel({\r\n          min: 0,\r\n          max: 2000,\r\n        })\r\n      )\r\n      .hint(\r\n        'This is the integer value for the location within the input data that no longer contains the substring you want to return.'\r\n      )\r\n      .label('End');\r\n\r\n    step\r\n      .property('endOffset')\r\n      .value(\r\n        createNumberValueModel({\r\n          min: 0,\r\n          max: 2000,\r\n        })\r\n      )\r\n      .hint(\r\n        'This integer value is the number of characters to add to the end attribute when the transform returns a substring.'\r\n      )\r\n      .label('End Offset');\r\n  }\r\n);\r\n\r\nexport function serializeSubString(step: SubStringStep) {\r\n  const attributes: Record<string, any> = {\r\n    begin: step.properties.begin,\r\n  };\r\n\r\n  if (step.properties.beginOffset !== -1) {\r\n    attributes.beginOffset = step.properties.beginOffset;\r\n  }\r\n\r\n  if (step.properties.end !== -1) {\r\n    attributes.end = step.properties.end;\r\n  }\r\n\r\n  if (step.properties.endOffset !== -1) {\r\n    attributes.endOffset = step.properties.endOffset;\r\n  }\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeSubString(data: any): SubStringStep {\r\n  const step: SubStringStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Sub String',\r\n    type: 'substring',\r\n    description: description,\r\n    properties: {\r\n        begin: data.attributes.delimiter,\r\n        beginOffset: data.attributes.beginOffset ?? -1,\r\n        end: data.attributes.end ?? -1,\r\n        endOffset: data.attributes.endOffset ?? -1,\r\n    },\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nexport function isSubStringStep(step: Step): step is SubStringStep {\r\n  return step.type === 'substring';\r\n}\r\n\r\nexport function getSubStringIcon(): string {\r\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n  <g><rect fill=\"none\" height=\"24\" width=\"24\" x=\"0\"/></g><g><g><g>\r\n  // <path fill=\"gray\" d=\"M4,9h16v2H4V9z M4,13h10v2H4V13z\"/></g></g></g>\r\n  // </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n}\r\n","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the trim transform to trim whitespaces from both the beginning and ending of input strings.'\r\n\r\n\r\nexport function createTrim(): TrimStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Trim',\r\n    type: 'trim',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface TrimStep extends BranchedStep {\r\n  type: 'trim';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeTrim(step: TrimStep) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeTrim(data: any): TrimStep {\r\n  const step: TrimStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Trim',\r\n    type: 'trim',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isTrimStep(step: Step): step is TrimStep {\r\n  return step.type === 'trim';\r\n}\r\n\r\n\r\nexport function getTrimIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <circle cx=\"6\" cy=\"18\" fill=\"none\" r=\"2\"/>\r\n    <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\".5\"/><circle cx=\"6\" cy=\"6\" fill=\"none\" r=\"2\"/>\r\n    <path fill=\"gray\" d=\"M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z\"/></svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }\r\n  \r\n","import { BranchedStep, Properties, Step, Uid } from 'sequential-workflow-designer';\r\nimport { deserializeToStep, serializeStep } from '../transform-builder.component';\r\n\r\nlet description = 'Use the upper transform to convert an input string into all uppercase letters.'\r\n\r\nexport function createUpper(): UpperStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: 'Upper',\r\n    type: 'upper',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface UpperStep extends BranchedStep {\r\n  type: 'upper';\r\n  componentType: 'switch';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeUpper(step: UpperStep) {\r\n  const attributes: Record<string, any> = {};\r\n\r\n  if (step.branches.input.length > 0) {\r\n    attributes.input = serializeStep(step.branches.input[0]);\r\n  }\r\n\r\n  return {\r\n    name: step.name,\r\n    type: step.type,\r\n    attributes: attributes,\r\n  };\r\n}\r\n\r\nexport function deserializeUpper(data: any): UpperStep {\r\n  const step: UpperStep = {\r\n    id: Uid.next(),\r\n    componentType: 'switch',\r\n    name: data.name ?? 'Upper',\r\n    type: 'upper',\r\n    description: description,\r\n    properties: {},\r\n    branches: {\r\n      input: [],\r\n    },\r\n  };\r\n\r\n  if (data.attributes.input) {\r\n    step.branches.input.push(deserializeToStep(data.attributes.input));\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\n\r\nexport function isUpperStep(step: Step): step is UpperStep {\r\n  return step.type === 'upper';\r\n}\r\n\r\nexport function getUpperIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"/></svg>`;\r\n    const encoded = encodeURIComponent(svg.trim());\r\n    return `data:image/svg+xml,${encoded}`;\r\n  }\r\n\r\n","import { Properties, Step, Uid } from 'sequential-workflow-designer';\r\n\r\nlet description = 'Use the UUID generator transform to create a universal unique ID (UUID) in the form of a 36-character string.'\r\n\r\nexport function createUUID(): UUIDStep {\r\n  return {\r\n    id: Uid.next(),\r\n    componentType: 'task',\r\n    name: 'UUID Generator',\r\n    type: 'uuid',\r\n    description: description,\r\n    properties: {\r\n    },\r\n  };\r\n}\r\n\r\nexport interface UUIDStep extends Step {\r\n  type: 'uuid';\r\n  componentType: 'task';\r\n  description?: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport function serializeUUID(step: UUIDStep){\r\n    return {\r\n        name: step.name,\r\n        type: step.type,\r\n        attributes: {}\r\n    }\r\n}\r\n\r\nexport function deserializeUUID(data: any): UUIDStep {\r\n    return {\r\n        id: Uid.next(),\r\n        componentType: 'task',\r\n        name: 'UUID Generator',\r\n        type: 'uuid',\r\n        description: description,\r\n        properties: {\r\n            length: data.attributes.length,\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n  export function isUUIDStep(step: Step): step is UUIDStep {\r\n    return step.type === 'uuid';\r\n}\r\n\r\n\r\nexport function getUUIDIcon(): string {\r\n    const svg = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/>\r\n    <path fill=\"gray\" d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/></g>\r\n    // </svg>`;\r\n  const encoded = encodeURIComponent(svg.trim());\r\n  return `data:image/svg+xml,${encoded}`;\r\n  }","import { CommonModule } from '@angular/common';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInput, MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nexport interface MapRow {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-map-editor-dialog',\r\n  templateUrl: './map-editor-dialog.component.html',\r\n  standalone: true,\r\n  imports: [MatTableModule, MatButtonModule, CommonModule, MatInputModule, FormsModule, MatButtonModule, MatIconModule, MatInput],\r\n\r\n})\r\nexport class MapEditorDialogComponent {\r\n    rows: { key: string, value: string }[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MapEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { map: { [key: string]: string } }\r\n  ) {\r\n    this.rows = Object.entries(data.map).map(([key, value]) => ({\r\n        key: key,\r\n        value: value\r\n      }));\r\n\r\n  }\r\n\r\n  addRow() {\r\n    this.rows = [...this.rows, { key: 'key', value: 'value' }];\r\n}\r\n\r\n  removeRow(index: number) {\r\n    this.rows = this.rows.filter((_, i) => i !== index);\r\n}\r\n\r\n  save() {\r\n    const updatedMap: { [key: string]: string } = {};\r\n    const seenKeys = new Set<string>();\r\n  \r\n    for (const row of this.rows) {\r\n      const key = row.key.trim();\r\n      if (!key) continue; // skip empty keys\r\n      if (seenKeys.has(key)) {\r\n        window.alert(`Duplicate key found: \"${key}\"`);\r\n        return;\r\n      }\r\n      seenKeys.add(key);\r\n      updatedMap[key] = row.value;\r\n    }\r\n  \r\n    this.dialogRef.close(updatedMap);\r\n  }\r\n  \r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div style=\"padding: 5px;\">\r\n<h1 mat-dialog-title>Edit Table</h1>\r\n\r\n<div mat-dialog-content>\r\n  <table mat-table [dataSource]=\"rows\" class=\"mat-elevation-z8\" style=\"width: 100%;\">\r\n    <ng-container matColumnDef=\"key\">\r\n      <th mat-header-cell *matHeaderCellDef>Key</th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n        <input matInput [(ngModel)]=\"rows[i].key\">\r\n        </mat-form-field>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef>Value</th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n        <input matInput [(ngModel)]=\"rows[i].value\">\r\n        </mat-form-field>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"removeRow(i)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"['key', 'value', 'actions']\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['key', 'value', 'actions']\"></tr>\r\n  </table>\r\n\r\n  <button mat-button (click)=\"addRow()\" style=\"margin-top: 1rem;\">Add Row</button>\r\n</div>\r\n\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"cancel()\">Cancel</button>\r\n  <button mat-flat-button color=\"primary\" (click)=\"save()\">Save</button>\r\n</div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, catchError, from, Observable, of, switchMap } from 'rxjs';\r\nimport { IdentityDocumentsV2025, SearchV2025ApiSearchPostRequest } from 'sailpoint-api-client';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IdentityService {\r\n  \r\n  // BehaviorSubject to store the selected identities\r\n  private selectedIdentitiesSubject = new BehaviorSubject<IdentityDocumentsV2025[]>([]);\r\n  selectedIdentities$ = this.selectedIdentitiesSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    // Load selected identities from local storage if available\r\n    this.loadSelectedIdentitiesFromStorage();\r\n  }\r\n\r\n  \r\n  getIdentitiesByProfile(\r\n    profileId: string,\r\n    sdkService: SailPointSDKService,\r\n    searchQuery?: string\r\n  ): Observable<IdentityDocumentsV2025[]> {\r\n  \r\n    let queryString = `identityProfile.id:${profileId}`;\r\n\r\n    if (searchQuery?.trim()) {\r\n        const escaped = searchQuery.replace(/\"/g, '\\\\\"'); // escape quotes if necessary\r\n        queryString += ` AND (name:*${escaped}*)`;\r\n    }\r\n\r\n    const request: SearchV2025ApiSearchPostRequest = {\r\n      searchV2025: {\r\n        indices: ['identities'],\r\n        query: {\r\n          query: queryString\r\n        },\r\n        sort: ['name']\r\n      },\r\n      limit: 250\r\n    };\r\n\r\n  \r\n    const searchPromise = sdkService.searchPost?.(request) ?? Promise.resolve([]);\r\n\r\n    return from(searchPromise).pipe(\r\n      catchError(err => {\r\n        console.error('Search request failed:', err);\r\n        return of([]);\r\n      }),\r\n      switchMap(response => {\r\n        if ('data' in response) {\r\n          return of(response.data as IdentityDocumentsV2025[]);\r\n        } else {\r\n          return of([]);\r\n        }\r\n      })\r\n    );    \r\n  }\r\n  \r\n\r\n  /**\r\n   * Get a specific identity by ID\r\n   */\r\n//   getIdentity(id: string): Observable<Identity> {\r\n//     // Use mock data in development environment\r\n//     console.log(`Using mock identity data for ID: ${id}`);\r\n    \r\n//     // Search through all profiles for the identity\r\n//     for (const profileId in this.mockIdentities) {\r\n//       const identity = this.mockIdentities[profileId].find(i => i.id === id);\r\n//       if (identity) {\r\n//         return of(identity).pipe(\r\n//           delay(300) // Simulate network delay\r\n//         );\r\n//       }\r\n//     }\r\n    \r\n//     return throwError(() => new Error('Identity not found'));\r\n    \r\n//     // Commented out real API call code\r\n//     /*\r\n//     return this.http.get<Identity>(`${this.apiUrl}/${id}`).pipe(\r\n//       catchError(error => {\r\n//         console.error(`Error fetching identity with id ${id}:`, error);\r\n//         return throwError(() => new Error('Failed to fetch identity details. Please try again later.'));\r\n//       })\r\n//     );\r\n//     */\r\n//   }\r\n\r\n  /**\r\n   * Update the selected identities\r\n   */\r\n  updateSelectedIdentities(identities: IdentityDocumentsV2025[]): void {\r\n    this.selectedIdentitiesSubject.next(identities);\r\n    // Save to local storage for persistence\r\n    localStorage.setItem('selectedIdentities', JSON.stringify(identities));\r\n  }\r\n\r\n  /**\r\n   * Add an identity to the selection\r\n   */\r\n  addSelectedIdentity(identity: IdentityDocumentsV2025): void {\r\n    const currentIdentities = this.selectedIdentitiesSubject.value;\r\n    // Check if identity is already selected\r\n    if (!currentIdentities.some(item => item.id === identity.id)) {\r\n      const updatedIdentities = [...currentIdentities, identity];\r\n      this.updateSelectedIdentities(updatedIdentities);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an identity from the selection\r\n   */\r\n  removeSelectedIdentity(identityId: string): void {\r\n    const currentIdentities = this.selectedIdentitiesSubject.value;\r\n    const updatedIdentities = currentIdentities.filter(item => item.id !== identityId);\r\n    this.updateSelectedIdentities(updatedIdentities);\r\n  }\r\n\r\n  /**\r\n   * Clear all selected identities\r\n   */\r\n  clearSelectedIdentities(): void {\r\n    this.updateSelectedIdentities([]);\r\n  }\r\n\r\n  /**\r\n   * Load selected identities from local storage\r\n   */\r\n  private loadSelectedIdentitiesFromStorage(): void {\r\n    const storedIdentities = localStorage.getItem('selectedIdentities');\r\n    if (storedIdentities) {\r\n      try {\r\n        const identities:IdentityDocumentsV2025[] = JSON.parse(storedIdentities);\r\n         console.log('Loaded identities from local storage:', identities);\r\n        this.selectedIdentitiesSubject.next(identities);\r\n      } catch (e) {\r\n        console.error('Error parsing stored identities:', e);\r\n        localStorage.removeItem('selectedIdentities');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule, MatSelectionListChange } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { IdentityDocumentsV2025 } from 'sailpoint-api-client';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\nimport { IdentityService } from './identity-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-identity-search',\r\n  templateUrl: './identity-search.component.html',\r\n  styleUrls: ['./identity-search.component.scss'],\r\n  imports: [\r\n        // Material Modules\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatChipsModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n        CommonModule,\r\n        ReactiveFormsModule\r\n  ],\r\n  standalone: true,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class IdentitySearchComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() profileId: string | null = null;\r\n  @Input()\r\n    sdkService!: SailPointSDKService;\r\n  @Output() identitiesSelected = new EventEmitter<IdentityDocumentsV2025[]>();\r\n\r\n  searchControl = new FormControl('');\r\n  identities: IdentityDocumentsV2025[] = [];\r\n  filteredIdentities: IdentityDocumentsV2025[] = [];\r\n  selectedIdentities: IdentityDocumentsV2025[] = [];\r\n  \r\n  loading = false;\r\n  error = '';\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(private identityService: IdentityService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to identity selection changes\r\n    this.identityService.selectedIdentities$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe(identities => {\r\n        console.log('Selected Identities Subscribe On init:', identities);\r\n      this.selectedIdentities = identities;\r\n    });\r\n\r\n    // Setup search with debounce\r\n    this.searchControl.valueChanges\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        switchMap(value => this.searchIdentities(value || ''))\r\n      )\r\n      .subscribe();\r\n\r\n    // Load identities when profile changes\r\n    if (this.profileId) {\r\n      this.loadIdentities();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['profileId'] && !changes['profileId'].firstChange) {\r\n      this.clearAll(); // Clear everything before loading new identities\r\n      this.loadIdentities();\r\n    }\r\n  }\r\n\r\n  clearAll(): void {\r\n    this.searchControl.setValue('');\r\n    this.identities = [];\r\n    this.filteredIdentities = [];\r\n    this.selectedIdentities = [];\r\n    this.identityService.updateSelectedIdentities([]);\r\n  }\r\n  \r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Load identities for the selected profile\r\n   */\r\n  loadIdentities(): void {\r\n    if (!this.profileId) {\r\n      this.identities = [];\r\n      this.filteredIdentities = [];\r\n      this.error = 'No profile selected';\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.identityService.getIdentitiesByProfile(this.profileId, this.sdkService)\r\n    .pipe(\r\n      takeUntil(this.destroy$),\r\n      catchError(err => {\r\n        this.error = err.message || 'Failed to load identities';\r\n        return of([]);\r\n      })\r\n    )\r\n    .subscribe(identities => {\r\n      this.identities = identities;\r\n      this.filteredIdentities = identities;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search for identities by query\r\n   */\r\n  searchIdentities(query: string): Observable<IdentityDocumentsV2025[]> {\r\n    if (!this.profileId) {\r\n      return of([]);\r\n    }\r\n\r\n    if (!query.trim()) {\r\n      this.filteredIdentities = this.identities;\r\n      return of(this.identities);\r\n    }\r\n\r\n    // If query is less than 3 characters, filter locally\r\n    if (query.length < 3 && this.identities.length > 0) {\r\n      this.filteredIdentities = this.identities.filter(identity => \r\n        identity.name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      return of(this.filteredIdentities);\r\n    }\r\n\r\n    // Otherwise, search via API\r\n    this.loading = true;\r\n    return this.identityService.getIdentitiesByProfile(this.profileId, this.sdkService, query)\r\n    .pipe(\r\n      takeUntil(this.destroy$),\r\n      catchError(err => {\r\n        this.error = err.message || 'Failed to search identities';\r\n        this.loading = false;\r\n        return of([]);\r\n      }),\r\n      switchMap(identities => {\r\n        this.filteredIdentities = identities;\r\n        this.loading = false;\r\n        return of(identities);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle selection change events\r\n   */\r\n  onSelectionChange(event: MatSelectionListChange): void {\r\n    const selectedIds = event.source.selectedOptions.selected.map(option => option.value as string);\r\n    this.selectedIdentities = this.identities.filter(identity => selectedIds.includes(identity.id));\r\n    this.identityService.updateSelectedIdentities(this.selectedIdentities);\r\n    this.identitiesSelected.emit(this.selectedIdentities);\r\n  }\r\n\r\n  /**\r\n   * Check if an identity is selected\r\n   */\r\n  isSelected(identity: IdentityDocumentsV2025): boolean {\r\n    return this.selectedIdentities.some(item => item.id === identity.id);\r\n  }\r\n\r\n  /**\r\n   * Get display value for identity\r\n   */\r\n  getIdentityDisplay(identity: IdentityDocumentsV2025): string {\r\n    return `${identity.name} (ID: ${identity.id})`;\r\n  }\r\n\r\n  /**\r\n   * Clear search and selections\r\n   */\r\n  clearSearch(): void {\r\n    this.searchControl.setValue('');\r\n    this.filteredIdentities = this.identities;\r\n  }\r\n}\r\n","<div class=\"identity-search-container\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>Search Identities</mat-card-title>\r\n      </mat-card-header>\r\n      \r\n      <mat-card-content>\r\n        <div class=\"search-field\">\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label class=\"serach-identities-label\">Search Identities</mat-label>\r\n            <input \r\n              matInput \r\n              [formControl]=\"searchControl\" \r\n              placeholder=\"Enter identity name\"\r\n              [disabled]=\"!profileId\"\r\n            >\r\n            <button \r\n              *ngIf=\"searchControl.value\" \r\n              matSuffix \r\n              mat-icon-button \r\n              aria-label=\"Clear\" \r\n              (click)=\"clearSearch()\"\r\n            >\r\n              <mat-icon>close</mat-icon>\r\n            </button>\r\n            <mat-hint *ngIf=\"profileId\">Type to search identities</mat-hint>\r\n            <mat-hint *ngIf=\"!profileId\">Select a profile first</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div *ngIf=\"loading\" class=\"loading-indicator\">\r\n          <mat-spinner diameter=\"30\"></mat-spinner>\r\n          <span>Loading identities...</span>\r\n        </div>\r\n        \r\n        <div *ngIf=\"error\" class=\"error-message\">\r\n          <mat-icon color=\"warn\">error</mat-icon>\r\n          <span>{{ error }}</span>\r\n        </div>\r\n        \r\n        <div *ngIf=\"!loading && filteredIdentities.length === 0 && !error\" class=\"no-results\">\r\n          <mat-icon>search_off</mat-icon>\r\n          <span>No identities found</span>\r\n        </div>\r\n        \r\n        <mat-selection-list \r\n          *ngIf=\"filteredIdentities.length > 0\" \r\n          [multiple]=\"true\"\r\n          (selectionChange)=\"onSelectionChange($event)\"\r\n        >\r\n          <mat-list-option \r\n            *ngFor=\"let identity of filteredIdentities\" \r\n            [value]=\"identity.id\"\r\n            [selected]=\"isSelected(identity)\"\r\n            checkboxPosition=\"before\"\r\n          >\r\n            <div class=\"identity-item\">\r\n              <span class=\"identity-name\">{{ identity.name }}</span>\r\n              <span class=\"identity-id\">{{ identity.email }}</span>\r\n            </div>\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-card-content>\r\n      \r\n      <mat-card-actions align=\"end\">\r\n        <mat-chip-listbox>\r\n          <mat-chip highlighted color=\"primary\">\r\n            {{ selectedIdentities.length }} Selected\r\n          </mat-chip>\r\n        </mat-chip-listbox>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  ","import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { TransformResult } from './transform-preview.component';\r\n\r\n@Component({\r\n  selector: 'app-transform-results',\r\n  templateUrl: './transform-results.component.html',\r\n  styleUrls: ['./transform-results.component.scss'],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatToolbarModule\r\n  ],\r\n  standalone: true,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TransformResultsComponent implements OnInit, OnChanges {\r\n  @Input() results: TransformResult[] = [];\r\n  \r\n  expandedPanels: { [key: string]: boolean } = {};\r\n  displayedColumns: string[] = ['property', 'original', 'transformed'];\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeExpandedPanels();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['results'] && changes['results'].currentValue) {\r\n      setTimeout(() => this.initializeExpandedPanels());\r\n    }\r\n  }\r\n  \r\n\r\n  /**\r\n   * Initialize expanded state for each result panel\r\n   */\r\n  private initializeExpandedPanels(): void {\r\n    this.expandedPanels = {};\r\n    this.results.forEach(result => {\r\n      this.expandedPanels[result.identityName] = false;\r\n    });\r\n  \r\n    if (this.results.length > 0) {\r\n      setTimeout(() => {\r\n        this.expandedPanels[this.results[0].identityName] = true;\r\n      });\r\n    }\r\n  }\r\n  \r\n\r\n  /**\r\n   * Toggle panel expansion state\r\n   */\r\n  togglePanel(identityName: string): void {\r\n    this.expandedPanels[identityName] = !this.expandedPanels[identityName];\r\n  }\r\n\r\n  /**\r\n   * Format a value for display in the UI\r\n   */\r\n  formatValue(value: any): string {\r\n    if (value === undefined) return 'undefined';\r\n    if (value === null) return 'null';\r\n    \r\n    if (typeof value === 'object') {\r\n      return JSON.stringify(value, null, 2);\r\n    }\r\n    \r\n    return String(value);\r\n  }\r\n\r\n  /**\r\n   * Track expanded panels by identity ID\r\n   */\r\n  trackByIdentityId(index: number, result: TransformResult): string {\r\n    return result.identityName;\r\n  }\r\n\r\n  /**\r\n   * Track table rows by property name\r\n   */\r\n  trackByProperty(index: number, item: { property: string }): string {\r\n    return item.property;\r\n  }\r\n}\r\n","<div class=\"results-container\">\r\n  <h2 class=\"section-title\">Transform Results</h2>\r\n\r\n  <div *ngIf=\"results.length === 0\" class=\"no-results\">\r\n    <mat-icon>info</mat-icon>\r\n    <span\r\n      >No transform results available. Run a transform to see results\r\n      here.</span\r\n    >\r\n  </div>\r\n\r\n  <div *ngIf=\"results.length > 0\" class=\"results-list\">\r\n    <mat-accordion>\r\n      <mat-expansion-panel\r\n        *ngFor=\"let result of results; trackBy: trackByIdentityId\"\r\n        [expanded]=\"expandedPanels[result.identityName]\"\r\n        (opened)=\"expandedPanels[result.identityName] = true\"\r\n        (closed)=\"expandedPanels[result.identityName] = false\"\r\n      >\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <div class=\"panel-title\">\r\n              <span>{{ result.identityName }}</span>\r\n              <mat-chip\r\n                [color]=\"result.success ? 'primary' : 'warn'\"\r\n                [highlighted]=\"true\"\r\n              >\r\n                {{ result.success ? \"Success\" : \"Error\" }}\r\n              </mat-chip>\r\n            </div>\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            <span>Result: {{ result.result }}</span>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <div *ngIf=\"!result.success\" class=\"error-message\">\r\n          <mat-icon color=\"warn\">error</mat-icon>\r\n          <span style=\"margin-left: 1em\">{{ result.error }}</span>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, inject, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { finalize, from, Subject, takeUntil } from 'rxjs';\r\nimport { IdentityDocumentsV2025, IdentityProfilesV2025ApiGenerateIdentityPreviewRequest, IdentityProfileV2025, TransformsV2025ApiCreateTransformRequest } from 'sailpoint-api-client';\r\nimport { SailPointSDKService } from '../../../sailpoint-sdk.service';\r\nimport { IdentitySearchComponent } from './identity-search.component';\r\nimport { IdentityService } from './identity-service';\r\nimport { TransformResultsComponent } from './transform-results.component';\r\n\r\nexport type TransformResult = {\r\n  identityName: string;\r\n  result: string;\r\n  success: boolean;\r\n  error: string | null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-preview-stepper',\r\n  templateUrl: './transform-preview.component.html',\r\n  styleUrl: './transform-preview.component.scss',\r\n  standalone: true,\r\n  imports: [ MatButtonModule,\r\n    MatStepperModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    CommonModule,\r\n    IdentitySearchComponent,\r\n    TransformResultsComponent\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n\r\n})\r\nexport class TransformPreviewComponent implements OnInit {\r\n  sdk: SailPointSDKService;\r\n  private destroy$ = new Subject<void>();\r\n  transformForm: FormGroup;\r\n  profiles: IdentityProfileV2025[] = []; \r\n  loadingProfiles = false;\r\n  profileError = '';\r\n  selectedIdentities: IdentityDocumentsV2025[] = [];\r\n  codeExpanded = false;\r\n  transformName: string = '';\r\n  transformCode: string = '';\r\n  executingTransform = false;\r\n  transformResults: TransformResult[] = [];\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<TransformPreviewComponent>,\r\n    public identityService: IdentityService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { sdkService: SailPointSDKService, transformDefinition: any },\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.sdk = data.sdkService;\r\n    this.transformCode = data.transformDefinition;\r\n    this.transformForm = this.fb.group({\r\n      profileId: [null, (control: AbstractControl<any, any>) => Validators.required(control)],\r\n    });\r\n    \r\n\r\n    if (typeof data.transformDefinition === 'string') {\r\n      const parsed = JSON.parse(data.transformDefinition);\r\n    \r\n      if (\r\n        parsed &&\r\n        typeof parsed === 'object' &&\r\n        'name' in parsed\r\n      ) {\r\n        this.transformName = (parsed as { name: string }).name;\r\n      } else {\r\n        this.transformName = 'Transform';\r\n      }\r\n    } else {\r\n      this.transformName = 'Transform';\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Load profiles\r\n    this.loadProfiles();\r\n\r\n    this.identityService.selectedIdentities$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe(identities => {\r\n      this.selectedIdentities = identities;\r\n    });\r\n\r\n    // Check if there's saved profile selection\r\n    const savedProfile = localStorage.getItem('selectedProfileId');\r\n    if (savedProfile) {\r\n      this.transformForm.patchValue({ profileId: savedProfile });\r\n    } \r\n  }\r\n\r\n\r\n  private _formBuilder = inject(FormBuilder);\r\n\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: [null, (control: AbstractControl<any, any>) => Validators.required(control)],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: [null, (control: AbstractControl<any, any>) => Validators.required(control)],\r\n  });\r\n\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  loadProfiles(): void {\r\n    this.loadingProfiles = true;\r\n    this.profileError = '';\r\n    \r\n    from(this.sdk.listIdentityProfiles())\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        finalize(() => this.loadingProfiles = false)\r\n      )\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.status >= 400) {\r\n            this.profileError = 'Failed to load profiles';\r\n            this.snackBar.open('Error loading profiles', 'Dismiss', {\r\n              duration: 5000,\r\n              panelClass: 'error-snackbar'\r\n            });\r\n            return;\r\n          }\r\n          console.log('Profiles loaded:', response);\r\n          this.profiles = response.data;\r\n        },\r\n        error: (error) => {\r\n          this.profileError = error.message || 'Failed to load profiles';\r\n          this.snackBar.open('Error loading profiles', 'Dismiss', { \r\n            duration: 5000,\r\n            panelClass: 'error-snackbar'\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n    /**\r\n   * Handle profile selection change\r\n   */\r\n    onProfileChange(profileId: string | null): void {\r\n      if (profileId) {\r\n        localStorage.setItem('selectedProfileId', profileId);\r\n        // Clear selected identities when profile changes\r\n        this.identityService.clearSelectedIdentities();\r\n      } else {\r\n        localStorage.removeItem('selectedProfileId');\r\n      }\r\n    }\r\n\r\n    onIdentitiesSelected(identities: IdentityDocumentsV2025[]): void {\r\n      this.selectedIdentities = identities;\r\n    }\r\n\r\n      /**\r\n   * Toggle code editor visibility\r\n   */\r\n  toggleCodeEditor(): void {\r\n    this.codeExpanded = !this.codeExpanded;\r\n  }\r\n\r\n  async executeTransform(): Promise<void> {\r\n    if (this.transformForm.invalid) {\r\n      this.transformForm.markAllAsTouched();\r\n      this.snackBar.open('Please fill all required fields', 'Dismiss', { duration: 3000 });\r\n      return;\r\n    }\r\n    \r\n    if (this.selectedIdentities.length === 0) {\r\n      this.snackBar.open('Please select at least one identity', 'Dismiss', { duration: 3000 });\r\n      return;\r\n    }\r\n    \r\n    // Create transform to be used in the reference\r\n    const transformDefinition = JSON.parse(this.transformCode);\r\n    transformDefinition.name = transformDefinition.name + 'Preview';\r\n    \r\n    const createTransformRequest: TransformsV2025ApiCreateTransformRequest = {\r\n      transformV2025: transformDefinition      \r\n    };\r\n    \r\n    const transformCreateResponse = await this.sdk.createTransform(createTransformRequest);\r\n    if (transformCreateResponse.status >= 400) {\r\n      this.snackBar.open('Error creating transform', 'Dismiss', { duration: 5000 });\r\n      return;\r\n    }\r\n    \r\n    this.executingTransform = true;\r\n    this.transformResults = [];\r\n    \r\n    const previewPromises = this.selectedIdentities.map(async identity => {\r\n      const request: IdentityProfilesV2025ApiGenerateIdentityPreviewRequest = {\r\n        identityPreviewRequestV2025: {\r\n          identityId: identity.id,\r\n          identityAttributeConfig: {\r\n            enabled: true,\r\n            attributeTransforms: [\r\n              {\r\n                identityAttributeName: \"email\",\r\n                transformDefinition: {\r\n                  type: \"reference\",\r\n                  attributes: {\r\n                    id: transformDefinition.name\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      };\r\n    \r\n      const response = await this.sdk.generateIdentityPreview(request);\r\n    \r\n      if (response.status >= 400) {\r\n        this.transformResults.push({\r\n          identityName: identity.name,\r\n          result: 'Error',\r\n          success: false,\r\n          error: response.statusText || 'An error occurred while generating the preview',\r\n        });\r\n      } else {\r\n        const emailAttr = response.data.previewAttributes?.find(attr => attr.name === 'email');\r\n        if (emailAttr?.errorMessages?.length) {\r\n          this.transformResults.push({\r\n            identityName: identity.name,\r\n            result: 'Error',\r\n            success: false,\r\n            error: emailAttr.errorMessages[0]?.text ?? 'Error message not available',\r\n          });\r\n        } else {\r\n          this.transformResults.push({\r\n            identityName: identity.name,\r\n            result: emailAttr?.value || 'No result',\r\n            success: true,\r\n            error: null,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Wait for all previews to complete\r\n    await Promise.all(previewPromises);\r\n    \r\n    // Now it's safe to delete the transform\r\n    const deleteTransformResponse = await this.sdk.deleteTransform({ id: transformCreateResponse.data.id });\r\n    \r\n    if (deleteTransformResponse.status >= 400) {\r\n      this.snackBar.open('Error deleting transform', 'Dismiss', { duration: 5000 });\r\n      return;\r\n    }\r\n    \r\n    console.log('Transform results:', this.transformResults);\r\n    \r\n    this.executingTransform = false;\r\n    \r\n       \r\n    // this.transformService.executeTransform(this.selectedIdentities, this.transformCode)\r\n    //   .pipe(\r\n    //     takeUntil(this.destroy$),\r\n    //     finalize(() => this.executingTransform = false)\r\n    //   )\r\n    //   .subscribe({\r\n    //     next: (results) => {\r\n    //       this.snackBar.open(`Transform executed on ${results.length} identities`, 'Dismiss', { duration: 3000 });\r\n    //     },\r\n    //     error: (error) => {\r\n    //       this.snackBar.open(error.message || 'Failed to execute transform', 'Dismiss', { \r\n    //         duration: 5000,\r\n    //         panelClass: 'error-snackbar'\r\n    //       });\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.transformForm.reset();\r\n    this.identityService.clearSelectedIdentities();\r\n    this.identityService.updateSelectedIdentities([]);\r\n    this.transformResults = [];\r\n    localStorage.removeItem('selectedProfileId');\r\n  }\r\n\r\n  onTransformCodeChange(): void {\r\n    // handle transform code changes if needed\r\n  }\r\n}\r\n","<div class=\"transform-preview-container\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Transform Preview</mat-card-title>\r\n      <mat-card-subtitle>Select a profile, identities, and test your transform</mat-card-subtitle>\r\n    </mat-card-header>\r\n    \r\n    <mat-card-content>\r\n      <form [formGroup]=\"transformForm\" (ngSubmit)=\"executeTransform()\">\r\n        <!-- Profile Selection -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-header\">1. Select Identity Profile</h3>\r\n          \r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Identity Profile</mat-label>\r\n            <mat-select formControlName=\"profileId\" (selectionChange)=\"onProfileChange($event.value)\">\r\n              <mat-option *ngIf=\"loadingProfiles\">Loading profiles...</mat-option>\r\n              <mat-option *ngIf=\"!loadingProfiles && profiles.length === 0 && !profileError\" [value]=\"null\">\r\n                No profiles available\r\n              </mat-option>\r\n              <mat-option *ngIf=\"profileError\" [value]=\"null\">\r\n                Error loading profiles\r\n              </mat-option>\r\n              <mat-option *ngFor=\"let profile of profiles\" [value]=\"profile.id\">\r\n                {{ profile.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"transformForm.get('profileId')?.hasError('required')\">\r\n              Please select a profile\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <!-- Identity Search -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-header\">2. Select Identities</h3>\r\n          <app-identity-search \r\n            [profileId]=\"transformForm.get('profileId')?.value\"\r\n            [sdkService]=\"sdk\"\r\n            (identitiesSelected)=\"onIdentitiesSelected($event)\">\r\n          </app-identity-search>\r\n          \r\n          <div class=\"selected-identities-summary\">\r\n            <div *ngIf=\"selectedIdentities.length === 0\" class=\"no-identities-message\">\r\n              <mat-icon>person_off</mat-icon>\r\n              <span>No identities selected</span>\r\n            </div>\r\n            \r\n            <mat-chip-listbox *ngIf=\"selectedIdentities.length > 0\">\r\n              <mat-chip *ngFor=\"let identity of selectedIdentities\" \r\n                       (removed)=\"identityService.removeSelectedIdentity(identity.id)\">\r\n                {{ identity.name }}\r\n                <button matChipRemove>\r\n                  <mat-icon>cancel</mat-icon>\r\n                </button>\r\n              </mat-chip>\r\n            </mat-chip-listbox>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Transform Code -->\r\n        <div class=\"form-section\">\r\n          <div class=\"code-header\" (click)=\"toggleCodeEditor()\">\r\n            <h3 class=\"section-header\">Transform ({{transformName}})</h3>\r\n            <button mat-icon-button type=\"button\">\r\n              <mat-icon>{{ codeExpanded ? 'expand_less' : 'expand_more' }}</mat-icon>\r\n            </button>\r\n          </div>\r\n          \r\n          <mat-form-field appearance=\"outline\" class=\"full-width\" *ngIf=\"codeExpanded\">\r\n            <mat-label>Transform Code</mat-label>\r\n            <textarea \r\n              matInput \r\n              rows=\"10\"\r\n              placeholder=\"Enter your transform code here\"\r\n              (blur)=\"onTransformCodeChange()\"\r\n            >{{transformCode}}</textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button \r\n            type=\"submit\" \r\n            mat-raised-button \r\n            color=\"primary\" \r\n            [disabled]=\"transformForm.invalid || selectedIdentities.length === 0 || executingTransform\"\r\n          >\r\n            <mat-icon>play_arrow</mat-icon>\r\n            Execute Transform\r\n          </button>\r\n          \r\n          <button \r\n            type=\"button\" \r\n            mat-stroked-button \r\n            (click)=\"resetForm()\"\r\n          >\r\n            <mat-icon>refresh</mat-icon>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <!-- Progress Indicator\r\n      <div *ngIf=\"executingTransform\" class=\"executing-transform\">\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        <span>Executing transform...</span>\r\n      </div> -->\r\n    </mat-card-content>\r\n  </mat-card>\r\n  \r\n  <!-- Results Section -->\r\n  <div class=\"results-section\">\r\n    <app-transform-results [results]=\"transformResults\"></app-transform-results>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  Designer,\r\n  RootEditorContext,\r\n  RootEditorProvider,\r\n  StepEditorContext,\r\n  StepEditorProvider,\r\n  StepsConfiguration,\r\n  ToolboxConfiguration,\r\n  Uid,\r\n  ValidatorConfiguration,\r\n} from 'sequential-workflow-designer';\r\nimport { SequentialWorkflowDesignerModule } from 'sequential-workflow-designer-angular';\r\nimport { EditorProvider } from 'sequential-workflow-editor';\r\nimport {\r\n  ChoiceValueModelConfiguration,\r\n  createDefinitionModel,\r\n  createRootModel,\r\n  createStringValueModel,\r\n  DefinitionModel,\r\n} from 'sequential-workflow-editor-model';\r\nimport {\r\n  Branches,\r\n  Definition,\r\n  Properties,\r\n  Step,\r\n} from 'sequential-workflow-model';\r\nimport {\r\n  createAccountAttribute,\r\n  createAccountAttributeModel,\r\n  deserializeAccountAttribute,\r\n  getAccountAttributeIcon,\r\n  getAvailableSources,\r\n  isAccountAttributeStep,\r\n  serializeAccountAttribute,\r\n} from './models/account-attribute';\r\nimport {\r\n  ConcatModel,\r\n  createConcat,\r\n  deserializeConcat,\r\n  getConcatIcon,\r\n  isConcatStep,\r\n  serializeConcat,\r\n} from './models/concat';\r\nimport {\r\n  createStatic,\r\n  deserializeStatic,\r\n  getStaticIcon,\r\n  isStaticStep,\r\n  serializeStatic,\r\n  StaticModel,\r\n} from './models/static';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {\r\n  MatSlideToggleChange,\r\n  MatSlideToggleModule,\r\n} from '@angular/material/slide-toggle';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n  TransformReadV2025,\r\n  TransformsV2025ApiCreateTransformRequest,\r\n  TransformsV2025ApiUpdateTransformRequest,\r\n} from 'sailpoint-api-client';\r\nimport { GenericDialogComponent } from '../../generic-dialog/generic-dialog.component';\r\nimport { SailPointSDKService } from '../../sailpoint-sdk.service';\r\nimport { ThemeService } from '../../theme/theme.service';\r\nimport { VelocityEditorDialogComponent } from '../../velocity-editor-dialog/velocity-editor-dialog.component';\r\nimport { AutoSaveService } from '../transform-builder/utils/autosave.service'; // Adjust path as needed\r\nimport {\r\n  createBase64Decode,\r\n  deserializeBase64Decode,\r\n  getBase64DecodeIcon,\r\n  isBase64DecodeStep,\r\n  serializeBase64Decode,\r\n} from './models/base-64-decode';\r\nimport {\r\n  createBase64Encode,\r\n  deserializeBase64Encode,\r\n  getBase64EncodeIcon,\r\n  isBase64EncodeStep,\r\n  serializeBase64Encode,\r\n} from './models/base-64-encode';\r\nimport {\r\n  ConditionalModel,\r\n  createConditional,\r\n  deserializeConditional,\r\n  getConditionalIcon,\r\n  isConditionalStep,\r\n  serializeConditional,\r\n} from './models/conditional';\r\nimport {\r\n  createDateCompare,\r\n  DateCompareModel,\r\n  deserializeDateCompare,\r\n  getDateCompareIcon,\r\n  isDateCompareStep,\r\n  operatorMap,\r\n  serializeDateCompare,\r\n} from './models/date-compare';\r\nimport {\r\n  createDateFormat,\r\n  DateFormatMap,\r\n  DateFormatModel,\r\n  deserializeDateFormat,\r\n  getDateFormatIcon,\r\n  isDateFormatStep,\r\n  serializeDateFormat,\r\n} from './models/date-format';\r\nimport {\r\n  createDateMath,\r\n  DateMathModel,\r\n  deserializeDateMath,\r\n  getDateMathIcon,\r\n  isDateMathStep,\r\n  serializeDateMath,\r\n} from './models/date-math';\r\nimport {\r\n  createDecomposeDiacriticalMarks,\r\n  deserializeDecomposeDiacriticalMarks,\r\n  isDecomposeDiacriticalMarksStep,\r\n  serializeDecomposeDiacriticalMarks,\r\n} from './models/decompose-diacritical-marks';\r\nimport {\r\n  createE164Phone,\r\n  deserializeE164Phone,\r\n  E164PhoneModel,\r\n  getE164PhoneIcon,\r\n  isE164PhoneStep,\r\n  isoAlpha2Map,\r\n  serializeE164Phone,\r\n} from './models/e164-phone';\r\nimport {\r\n  createFirstValid,\r\n  deserializeFirstValid,\r\n  FirstValidModel,\r\n  getFirstValidIcon,\r\n  isFirstValidStep,\r\n  serializeFirstValid,\r\n} from './models/first-valid';\r\nimport {\r\n  createGenerateRandomString,\r\n  deserializeGenerateRandomString,\r\n  GenerateRandomStringModel,\r\n  isGenerateRandomStringStep,\r\n  serializeGenerateRandomString,\r\n} from './models/generate-random-string';\r\nimport {\r\n  createGetEndOfString,\r\n  deserializeGetEndOfString,\r\n  GetEndOfStringModel,\r\n  isGetEndOfStringStep,\r\n  serializeGetEndOfString,\r\n} from './models/get-end-of-string';\r\nimport {\r\n  createGetReferenceIdentityAttribute,\r\n  deserializeGetReferenceIdentityAttribute,\r\n  GetReferenceIdentityAttributeModel,\r\n  isGetReferenceIdentityAttributeStep,\r\n  serializeGetReferenceIdentityAttribute,\r\n} from './models/get-reference-identity-attribute';\r\nimport {\r\n  createIdentityAttribute,\r\n  deserializeIdentityAttribute,\r\n  getIdentityAttributeIcon,\r\n  IdentityAttributeModel,\r\n  isIdentityAttributeStep,\r\n  serializeIdentityAttribute,\r\n} from './models/identity-attribute';\r\nimport {\r\n  createIndexOf,\r\n  deserializeIndexOf,\r\n  IndexOfModel,\r\n  isIndexOfStep,\r\n  serializeIndexOf,\r\n} from './models/index-of';\r\nimport {\r\n  createISO3166,\r\n  deserializeISO3166,\r\n  isISO3166Step,\r\n  iso3166Map,\r\n  ISO3166Model,\r\n  serializeISO3166,\r\n} from './models/iso-3166';\r\nimport {\r\n  createLastIndexOf,\r\n  deserializeLastIndexOf,\r\n  isLastIndexOfStep,\r\n  LastIndexOfModel,\r\n  serializeLastIndexOf,\r\n} from './models/last-index-of';\r\nimport {\r\n  createLeftPad,\r\n  deserializeLeftPad,\r\n  getLeftPadIcon,\r\n  isLeftPadStep,\r\n  LeftPadModel,\r\n  serializeLeftPad,\r\n} from './models/left-pad';\r\nimport {\r\n  createLookup,\r\n  deserializeLookup,\r\n  getLookupIcon,\r\n  isLookupStep,\r\n  serializeLookup,\r\n} from './models/lookup';\r\nimport {\r\n  createLower,\r\n  deserializeLower,\r\n  getLowerIcon,\r\n  isLowerStep,\r\n  serializeLower,\r\n} from './models/lower';\r\nimport {\r\n  createNameNormalizer,\r\n  deserializeNameNormalizer,\r\n  isNameNormalizerStep,\r\n  serializeNameNormalizer,\r\n} from './models/name-normalizer';\r\nimport {\r\n  createRandomAlphaNumeric,\r\n  deserializeRandomAlphaNumeric,\r\n  getRandomAlphaNumericIcon,\r\n  isRandomAlphaNumericStep,\r\n  RandomAlphaNumericModel,\r\n  serializeRandomAlphaNumeric,\r\n} from './models/random-alphanumeric';\r\nimport {\r\n  createRandomNumeric,\r\n  deserializeRandomNumeric,\r\n  isRandomNumericStep,\r\n  RandomNumericModel,\r\n  serializeRandomNumeric,\r\n} from './models/random-numeric';\r\nimport {\r\n  createReference,\r\n  createReferenceStepModel,\r\n  deserializeReference,\r\n  getAvailableTransforms,\r\n  getReferenceIcon,\r\n  isReferenceStep,\r\n  serializeReference,\r\n} from './models/reference';\r\nimport {\r\n  createReplace,\r\n  deserializeReplace,\r\n  getReplaceIcon,\r\n  isReplaceStep,\r\n  serializeReplace,\r\n} from './models/replace';\r\nimport {\r\n  createReplaceAll,\r\n  deserializeReplaceAll,\r\n  getReplaceAllIcon,\r\n  isReplaceAllStep,\r\n  serializeReplaceAll,\r\n} from './models/replace-all';\r\nimport {\r\n  createRFC5646,\r\n  deserializeRFC5646,\r\n  isRFC5646Step,\r\n  serializeRFC5646,\r\n} from './models/rfc-5646';\r\nimport {\r\n  createRightPad,\r\n  deserializeRightPad,\r\n  getRightPadIcon,\r\n  isRightPadStep,\r\n  serializeRightPad,\r\n} from './models/right-pad';\r\nimport {\r\n  createRule,\r\n  createRuleStepModel,\r\n  deserializeRule,\r\n  getAvailableRules,\r\n  isRuleStep,\r\n  serializeRule,\r\n} from './models/rule';\r\nimport {\r\n  createSplit,\r\n  deserializeSplit,\r\n  getSplitIcon,\r\n  isSplitStep,\r\n  serializeSplit,\r\n  SplitModel,\r\n} from './models/split';\r\nimport {\r\n  createString,\r\n  deserializeString,\r\n  getStringIcon,\r\n  isStringStep,\r\n  StringModel,\r\n} from './models/string';\r\nimport {\r\n  createSubString,\r\n  deserializeSubString,\r\n  getSubStringIcon,\r\n  isSubStringStep,\r\n  serializeSubString,\r\n  SubStringModel,\r\n} from './models/substring';\r\nimport {\r\n  createTrim,\r\n  deserializeTrim,\r\n  getTrimIcon,\r\n  isTrimStep,\r\n  serializeTrim,\r\n} from './models/trim';\r\nimport {\r\n  createUpper,\r\n  deserializeUpper,\r\n  getUpperIcon,\r\n  isUpperStep,\r\n  serializeUpper,\r\n} from './models/upper';\r\nimport {\r\n  createUUID,\r\n  deserializeUUID,\r\n  getUUIDIcon,\r\n  isUUIDStep,\r\n  serializeUUID,\r\n} from './models/uuid';\r\nimport { MapEditorDialogComponent } from './utils/map-editor-dialog.component';\r\nimport { TransformPreviewComponent } from './utils/transform-preview.component';\r\n\r\ninterface ThemedDesigner extends Designer {\r\n  setTheme?: (theme: 'dark' | 'light') => void;\r\n}\r\n\r\ninterface StepDefinition {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  componentType: string;\r\n  properties: Record<string, any>;\r\n  sequence?: StepDefinition[];\r\n  branches?: Record<string, StepDefinition[]>;\r\n}\r\n\r\nexport interface MyDefinition extends Definition {\r\n  properties: {\r\n    name: string;\r\n    description: string;\r\n  };\r\n}\r\n\r\nexport const rootModel = createRootModel<MyDefinition>((root) => {\r\n  root\r\n    .property('name')\r\n    .value(\r\n      createStringValueModel({\r\n        defaultValue: 'lorem ipsum',\r\n      })\r\n    )\r\n    .label('Transform Name');\r\n});\r\n\r\nfunction createDefinition(): Definition {\r\n  return {\r\n    properties: {\r\n      name: 'Transform Name',\r\n    },\r\n    sequence: [createAccountAttribute()],\r\n  };\r\n}\r\n\r\nfunction createMyDefinitionModel(configuration: {\r\n  sources: string[];\r\n  transforms: string[];\r\n  rules: string[];\r\n}): DefinitionModel<Definition> {\r\n  return createDefinitionModel((model) => {\r\n    model.root(rootModel);\r\n    model.steps([\r\n      createAccountAttributeModel(configuration.sources),\r\n      ConcatModel,\r\n      ConditionalModel,\r\n      DateCompareModel,\r\n      DateFormatModel,\r\n      DateMathModel,\r\n      E164PhoneModel,\r\n      FirstValidModel,\r\n      GenerateRandomStringModel,\r\n      GetEndOfStringModel,\r\n      GetReferenceIdentityAttributeModel,\r\n      IdentityAttributeModel,\r\n      IndexOfModel,\r\n      ISO3166Model,\r\n      LastIndexOfModel,\r\n      LeftPadModel,\r\n      RandomAlphaNumericModel,\r\n      RandomNumericModel,\r\n      createReferenceStepModel(configuration.transforms),\r\n      createRuleStepModel(configuration.rules),\r\n      StaticModel,\r\n      StringModel,\r\n      SplitModel,\r\n      SubStringModel,\r\n    ]);\r\n  });\r\n}\r\n\r\nexport const serializeStep = (step: Step) => {\r\n  if (isAccountAttributeStep(step)) {\r\n    return serializeAccountAttribute(step);\r\n  } else if (isConcatStep(step)) {\r\n    return serializeConcat(step);\r\n  } else if (isStaticStep(step)) {\r\n    return serializeStatic(step);\r\n  } else if (isStringStep(step)) {\r\n    return step.properties.value;\r\n  } else if (isConditionalStep(step)) {\r\n    return serializeConditional(step);\r\n  } else if (isDateCompareStep(step)) {\r\n    return serializeDateCompare(step);\r\n  } else if (isDateFormatStep(step)) {\r\n    return serializeDateFormat(step);\r\n  } else if (isDateMathStep(step)) {\r\n    return serializeDateMath(step);\r\n  } else if (isFirstValidStep(step)) {\r\n    return serializeFirstValid(step);\r\n  } else if (isDecomposeDiacriticalMarksStep(step)) {\r\n    return serializeDecomposeDiacriticalMarks(step);\r\n  } else if (isE164PhoneStep(step)) {\r\n    return serializeE164Phone(step);\r\n  } else if (isGenerateRandomStringStep(step)) {\r\n    return serializeGenerateRandomString(step);\r\n  } else if (isGetEndOfStringStep(step)) {\r\n    return serializeGetEndOfString(step);\r\n  } else if (isGetReferenceIdentityAttributeStep(step)) {\r\n    return serializeGetReferenceIdentityAttribute(step);\r\n  } else if (isIdentityAttributeStep(step)) {\r\n    return serializeIdentityAttribute(step);\r\n  } else if (isIndexOfStep(step)) {\r\n    return serializeIndexOf(step);\r\n  } else if (isISO3166Step(step)) {\r\n    return serializeISO3166(step);\r\n  } else if (isLastIndexOfStep(step)) {\r\n    return serializeLastIndexOf(step);\r\n  } else if (isLeftPadStep(step)) {\r\n    return serializeLeftPad(step);\r\n  } else if (isLookupStep(step)) {\r\n    return serializeLookup(step);\r\n  } else if (isLowerStep(step)) {\r\n    return serializeLower(step);\r\n  } else if (isNameNormalizerStep(step)) {\r\n    return serializeNameNormalizer(step);\r\n  } else if (isRandomAlphaNumericStep(step)) {\r\n    return serializeRandomAlphaNumeric(step);\r\n  } else if (isRandomNumericStep(step)) {\r\n    return serializeRandomNumeric(step);\r\n  } else if (isReferenceStep(step)) {\r\n    return serializeReference(step);\r\n  } else if (isReplaceAllStep(step)) {\r\n    return serializeReplaceAll(step);\r\n  } else if (isReplaceStep(step)) {\r\n    return serializeReplace(step);\r\n  } else if (isRFC5646Step(step)) {\r\n    return serializeRFC5646(step);\r\n  } else if (isRightPadStep(step)) {\r\n    return serializeRightPad(step);\r\n  } else if (isRuleStep(step)) {\r\n    return serializeRule(step);\r\n  } else if (isSplitStep(step)) {\r\n    return serializeSplit(step);\r\n  } else if (isSubStringStep(step)) {\r\n    return serializeSubString(step);\r\n  } else if (isTrimStep(step)) {\r\n    return serializeTrim(step);\r\n  } else if (isUpperStep(step)) {\r\n    return serializeUpper(step);\r\n  } else if (isUUIDStep(step)) {\r\n    return serializeUUID(step);\r\n  } else if (isBase64EncodeStep(step)) {\r\n    return serializeBase64Encode(step);\r\n  } else if (isBase64DecodeStep(step)) {\r\n    return serializeBase64Decode(step);\r\n  }\r\n  throw new Error(`Unsupported step type: ${step.type}`);\r\n};\r\n\r\nexport function createDefinitionFromTransform(data: any): Definition {\r\n  return {\r\n    properties: {\r\n      name: data.name,\r\n      description: data.attributes.description || '',\r\n    },\r\n    sequence: [deserializeToStep(data)],\r\n  };\r\n}\r\n\r\ntype Deserializer = (data: any) => Step;\r\n\r\nconst deserializers: Record<string, Deserializer> = {\r\n  accountAttribute: deserializeAccountAttribute,\r\n  concat: deserializeConcat,\r\n  static: deserializeStatic,\r\n  conditional: deserializeConditional,\r\n  dateCompare: deserializeDateCompare,\r\n  dateFormat: deserializeDateFormat,\r\n  dateMath: deserializeDateMath,\r\n  firstValid: deserializeFirstValid,\r\n  decomposeDiacriticalMarks: deserializeDecomposeDiacriticalMarks,\r\n  e164phone: deserializeE164Phone,\r\n  generateRandomString: deserializeGenerateRandomString,\r\n  getEndOfString: deserializeGetEndOfString,\r\n  getReferenceIdentityAttribute: deserializeGetReferenceIdentityAttribute,\r\n  identityAttribute: deserializeIdentityAttribute,\r\n  indexOf: deserializeIndexOf,\r\n  iso3166: deserializeISO3166,\r\n  lastIndexOf: deserializeLastIndexOf,\r\n  leftPad: deserializeLeftPad,\r\n  lookup: deserializeLookup,\r\n  lower: deserializeLower,\r\n  nameNormailizer: deserializeNameNormalizer,\r\n  randomAlphaNumeric: deserializeRandomAlphaNumeric,\r\n  randomNumeric: deserializeRandomNumeric,\r\n  reference: deserializeReference,\r\n  replaceAll: deserializeReplaceAll,\r\n  replace: deserializeReplace,\r\n  rfc5646: deserializeRFC5646,\r\n  rightPad: deserializeRightPad,\r\n  rule: deserializeRule,\r\n  split: deserializeSplit,\r\n  substring: deserializeSubString,\r\n  trim: deserializeTrim,\r\n  upper: deserializeUpper,\r\n  uuid: deserializeUUID,\r\n  base64Encode: deserializeBase64Encode,\r\n  base64Decode: deserializeBase64Decode,\r\n};\r\n\r\nexport function deserializeToStep(data: any): Step {\r\n  if (typeof data === 'string') {\r\n    return deserializeString(data);\r\n  }\r\n\r\n  const deserializer = deserializers[data.type];\r\n  if (deserializer) {\r\n    return deserializer(data);\r\n  }\r\n\r\n  throw new Error(`Unsupported step type: ${data.type}`);\r\n}\r\n@Component({\r\n  selector: 'app-transform-builder',\r\n  standalone: true,\r\n  imports: [\r\n    SequentialWorkflowDesignerModule,\r\n    CommonModule,\r\n    MatFormField,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatBadgeModule,\r\n    MatTooltipModule,\r\n  ],\r\n  templateUrl: './transform-builder.component.html',\r\n  styleUrl: './transform-builder.component.scss',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TransformBuilderComponent implements OnInit, OnDestroy {\r\n  @Input() transform?: TransformReadV2025;\r\n\r\n  private destroy$ = new Subject<void>();\r\n  private autoSaveSubject = new Subject<Definition>();\r\n\r\n  private designer?: Designer;\r\n  public validatorConfiguration?: ValidatorConfiguration;\r\n  public stepEditorProvider?: StepEditorProvider;\r\n  public rootEditorProvider?: RootEditorProvider;\r\n  public definition?: Definition;\r\n  public definitionJSON?: string;\r\n  public isToolboxCollapsed = false;\r\n  public isEditorCollapsed = false;\r\n  private defaultStepEditorProvider?: StepEditorProvider;\r\n  public isValid?: boolean;\r\n  public customInputDate?: string;\r\n  public preview?: string;\r\n  public isReadonly = false;\r\n  public definitionModel?: DefinitionModel<Definition>;\r\n  public isReady = false;\r\n  public sourceMap = new Map<string, string>();\r\n\r\n  // Auto-save related properties\r\n  public isSaving = false;\r\n  public isSyncing = false;\r\n  public lastAutoSave?: string;\r\n  public hasUnsavedChanges = false;\r\n  public isNewTransform = false;\r\n\r\n  private themeSub!: Subscription;\r\n  public isDarkTheme = false;\r\n  public showDesigner = true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private editorDialog: MatDialog,\r\n    private sdk: SailPointSDKService,\r\n    private autoSaveService: AutoSaveService,\r\n    private snackBar: MatSnackBar,\r\n    private theme: ThemeService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  get designerTheme(): 'dark' | 'light' {\r\n    return this.isDarkTheme ? 'dark' : 'light';\r\n  }\r\n\r\n  getDefaultFallbackIcon(): string {\r\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n      <path fill=\"gray\" d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\r\n    </svg>`;\r\n    return `data:image/svg+xml,${encodeURIComponent(svg.trim())}`;\r\n  }\r\n\r\n  public readonly stepsConfiguration: StepsConfiguration = {\r\n    iconUrlProvider: (componentType, type) => {\r\n      const iconMap: Record<string, () => string> = {\r\n        accountAttribute: getAccountAttributeIcon,\r\n        concat: getConcatIcon,\r\n        firstValid: getFirstValidIcon,\r\n        static: getStaticIcon,\r\n        conditional: getConditionalIcon,\r\n        dateCompare: getDateCompareIcon,\r\n        dateFormat: getDateFormatIcon,\r\n        dateMath: getDateMathIcon,\r\n        e164phone: getE164PhoneIcon,\r\n        identityAttribute: getIdentityAttributeIcon,\r\n        lookup: getLookupIcon,\r\n        leftPad: getLeftPadIcon,\r\n        randomAlphaNumeric: getRandomAlphaNumericIcon,\r\n        randomNumeric: getRandomAlphaNumericIcon,\r\n        reference: getReferenceIcon,\r\n        replaceAll: getReplaceAllIcon,\r\n        replace: getReplaceIcon,\r\n        rightPad: getRightPadIcon,\r\n        split: getSplitIcon,\r\n        substring: getSubStringIcon,\r\n        trim: getTrimIcon,\r\n        lower: getLowerIcon,\r\n        upper: getUpperIcon,\r\n        uuid: getUUIDIcon,\r\n        string: getStringIcon,\r\n        base64Encode: getBase64EncodeIcon,\r\n        base64Decode: getBase64DecodeIcon,\r\n      };\r\n\r\n      const iconFn = iconMap[type];\r\n      if (iconFn) {\r\n        return iconFn();\r\n      }\r\n\r\n      return this.getDefaultFallbackIcon();\r\n    },\r\n\r\n    canInsertStep: (step, targetSequence, targetIndex) => {\r\n      const stepType = step.type;\r\n\r\n      // Check if trying to insert after a single task type step\r\n      if (targetIndex > 0) {\r\n        const previousStep = targetSequence[targetIndex - 1];\r\n        if (previousStep.componentType === 'task') {\r\n          this.openMessageDialog(\r\n            `Cannot insert step of type \"${stepType}\" directly after a transform that does not take user input.`,\r\n            'Cannot insert step'\r\n          );\r\n          return false; // Cannot insert after these step types\r\n        }\r\n\r\n        // Existing logic: Check for same type directly above\r\n        if (previousStep.type === stepType) {\r\n          this.openMessageDialog(\r\n            `Cannot insert step of type \"${stepType}\" directly after another step of the same type.`,\r\n            'Cannot insert step Below'\r\n          );\r\n          return false; // Same type directly above\r\n        }\r\n      }\r\n\r\n      // Check the step that would be directly below (next)\r\n      if (targetIndex < targetSequence.length) {\r\n        const nextStep = targetSequence[targetIndex];\r\n\r\n        if (\r\n          (nextStep.componentType === 'task' ||\r\n            nextStep.componentType === 'switch') &&\r\n          step.componentType === 'task'\r\n        ) {\r\n          this.openMessageDialog(\r\n            `Cannot insert transform of type \"${stepType}\" directly before another transform, as it does not take user input.`,\r\n            'Cannot insert transform'\r\n          );\r\n          return false; // Cannot insert after these step types\r\n        }\r\n\r\n        if (nextStep.type === stepType) {\r\n          this.openMessageDialog(\r\n            `Cannot insert step of type \"${stepType}\" directly after another step of the same type.`,\r\n            'Cannot insert step Above'\r\n          );\r\n          return false; // Same type directly below\r\n        }\r\n      }\r\n\r\n      return true; // Allow insertion\r\n    },\r\n\r\n    canMoveStep: (sourceSequence, step, targetSequence, targetIndex) => {\r\n      const stepType = step.type;\r\n\r\n      console.log(\r\n        `Checking if we can move step of type \"${stepType}\" at index ${targetIndex}`\r\n      );\r\n\r\n      // Check if trying to insert after a single task type step\r\n      if (targetIndex > 0) {\r\n        const previousStep = targetSequence[targetIndex - 1];\r\n        if (previousStep.componentType === 'task') {\r\n          this.openMessageDialog(\r\n            `Cannot move step of type \"${stepType}\" directly after a transform that does not take user input.`,\r\n            'Cannot move step'\r\n          );\r\n          return false; // Cannot insert after these step types\r\n        }\r\n\r\n        // Existing logic: Check for same type directly above\r\n        if (previousStep.type === stepType) {\r\n          this.openMessageDialog(\r\n            `Cannot move step of type \"${stepType}\" directly after another step of the same type.`,\r\n            'Cannot move step Below'\r\n          );\r\n          return false; // Same type directly above\r\n        }\r\n      }\r\n\r\n      // Check the step that would be directly below (next)\r\n      if (targetIndex < targetSequence.length) {\r\n        const nextStep = targetSequence[targetIndex];\r\n\r\n        if (\r\n          (nextStep.componentType === 'task' ||\r\n            nextStep.componentType === 'switch') &&\r\n          step.componentType === 'task'\r\n        ) {\r\n          this.openMessageDialog(\r\n            `Cannot move transform of type \"${stepType}\" directly before another transform, as it does not take user input.`,\r\n            'Cannot move transform'\r\n          );\r\n          return false; // Cannot insert after these step types\r\n        }\r\n\r\n        if (nextStep.type === stepType) {\r\n          this.openMessageDialog(\r\n            `Cannot move step of type \"${stepType}\" directly after another step of the same type.`,\r\n            'Cannot move step Above'\r\n          );\r\n          return false; // Same type directly below\r\n        }\r\n      }\r\n\r\n      return true; // Allow insertion\r\n    },\r\n  };\r\n\r\n  public readonly toolboxConfiguration: ToolboxConfiguration = {\r\n    groups: [\r\n      {\r\n        name: 'Transforms',\r\n        steps: [\r\n          createAccountAttribute(),\r\n          createBase64Encode(),\r\n          createBase64Decode(),\r\n          createConcat(),\r\n          createConditional(),\r\n          createDateCompare(),\r\n          createDateFormat(),\r\n          createDateMath(),\r\n          createDecomposeDiacriticalMarks(),\r\n          createE164Phone(),\r\n          createFirstValid(),\r\n          createGenerateRandomString(),\r\n          createGetEndOfString(),\r\n          createGetReferenceIdentityAttribute(),\r\n          createIdentityAttribute(),\r\n          createIndexOf(),\r\n          createISO3166(),\r\n          createLastIndexOf(),\r\n          createLeftPad(),\r\n          createLookup(),\r\n          createLower(),\r\n          createNameNormalizer(),\r\n          createRandomAlphaNumeric(),\r\n          createRandomNumeric(),\r\n          createReference(),\r\n          createReplaceAll(),\r\n          createReplace(),\r\n          createRFC5646(),\r\n          createRightPad(),\r\n          createRule(),\r\n          createSplit(),\r\n          createStatic(),\r\n          createSubString(),\r\n          createTrim(),\r\n          createUpper(),\r\n          createUUID(),\r\n        ],\r\n      },\r\n      {\r\n        name: 'Primitives',\r\n        steps: [createString()],\r\n      },\r\n    ],\r\n  };\r\n\r\n  public ngOnDestroy(): void {\r\n    this.themeSub.unsubscribe();\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.themeSub = this.theme.isDark$.subscribe((dark) => {\r\n      this.isDarkTheme = dark;\r\n      this.showDesigner = false;\r\n      setTimeout(() => {\r\n        this.showDesigner = true;\r\n        this.cdr.detectChanges();\r\n      });\r\n    });\r\n\r\n    if (!this.transform) {\r\n      this.definition = createDefinition();\r\n      this.isNewTransform = true;\r\n    } else {\r\n      this.definition = createDefinitionFromTransform(this.transform);\r\n      this.isReadonly = false;\r\n    }\r\n\r\n    this.updateDefinitionJSON();\r\n\r\n    void (async () => {\r\n      try {\r\n        const [sourcesResult, transforms, rules] = await Promise.all([\r\n          getAvailableSources(this.sdk),\r\n          getAvailableTransforms(this.sdk),\r\n          getAvailableRules(this.sdk),\r\n        ]);\r\n\r\n        this.sourceMap = sourcesResult.map;\r\n\r\n        const model = createMyDefinitionModel({\r\n          sources: sourcesResult.names,\r\n          transforms,\r\n          rules,\r\n        });\r\n        if (!model) {\r\n          throw new Error('Failed to create DefinitionModel.');\r\n        }\r\n\r\n        this.definitionModel = model;\r\n\r\n        const editorProvider = EditorProvider.create(this.definitionModel, {\r\n          uidGenerator: () => Uid.next(),\r\n        });\r\n\r\n        this.rootEditorProvider = editorProvider.createRootEditorProvider();\r\n        this.stepEditorProvider = editorProvider.createStepEditorProvider();\r\n\r\n        this.validatorConfiguration = {\r\n          root: editorProvider.createRootValidator(),\r\n          step: editorProvider.createStepValidator(),\r\n        };\r\n\r\n        this.isReady = true;\r\n\r\n        if (this.definition) {\r\n          this.performAutoSave(this.definition);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed during ngOnInit async setup:', error);\r\n      }\r\n    })();\r\n  }\r\n\r\n  private performAutoSave(definition: Definition): void {\r\n    if (!definition?.sequence?.[0]) return;\r\n\r\n    this.isSaving = true;\r\n\r\n    try {\r\n      const serializedTransform = serializeStep(definition.sequence[0]);\r\n      const transformId = this.isNewTransform\r\n        ? 'new_transform'\r\n        : this.transform?.id || 'unknown';\r\n      const definitionName = definition.properties?.name;\r\n      const transformName =\r\n        typeof definitionName === 'string'\r\n          ? definitionName\r\n          : 'Untitled Transform';\r\n\r\n      this.autoSaveService.autoSave(\r\n        transformId,\r\n        transformName,\r\n        serializedTransform,\r\n        this.isNewTransform,\r\n        this.transform // Store original cloud version for comparison\r\n      );\r\n    } catch (error) {\r\n      console.error('Auto-save failed:', error);\r\n      this.snackBar.open('Auto-save failed', 'Close', { duration: 3000 });\r\n    } finally {\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n  public async saveToCloud(): Promise<void> {\r\n    if (!this.definition?.sequence?.[0]) {\r\n      this.snackBar.open('Nothing to save', 'Close', { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    this.isSyncing = true;\r\n\r\n    try {\r\n      let serializedTransform = serializeStep(this.definition.sequence[0]);\r\n\r\n      let newTransform: TransformReadV2025 =\r\n        serializedTransform as TransformReadV2025;\r\n\r\n      const definitionName = this.definition?.properties?.name;\r\n      newTransform.name = String(\r\n        typeof definitionName === 'string' ? definitionName : newTransform.name\r\n      );\r\n\r\n      console.log('Saving transform to cloud:', newTransform);\r\n\r\n      // If the transform already exists, update it\r\n      if (this.transform?.id) {\r\n        const transformUpdateRequest: TransformsV2025ApiUpdateTransformRequest =\r\n          {\r\n            transformV2025: newTransform,\r\n            id: this.transform?.id,\r\n          };\r\n\r\n        await this.sdk.updateTransform(transformUpdateRequest);\r\n\r\n        this.autoSaveService.clearLocalSave(this.transform.id);\r\n\r\n        this.snackBar.open(\r\n          `Transform \"${newTransform.name}\" updated successfully`,\r\n          'Close',\r\n          { duration: 3000 }\r\n        );\r\n      } else {\r\n        // If it's a new transform, create it\r\n        const createTransformRequest: TransformsV2025ApiCreateTransformRequest =\r\n          {\r\n            transformV2025: newTransform,\r\n          };\r\n\r\n        const response = await this.sdk.createTransform(createTransformRequest);\r\n\r\n        this.transform = response.data;\r\n        this.isNewTransform = false;\r\n        this.autoSaveService.clearLocalSave('new_transform', true);\r\n        this.snackBar.open('Transform created successfully', 'Close', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n\r\n      this.hasUnsavedChanges = false;\r\n    } catch (error) {\r\n      console.error('Save to cloud failed:', error);\r\n      const errorMessage =\r\n        error instanceof Error ? error.message : 'Unknown error';\r\n      this.snackBar.open(`Failed to sync: ${errorMessage}`, 'Close', {\r\n        duration: 5000,\r\n      });\r\n    } finally {\r\n      this.isSyncing = false;\r\n    }\r\n  }\r\n\r\n  public restoreFromCloud(): void {\r\n    if (!this.transform) return;\r\n\r\n    const shouldRestore = window.confirm(\r\n      'This will discard all local changes and restore the transform from the cloud. Are you sure?'\r\n    );\r\n\r\n    if (shouldRestore) {\r\n      this.definition = createDefinitionFromTransform(this.transform);\r\n      this.updateDefinitionJSON();\r\n      this.hasUnsavedChanges = false;\r\n\r\n      if (this.transform.id) {\r\n        this.autoSaveService.clearLocalSave(this.transform.id);\r\n      }\r\n\r\n      this.snackBar.open('Restored from cloud', 'Close', { duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public discardLocalChanges(): void {\r\n    const shouldDiscard = window.confirm(\r\n      'This will discard all local changes. Are you sure?'\r\n    );\r\n\r\n    if (shouldDiscard) {\r\n      const transformId = this.isNewTransform\r\n        ? 'new_transform'\r\n        : this.transform?.id || 'unknown';\r\n      this.autoSaveService.clearLocalSave(transformId, this.isNewTransform);\r\n\r\n      if (this.transform) {\r\n        this.definition = createDefinitionFromTransform(this.transform);\r\n        this.updateDefinitionJSON();\r\n      } else {\r\n        this.definition = createDefinition();\r\n        this.updateDefinitionJSON();\r\n      }\r\n\r\n      this.hasUnsavedChanges = false;\r\n      this.snackBar.open('Local changes discarded', 'Close', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  public onDesignerReady(designer: ThemedDesigner) {\r\n    this.designer = designer;\r\n    this.updateIsValid();\r\n\r\n    // Safely apply initial theme\r\n    designer.setTheme?.(this.isDarkTheme ? 'dark' : 'light');\r\n  }\r\n\r\n  public onDefinitionChanged(definition: Definition) {\r\n    console.log('onDefinitionChanged', definition);\r\n    this.definition = definition;\r\n    this.updateDefinitionJSON();\r\n\r\n    if (this.transform?.id) {\r\n      const parsedDef = JSON.parse(this.definitionJSON ?? '{}');\r\n\r\n      const hasChanges = this.autoSaveService.hasUnsavedChanges(\r\n        this.transform.id,\r\n        parsedDef\r\n      );\r\n\r\n      this.hasUnsavedChanges = hasChanges;\r\n    } else {\r\n      this.hasUnsavedChanges = false;\r\n    }\r\n\r\n    this.autoSaveSubject.next(definition);\r\n  }\r\n\r\n  private updateDefinitionJSON() {\r\n    const transformedResult = this.definition?.sequence?.[0]\r\n      ? serializeStep(this.definition.sequence[0])\r\n      : undefined;\r\n    this.definitionJSON = JSON.stringify(transformedResult, null, 2);\r\n  }\r\n\r\n  public toggleToolboxClicked() {\r\n    this.isToolboxCollapsed = !this.isToolboxCollapsed;\r\n  }\r\n\r\n  public toggleEditorClicked() {\r\n    this.isEditorCollapsed = !this.isEditorCollapsed;\r\n  }\r\n  private updateIsValid() {\r\n    this.isValid = this.designer?.isValid();\r\n  }\r\n\r\n  public toggleReadonlyClicked() {\r\n    this.isReadonly = !this.isReadonly;\r\n  }\r\n\r\n  public onSelectedStepIdChanged(selectedStepId: string | null) {\r\n    console.log('onSelectedStepIdChanged', selectedStepId);\r\n    this.isEditorCollapsed = false;\r\n  }\r\n\r\n  objectKeys = Object.keys;\r\n\r\n  isBoolean(value: any): boolean {\r\n    return typeof value === 'boolean';\r\n  }\r\n\r\n  isNumber(value: any, key: string, stepType: string): boolean {\r\n    if (!this.definitionModel) return false;\r\n\r\n    const stepDef = this.definitionModel.steps[stepType];\r\n    if (!stepDef?.properties) return false;\r\n    const propDef = stepDef.properties.find(\r\n      (p) => p.path.parts[p.path.parts.length - 1] === key\r\n    );\r\n\r\n    if (propDef?.value.id === 'number') return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  getHintForProperty(stepType: string, key: string): string | undefined {\r\n    if (!this.definitionModel) return undefined;\r\n\r\n    const stepDef = this.definitionModel.steps[stepType];\r\n    if (!stepDef?.properties) return undefined;\r\n    const propDef = stepDef.properties.find(\r\n      (p) => p.path.parts[p.path.parts.length - 1] === key\r\n    );\r\n\r\n    return propDef?.hint;\r\n  }\r\n\r\n  getLabelForProperty(stepType: string, key: string): string | undefined {\r\n    if (!this.definitionModel) return undefined;\r\n\r\n    const stepDef = this.definitionModel.steps[stepType];\r\n    if (!stepDef?.properties) return undefined;\r\n    const propDef = stepDef.properties.find(\r\n      (p) => p.path.parts[p.path.parts.length - 1] === key\r\n    );\r\n\r\n    return propDef?.label;\r\n  }\r\n\r\n  isMap(value: any): value is Record<string, any> {\r\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\r\n  }\r\n\r\n  editMap(\r\n    properties: Properties,\r\n    name: string,\r\n    context: StepEditorContext\r\n  ): void {\r\n    const currentMap = properties[name];\r\n\r\n    const mapObject =\r\n      currentMap instanceof Map ? Object.fromEntries(currentMap) : currentMap;\r\n\r\n    const dialogRef = this.dialog.open(MapEditorDialogComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      maxWidth: 'none',\r\n      data: { map: mapObject },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (this.isStringRecord(result)) {\r\n        properties[name] = new Map(Object.entries(result));\r\n        context.notifyPropertiesChanged();\r\n      }\r\n    });\r\n  }\r\n\r\n  isStringRecord(value: unknown): value is Record<string, string> {\r\n    return (\r\n      typeof value === 'object' &&\r\n      value !== null &&\r\n      !Array.isArray(value) &&\r\n      Object.values(value).every((v) => typeof v === 'string')\r\n    );\r\n  }\r\n\r\n  togglePreview(): void {\r\n    const selectedStepId = this.designer?.getSelectedStepId();\r\n    const definition = this.designer?.getDefinition();\r\n\r\n    let serializedTransform: string | undefined;\r\n\r\n    if (selectedStepId) {\r\n      // Serialize selected step\r\n      if (!definition) {\r\n        window.alert('Definition not found');\r\n        return;\r\n      }\r\n      const selectedStep = this.findStepById(definition, selectedStepId);\r\n\r\n      if (!selectedStep) {\r\n        window.alert('Selected step not found');\r\n        return;\r\n      }\r\n\r\n      serializedTransform = JSON.stringify(\r\n        serializeStep(selectedStep),\r\n        null,\r\n        2\r\n      );\r\n    } else {\r\n      // Serialize whole definition\r\n      if (definition?.sequence[0]) {\r\n        serializedTransform = JSON.stringify(\r\n          serializeStep(definition.sequence[0]),\r\n          null,\r\n          2\r\n        );\r\n      } else {\r\n        serializedTransform = undefined;\r\n      }\r\n    }\r\n\r\n    this.dialog.open(TransformPreviewComponent, {\r\n      width: '70%',\r\n      height: '75%',\r\n      maxWidth: 'none',\r\n      data: { sdkService: this.sdk, transformDefinition: serializedTransform },\r\n    });\r\n  }\r\n\r\n  viewTransformDefinition(): void {\r\n    const selectedStepId = this.designer?.getSelectedStepId();\r\n    const definition = this.designer?.getDefinition();\r\n\r\n    let serializedTransform: string | undefined;\r\n\r\n    if (selectedStepId) {\r\n      if (!definition) {\r\n        this.openMessageDialog('Definition not found', 'Error');\r\n        return;\r\n      }\r\n\r\n      const selectedStep = this.findStepById(definition, selectedStepId);\r\n\r\n      if (!selectedStep) {\r\n        this.openMessageDialog('Selected step not found', 'Error');\r\n        return;\r\n      }\r\n\r\n      serializedTransform = JSON.stringify(\r\n        serializeStep(selectedStep),\r\n        null,\r\n        2\r\n      );\r\n    } else if (definition?.sequence[0]) {\r\n      serializedTransform = JSON.stringify(\r\n        serializeStep(definition.sequence[0]),\r\n        null,\r\n        2\r\n      );\r\n    }\r\n\r\n    if (!serializedTransform) {\r\n      this.openMessageDialog('No transform found to display.', 'Warning');\r\n      return;\r\n    }\r\n\r\n    this.dialog.open(GenericDialogComponent, {\r\n      minWidth: '800px',\r\n      data: {\r\n        title: 'Transform Definition',\r\n        message: serializedTransform,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Basic findStepById function\r\n  findStepById(definition: Definition, stepId: string): StepDefinition | null {\r\n    function searchInSequence(\r\n      sequence: StepDefinition[]\r\n    ): StepDefinition | null {\r\n      for (const step of sequence) {\r\n        // Direct match\r\n        if (step.id === stepId) {\r\n          return step;\r\n        }\r\n\r\n        // Search in nested sequence\r\n        if (step.sequence && Array.isArray(step.sequence)) {\r\n          const found = searchInSequence(step.sequence);\r\n          if (found) return found;\r\n        }\r\n\r\n        // Search in branches\r\n        if (step.branches && typeof step.branches === 'object') {\r\n          for (const branchKey in step.branches) {\r\n            const branch = step.branches[branchKey];\r\n            if (Array.isArray(branch)) {\r\n              const found = searchInSequence(branch);\r\n              if (found) return found;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    return searchInSequence(definition.sequence);\r\n  }\r\n\r\n  getBranchNames(branches: Record<string, any[]>): string[] {\r\n    return Object.keys(branches || {});\r\n  }\r\n\r\n  public openVelocityEditor(\r\n    properties: Properties,\r\n    name: string,\r\n    event: Event,\r\n    context: StepEditorContext\r\n  ) {\r\n    this.isReadonly = true; // Disable editing while opening editor\r\n\r\n    console.log('openVelocityEditor', properties, name, event);\r\n    const currentValue = properties[name] || '';\r\n    const dialogReference = this.editorDialog.open(\r\n      VelocityEditorDialogComponent,\r\n      {\r\n        autoFocus: true,\r\n        restoreFocus: true,\r\n        role: 'dialog',\r\n        width: '90vw',\r\n        maxWidth: '1000px',\r\n        height: '80vh',\r\n        maxHeight: '800px',\r\n        data: {\r\n          code: currentValue,\r\n          title: 'Edit Velocity Code',\r\n          readonly: false,\r\n        },\r\n        disableClose: true,\r\n      }\r\n    );\r\n\r\n    dialogReference.afterClosed().subscribe((result) => {\r\n      this.isReadonly = false; // Re-enable editing after editor is closed\r\n      console.log('Velocity editor closed with result:', result);\r\n      if (result !== undefined && result.saved) {\r\n        properties[name] = result.code;\r\n        console.log('Updated properties:', properties);\r\n        context.notifyPropertiesChanged();\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateProperty(\r\n    properties: Properties,\r\n    name: string,\r\n    event: Event | MatSlideToggleChange,\r\n    context: RootEditorContext | StepEditorContext\r\n  ) {\r\n    console.log('updateProperty', properties, name, event);\r\n    if (event instanceof MatSlideToggleChange) {\r\n      properties[name] = event.checked;\r\n    } else if (event instanceof InputEvent) {\r\n      properties[name] = (event.target as HTMLInputElement).value;\r\n    }\r\n    context.notifyPropertiesChanged();\r\n  }\r\n\r\n  public updateNumericProperty(\r\n    properties: Properties,\r\n    name: string,\r\n    event: Event | MatSlideToggleChange,\r\n    context: RootEditorContext | StepEditorContext\r\n  ) {\r\n    console.log(event);\r\n    if (event instanceof InputEvent) {\r\n      properties[name] = parseFloat((event.target as HTMLInputElement).value);\r\n    }\r\n    context.notifyPropertiesChanged();\r\n  }\r\n\r\n  public removeBranch(\r\n    branches: Branches,\r\n    index: number,\r\n    event: Event,\r\n    context: StepEditorContext\r\n  ) {\r\n    console.log('removeBranch', branches, index);\r\n    this.deleteBranchAtIndex(branches, index);\r\n    console.log('branches', branches);\r\n    context.notifyChildrenChanged();\r\n  }\r\n\r\n  public deleteBranchAtIndex<T>(obj: Record<string, T[]>, index: number): void {\r\n    const keys = Object.keys(obj);\r\n    if (index < 0 || index >= keys.length) return;\r\n\r\n    const keyToDelete = keys[index];\r\n    delete obj[keyToDelete];\r\n  }\r\n\r\n  public renameBranchAtIndex<T>(\r\n    obj: Record<string, T[]>,\r\n    oldKey: string,\r\n    newKey: string,\r\n    context: StepEditorContext\r\n  ): void {\r\n    // 1) Same validation as before\r\n    const validBranchName = /^(?!\\d)\\S+$/;\r\n    if (!validBranchName.test(newKey)) {\r\n      this.snackBar.open(\r\n        'Branch names must not start with a number and may not contain spaces.',\r\n        'Close',\r\n        { duration: 5000 }\r\n      );\r\n      return;\r\n    }\r\n    const branchKeys = Object.keys(obj);\r\n    if (!branchKeys.includes(oldKey) || oldKey === newKey) {\r\n      return;\r\n    }\r\n    if (branchKeys.includes(newKey)) {\r\n      this.snackBar.open(\r\n        `A branch named \"${newKey}\" already exists.`,\r\n        'Close',\r\n        { duration: 5000 }\r\n      );\r\n      return;\r\n    }\r\n\r\n    // 2) Grab the existing keys in order, and their corresponding values\r\n    const keys = Object.keys(obj);\r\n    const values = keys.map((k) => obj[k]);\r\n\r\n    // 3) Build a new array of [key,value] pairs, swapping only your renamed one\r\n    const updatedEntries: Array<[string, T[]]> = keys.map((k, i) =>\r\n      k === oldKey ? [newKey, values[i]] : [k, values[i]]\r\n    );\r\n\r\n    // 4) Clear the original object\r\n    for (const k of keys) {\r\n      delete obj[k];\r\n    }\r\n\r\n    // 5) Re‑insert each entry in the exact same order\r\n    for (const [k, v] of updatedEntries) {\r\n      obj[k] = v;\r\n    }\r\n\r\n    // 6) Notify the designer to re‑render\r\n    context.notifyChildrenChanged();\r\n  }\r\n\r\n  public addBranch(branches: Branches, context: StepEditorContext) {\r\n    const index = Object.keys(branches || {}).length + 1;\r\n    branches['New_Branch_' + index] = [];\r\n    context.notifyChildrenChanged();\r\n  }\r\n\r\n  public getChoicesForProperty(stepType: string, key: string): string[] | null {\r\n    if (!this.definitionModel) return null;\r\n\r\n    const stepDef = this.definitionModel.steps[stepType];\r\n    if (!stepDef?.properties) return null;\r\n    const propDef = stepDef.properties.find(\r\n      (p) => p.path.parts[p.path.parts.length - 1] === key\r\n    );\r\n    if (!propDef || !propDef.value || !propDef.value.configuration) return null;\r\n    return (propDef?.value?.configuration as ChoiceValueModelConfiguration)\r\n      .choices;\r\n  }\r\n\r\n  stepTypeMap: Record<string, Record<string, string>> = {\r\n    e164phone: isoAlpha2Map,\r\n    dateCompare: operatorMap,\r\n    iso3166: iso3166Map,\r\n    dateFormat: DateFormatMap,\r\n  };\r\n\r\n  public getChoiceLabel(stepType: string, choice: string): string {\r\n    const lookup = this.stepTypeMap[stepType];\r\n    return lookup?.[choice.toUpperCase()] ?? choice;\r\n  }\r\n\r\n  public branchingEnabled(step: Step): boolean {\r\n    if (\r\n      isConcatStep(step) ||\r\n      isStaticStep(step) ||\r\n      isConditionalStep(step) ||\r\n      isFirstValidStep(step)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onSourceNameChanged(\r\n    properties: Properties,\r\n    name: string,\r\n    sourceName: Event | MatSlideToggleChange,\r\n    context: RootEditorContext | StepEditorContext\r\n  ) {\r\n    console.log('onSourceNameChanged', properties, name, sourceName);\r\n    if ('notifyChildrenChanged' in context && 'notifyNameChanged' in context) {\r\n      void this.loadAccountAttributes(context, sourceName as unknown as string);\r\n    }\r\n  }\r\n\r\n  private accountAttributesCache = new Map<string, any[]>();\r\n  private loadingStates = new Map<string, boolean>();\r\n\r\n  private async loadAccountAttributes(\r\n    editor: StepEditorContext,\r\n    sourceName: string\r\n  ): Promise<void> {\r\n    return this.loadAccountAttributesForSource(sourceName);\r\n  }\r\n\r\n  // Updated method to get account attributes for display with auto-loading\r\n  getAccountAttributes(editor: any): any[] {\r\n    const sourceName = editor.step.properties['sourceName'];\r\n    if (!sourceName) {\r\n      return [];\r\n    }\r\n\r\n    const cacheKey = `${sourceName}`;\r\n    console.log('getAccountAttributes', sourceName, cacheKey);\r\n\r\n    // Check if we have cached data\r\n    if (this.accountAttributesCache.has(cacheKey)) {\r\n      console.log(\r\n        'Account attributes cache:',\r\n        this.accountAttributesCache.get(cacheKey)\r\n      );\r\n      return this.accountAttributesCache.get(cacheKey) || [];\r\n    }\r\n\r\n    // If not cached and not currently loading, start loading\r\n    if (!this.loadingStates.get(cacheKey)) {\r\n      console.log('Cache miss - loading account attributes for:', sourceName);\r\n      // Don't await this - let it load in the background\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n      this.loadAccountAttributesForSource(sourceName).catch((error) => {\r\n        console.error('Failed to load account attributes:', error);\r\n      });\r\n    }\r\n\r\n    // Return empty array while loading\r\n    return [];\r\n  }\r\n\r\n  // Add this simplified loading method that doesn't require editor context\r\n  private async loadAccountAttributesForSource(\r\n    sourceName: string\r\n  ): Promise<void> {\r\n    if (!sourceName) {\r\n      return;\r\n    }\r\n\r\n    const cacheKey = `${sourceName}`;\r\n\r\n    // Check if we already have cached data (double-check)\r\n    if (this.accountAttributesCache.has(cacheKey)) {\r\n      return;\r\n    }\r\n\r\n    // Set loading state\r\n    this.loadingStates.set(cacheKey, true);\r\n\r\n    const sourceId = this.sourceMap.get(sourceName);\r\n    if (typeof sourceId === 'string') {\r\n      try {\r\n        const response = await this.sdk.getSourceSchemas({ sourceId });\r\n        const schemas = response.data;\r\n\r\n        const userSchema = schemas.find(\r\n          (schema) =>\r\n            schema.nativeObjectType === 'User' ||\r\n            schema.nativeObjectType === 'account'\r\n        );\r\n        const attributes = userSchema\r\n          ? userSchema.attributes?.map((value) => value.name)\r\n          : [];\r\n\r\n        console.log(\r\n          'Loaded account attributes for source:',\r\n          sourceName,\r\n          attributes\r\n        );\r\n\r\n        this.accountAttributesCache.set(cacheKey, attributes ?? []);\r\n        this.loadingStates.set(cacheKey, false);\r\n\r\n        // Trigger change detection to update the UI\r\n        setTimeout(() => {\r\n          // This ensures Angular picks up the changes\r\n        }, 0);\r\n      } catch (error) {\r\n        console.error('Error loading account attributes:', error);\r\n        this.loadingStates.set(cacheKey, false);\r\n      }\r\n    } else {\r\n      this.loadingStates.set(cacheKey, false);\r\n    }\r\n  }\r\n\r\n  isAccountAttributeDisabled(editor: any): boolean {\r\n    const sourceName = editor.step.properties['sourceName'];\r\n    return !sourceName || this.isLoadingAccountAttributes(editor);\r\n  }\r\n\r\n  isLoadingAccountAttributes(editor: any): boolean {\r\n    const sourceName = editor.step.properties['sourceName'];\r\n    if (!sourceName) {\r\n      return false;\r\n    }\r\n\r\n    const cacheKey = `${sourceName}`;\r\n    return this.loadingStates.get(cacheKey) || false;\r\n  }\r\n\r\n  // Optional: Method to clear cache when needed\r\n  clearAccountAttributesCache(): void {\r\n    this.accountAttributesCache.clear();\r\n    this.loadingStates.clear();\r\n  }\r\n\r\n  showBranch(step: Step, branchName: string): boolean {\r\n    if (branchName === 'input') {\r\n      return false;\r\n    } else if (\r\n      isConditionalStep(step) &&\r\n      (branchName === 'positiveCondition' || branchName === 'negativeCondition')\r\n    ) {\r\n      return false;\r\n    } else if (\r\n      isDateCompareStep(step) &&\r\n      (branchName === 'positiveCondition' ||\r\n        branchName === 'negativeCondition' ||\r\n        branchName === 'firstDate' ||\r\n        branchName === 'secondDate')\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isRequired(stepName: string, key: string): boolean {\r\n    if (!this.definitionModel) return false;\r\n\r\n    const stepDef = this.definitionModel.steps[stepName];\r\n    if (!stepDef?.properties) return false;\r\n    const propDef = stepDef.properties.find(\r\n      (p) => p.path.parts[p.path.parts.length - 1] === key\r\n    );\r\n    if (!propDef) return false;\r\n    const config = propDef.value?.configuration;\r\n    if (!config) return false;\r\n\r\n    // NullableVariableValueModelConfiguration\r\n    if ('isRequired' in config && typeof config.isRequired === 'boolean') {\r\n      return config.isRequired;\r\n    }\r\n\r\n    // StringValueModelConfiguration\r\n    if ('minLength' in config && typeof config.minLength === 'number') {\r\n      return config.minLength >= 1;\r\n    }\r\n\r\n    if ('choices' in config && Array.isArray(config.choices)) {\r\n      return config.choices.length > 1;\r\n    }\r\n\r\n    // const stepDef = this.definitionModel.steps[stepName];\r\n    // console.log('stepDef', stepDef);\r\n\r\n    return false;\r\n  }\r\n\r\n  openMessageDialog(errorMessage: string, title: string): void {\r\n    this.dialog.open(GenericDialogComponent, {\r\n      data: {\r\n        title: title,\r\n        message: errorMessage,\r\n      },\r\n    });\r\n  }\r\n\r\n  public downloadTransform(): void {\r\n    if (!this.definition?.sequence?.[0]) {\r\n      this.snackBar.open('No transform to download', 'Close', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let serializedTransform = serializeStep(this.definition.sequence[0]);\r\n\r\n      let transformDownload: TransformReadV2025 =\r\n        serializedTransform as TransformReadV2025;\r\n\r\n      const downloadName = this.definition?.properties?.name;\r\n      transformDownload.name = String(\r\n        typeof downloadName === 'string' ? downloadName : transformDownload.name\r\n      );\r\n      // Convert to JSON string with formatting\r\n      const jsonContent = JSON.stringify(transformDownload, null, 2);\r\n\r\n      // Create blob and download\r\n      const blob = new Blob([jsonContent], { type: 'application/json' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      // Create temporary download link\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${transformDownload.name}.json`;\r\n\r\n      // Trigger download\r\n      document.body.appendChild(link);\r\n      link.click();\r\n\r\n      // Cleanup\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      this.snackBar.open(`Downloaded ${transformDownload.name}.json`, 'Close', {\r\n        duration: 3000,\r\n      });\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n      this.snackBar.open('Failed to download transform', 'Close', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add these methods to your TransformBuilderComponent class\r\n\r\n  /**\r\n   * Get example output for a date format pattern\r\n   */\r\n  public getDateFormatExample(pattern: string): string {\r\n    // const examples: Record<string, string> = {\r\n    //   'yyyy-MM-dd': '2024-03-15',\r\n    //   'MM/dd/yyyy': '03/15/2024',\r\n    //   'dd/MM/yyyy': '15/03/2024',\r\n    //   'yyyy-MM-dd HH:mm:ss': '2024-03-15 14:30:45',\r\n    //   'MMM dd, yyyy': 'Mar 15, 2024',\r\n    //   'EEEE, MMMM dd, yyyy': 'Friday, March 15, 2024',\r\n    //   'HH:mm:ss': '14:30:45',\r\n    //   'yyyy-DDD': '2024-075',\r\n    //   'yy/MM/dd': '24/03/15',\r\n    //   'dd-MMM-yyyy': '15-Mar-2024',\r\n    //   'MMMM yyyy': 'March 2024',\r\n    //   'EEE, dd MMM yyyy': 'Fri, 15 Mar 2024',\r\n    // };\r\n\r\n    if (!pattern || pattern.trim() === '') {\r\n      return 'Enter a pattern to see example';\r\n    }\r\n\r\n    return `Example: ${this.generateExampleFromPattern(pattern)}`;\r\n  }\r\n\r\n  /**\r\n   * Generate a basic example from a custom pattern\r\n   */\r\n  private generateExampleFromPattern(pattern: string): string {\r\n    try {\r\n      // Simple pattern replacement for common elements\r\n      let example = pattern\r\n        .replace(/yyyy/g, '2024')\r\n        .replace(/yy/g, '24')\r\n        .replace(/MMMM/g, 'March')\r\n        .replace(/MMM/g, 'Mar')\r\n        .replace(/MM/g, '03')\r\n        .replace(/M/g, '3')\r\n        .replace(/dd/g, '15')\r\n        .replace(/d/g, '15')\r\n        .replace(/HH/g, '14')\r\n        .replace(/H/g, '14')\r\n        .replace(/hh/g, '02')\r\n        .replace(/h/g, '2')\r\n        .replace(/mm/g, '30')\r\n        .replace(/m/g, '30')\r\n        .replace(/ss/g, '45')\r\n        .replace(/s/g, '45')\r\n        .replace(/EEEE/g, 'Friday')\r\n        .replace(/EEE/g, 'Fri')\r\n        .replace(/EE/g, 'Fr')\r\n        .replace(/E/g, 'F')\r\n        .replace(/a/g, 'PM')\r\n        .replace(/DDD/g, '075')\r\n        .replace(/DD/g, '75')\r\n        .replace(/D/g, '75');\r\n\r\n      return example;\r\n    } catch {\r\n      return '2024-03-15';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate a SimpleDateFormat pattern\r\n   */\r\n  public validateDateFormatPattern(pattern: string): {\r\n    isValid: boolean;\r\n    error?: string;\r\n  } {\r\n    if (!pattern || pattern.trim() === '') {\r\n      return { isValid: false, error: 'Pattern cannot be empty' };\r\n    }\r\n\r\n    // Basic validation for common SimpleDateFormat patterns\r\n    const validPatterns = /^[yMdHhmsaEGwWDFkKzZSX\\s\\-/.,:'\"]*$/;\r\n    if (!validPatterns.test(pattern)) {\r\n      return { isValid: false, error: 'Invalid characters in date pattern' };\r\n    }\r\n\r\n    // Check for balanced quotes\r\n    const quoteCount = (pattern.match(/'/g) || []).length;\r\n    if (quoteCount % 2 !== 0) {\r\n      return { isValid: false, error: 'Unmatched quote in pattern' };\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Enhanced property update for date format fields\r\n   */\r\n  public updateDateFormatProperty(\r\n    properties: Properties,\r\n    name: string,\r\n    event: Event | MatSlideToggleChange,\r\n    context: RootEditorContext | StepEditorContext\r\n  ) {\r\n    if (event instanceof MatSlideToggleChange) {\r\n      properties[name] = event.checked;\r\n    } else if (event instanceof Event) {\r\n      const target = event.target as HTMLInputElement;\r\n      const value = target.value;\r\n\r\n      properties[name] = value;\r\n\r\n      // Validate custom date format patterns\r\n      if (\r\n        (name === 'customInputFormat' || name === 'customOutputFormat') &&\r\n        value\r\n      ) {\r\n        const validation = this.validateDateFormatPattern(value);\r\n        if (!validation.isValid) {\r\n          // You could show a validation error here\r\n          console.warn(`Invalid date format pattern: ${validation.error}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    context.notifyPropertiesChanged();\r\n  }\r\n\r\n  /**\r\n   * Check if a date format step should show custom input field\r\n   */\r\n  public shouldShowCustomInput(step: any): boolean {\r\n    return (\r\n      step.type === 'dateFormat' && step.properties.inputFormat === 'CUSTOM'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if a date format step should show custom output field\r\n   */\r\n  public shouldShowCustomOutput(step: Record<string, any>): boolean {\r\n    if (step.type !== 'dateFormat') return false;\r\n    if (!step.properties || typeof step.properties !== 'object') return false;\r\n    if (!('outputFormat' in step.properties)) return false;\r\n\r\n    return step.properties.outputFormat === 'CUSTOM';\r\n  }\r\n\r\n  /**\r\n   * Get the effective input format (custom or selected)\r\n   */\r\n  public getEffectiveInputFormat(step: Record<string, any>): string {\r\n    if (!step.properties || typeof step.properties !== 'object') {\r\n      return '';\r\n    }\r\n    const props = step.properties as Record<string, any>;\r\n    if (\r\n      props.inputFormat === 'CUSTOM' &&\r\n      props.customInputFormat &&\r\n      typeof props.customInputFormat === 'string'\r\n    ) {\r\n      return props.customInputFormat;\r\n    }\r\n    return props.inputFormat && typeof props.inputFormat === 'string'\r\n      ? props.inputFormat\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * Get the effective output format (custom or selected)\r\n   */\r\n  public getEffectiveOutputFormat(step: Record<string, any>): string {\r\n    if (!step.properties || typeof step.properties !== 'object') {\r\n      return '';\r\n    }\r\n    const props = step.properties as Record<string, any>;\r\n    if (\r\n      props.outputFormat === 'CUSTOM' &&\r\n      props.customOutputFormat &&\r\n      typeof props.customOutputFormat === 'string'\r\n    ) {\r\n      return props.customOutputFormat;\r\n    }\r\n    return props.outputFormat && typeof props.outputFormat === 'string'\r\n      ? props.outputFormat\r\n      : '';\r\n  }\r\n\r\n  // Add these methods to your TransformBuilderComponent class for Date Math support\r\n\r\n  /**\r\n   * Toggle between visual builder and manual expression input\r\n   */\r\n  public onDateMathBuilderToggle(\r\n    properties: any,\r\n    useBuilder: boolean,\r\n    context: any\r\n  ): void {\r\n    properties.useBuilder = useBuilder;\r\n\r\n    if (useBuilder) {\r\n      // Parse existing expression into operations\r\n      if (properties.expression) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        const parsed = this.parseDateMathExpression(properties.expression);\r\n        properties.baseDate = parsed.baseDate;\r\n        properties.operations = parsed.operations;\r\n      } else {\r\n        // Initialize with defaults\r\n        properties.baseDate = 'input';\r\n        properties.operations = [];\r\n      }\r\n    } else {\r\n      // Build expression from current operations\r\n      this.updateDateMathExpression(properties, context);\r\n    }\r\n\r\n    context.notifyPropertiesChanged();\r\n  }\r\n\r\n  /**\r\n   * Get operations array for the date math step\r\n   */\r\n  public getDateMathOperations(properties: Record<string, any>): any[] {\r\n    if (!properties.operations) {\r\n      properties.operations = [];\r\n    }\r\n    return Array.isArray(properties.operations) ? properties.operations : [];\r\n  }\r\n\r\n  /**\r\n   * Add a new operation to the date math step\r\n   */\r\n  public addDateMathOperation(properties: any, context: any): void {\r\n    if (!properties.operations) {\r\n      properties.operations = [];\r\n    }\r\n\r\n    properties.operations.push({\r\n      operation: '+',\r\n      value: 1,\r\n      unit: 'd',\r\n    });\r\n\r\n    this.updateDateMathExpression(properties, context);\r\n  }\r\n\r\n  /**\r\n   * Remove an operation from the date math step\r\n   */\r\n  public removeDateMathOperation(\r\n    properties: any,\r\n    index: number,\r\n    context: any\r\n  ): void {\r\n    if (properties.operations && properties.operations.length > index) {\r\n      properties.operations.splice(index, 1);\r\n      this.updateDateMathExpression(properties, context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update a specific operation property\r\n   */\r\n  public updateDateMathOperationAt(\r\n    properties: any,\r\n    index: number,\r\n    field: string,\r\n    value: any,\r\n    context: any\r\n  ): void {\r\n    if (!properties.operations || !properties.operations[index]) {\r\n      return;\r\n    }\r\n\r\n    const operation = properties.operations[index];\r\n\r\n    if (field === 'value' && value instanceof Event) {\r\n      const target = value.target as HTMLInputElement;\r\n      operation[field] = parseInt(target.value, 10) || 1;\r\n    } else {\r\n      operation[field] = value;\r\n    }\r\n\r\n    // If operation is changed to '/', set value to 1 (rounding doesn't need a value)\r\n    if (field === 'operation' && value === '/') {\r\n      operation.value = 1;\r\n    }\r\n\r\n    this.updateDateMathExpression(properties, context);\r\n  }\r\n\r\n  /**\r\n   * Update the expression based on current builder state\r\n   */\r\n  public updateDateMathExpression(properties: any, context: any): void {\r\n    if (!properties.useBuilder) {\r\n      context.notifyPropertiesChanged();\r\n      return;\r\n    }\r\n\r\n    let expression = properties.baseDate === 'now' ? 'now' : '';\r\n\r\n    if (properties.operations && properties.operations.length > 0) {\r\n      for (const op of properties.operations) {\r\n        if (op.operation === '/') {\r\n          expression += `/${op.unit}`;\r\n        } else {\r\n          expression += `${op.operation}${op.value || 1}${op.unit}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    properties.expression =\r\n      expression || (properties.baseDate === 'now' ? 'now' : '');\r\n    context.notifyPropertiesChanged();\r\n  }\r\n\r\n  /**\r\n   * Get the generated expression for display\r\n   */\r\n  public getGeneratedExpression(properties: Record<string, any>): string {\r\n    if (!properties.useBuilder) {\r\n      return typeof properties.expression === 'string'\r\n        ? properties.expression\r\n        : '';\r\n    }\r\n\r\n    let expression = properties.baseDate === 'now' ? 'now' : '';\r\n\r\n    if (\r\n      properties.operations &&\r\n      Array.isArray(properties.operations) &&\r\n      properties.operations.length > 0\r\n    ) {\r\n      for (const op of properties.operations) {\r\n        if (op && typeof op === 'object' && 'operation' in op && 'unit' in op) {\r\n          if (op.operation === '/') {\r\n            expression += `/${op.unit}`;\r\n          } else {\r\n            const value = 'value' in op ? op.value || 1 : 1;\r\n            expression += `${op.operation}${value}${op.unit}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      expression || (properties.baseDate === 'now' ? 'now' : '(no operations)')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a human-readable description of the expression\r\n   */\r\n  public getExpressionDescription(properties: any): string {\r\n    if (\r\n      !properties.useBuilder ||\r\n      !properties.operations ||\r\n      properties.operations.length === 0\r\n    ) {\r\n      if (properties.baseDate === 'now') {\r\n        return 'Returns the current date and time';\r\n      }\r\n      return 'Returns the input date unchanged';\r\n    }\r\n\r\n    const baseDescription =\r\n      properties.baseDate === 'now'\r\n        ? 'Starting from current date/time'\r\n        : 'Starting from input date';\r\n\r\n    const operationDescriptions = properties.operations.map((op: any) => {\r\n      const unitNames: Record<string, string> = {\r\n        y: 'year(s)',\r\n        M: 'month(s)',\r\n        w: 'week(s)',\r\n        d: 'day(s)',\r\n        h: 'hour(s)',\r\n        m: 'minute(s)',\r\n        s: 'second(s)',\r\n      };\r\n\r\n      if (op.operation === '/') {\r\n        return `round to ${unitNames[op.unit] || op.unit}`;\r\n      } else if (op.operation === '+') {\r\n        return `add ${op.value} ${unitNames[op.unit] || op.unit}`;\r\n      } else {\r\n        return `subtract ${op.value} ${unitNames[op.unit] || op.unit}`;\r\n      }\r\n    });\r\n\r\n    return `${baseDescription}, then ${operationDescriptions.join(', ')}`;\r\n  }\r\n\r\n  /**\r\n   * Parse an existing expression into base date and operations\r\n   */\r\n  public parseDateMathExpression(expression: string): {\r\n    baseDate: 'input' | 'now';\r\n    operations: any[];\r\n  } {\r\n    if (!expression) {\r\n      return { baseDate: 'input', operations: [] };\r\n    }\r\n\r\n    const baseDate = expression.startsWith('now') ? 'now' : 'input';\r\n    const operations: any[] = [];\r\n\r\n    // Remove 'now' from beginning if present\r\n    let remaining = expression.startsWith('now')\r\n      ? expression.substring(3)\r\n      : expression;\r\n\r\n    // Parse operations using regex\r\n    const operationRegex = /([+\\-/])(\\d*)([yMwdhms])/g;\r\n    let match;\r\n\r\n    while ((match = operationRegex.exec(remaining)) !== null) {\r\n      const [, operation, value, unit] = match;\r\n      operations.push({\r\n        operation: operation as '+' | '-' | '/',\r\n        value: operation === '/' ? 1 : parseInt(value as string, 10) || 1,\r\n        unit: unit as 'y' | 'M' | 'w' | 'd' | 'h' | 'm' | 's',\r\n      });\r\n    }\r\n\r\n    return { baseDate, operations };\r\n  }\r\n\r\n  /**\r\n   * Validate a date math expression\r\n   */\r\n  public validateDateMathExpression(expression: string): {\r\n    isValid: boolean;\r\n    error?: string;\r\n  } {\r\n    if (!expression || expression.trim() === '') {\r\n      return { isValid: false, error: 'Expression cannot be empty' };\r\n    }\r\n\r\n    // Basic validation\r\n    const validPattern = /^(now)?([+\\-/]\\d*[yMwdhms])*$/;\r\n    if (!validPattern.test(expression)) {\r\n      return { isValid: false, error: 'Invalid expression format' };\r\n    }\r\n\r\n    // Check for valid units\r\n    const validUnits = ['y', 'M', 'w', 'd', 'h', 'm', 's'];\r\n    const unitMatches = expression.match(/[yMwdhms]/g) || [];\r\n    for (const unit of unitMatches) {\r\n      if (!validUnits.includes(unit)) {\r\n        return { isValid: false, error: `Invalid unit: ${unit}` };\r\n      }\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Get example expressions for date math\r\n   */\r\n  public getDateMathExamples(): { expression: string; description: string }[] {\r\n    return [\r\n      { expression: 'now', description: 'Current date and time' },\r\n      { expression: 'now/h', description: 'Current time rounded to the hour' },\r\n      { expression: 'now+1w', description: 'One week from now' },\r\n      {\r\n        expression: 'now+1y+1M+2d-4h+1m-3s/s',\r\n        description: 'Complex calculation rounded to seconds',\r\n      },\r\n      { expression: '+3M', description: 'Add 3 months to input date' },\r\n      { expression: '-1d', description: 'Subtract 1 day from input date' },\r\n      { expression: '/d', description: 'Round input date to start of day' },\r\n    ];\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"isReady\"\r\n  id=\"autosaveControls\"\r\n  class=\"autosave-controls\"\r\n>\r\n  <h4 class=\"transform-name\">{{ definition?.properties?.name }}</h4>\r\n\r\n  <button class=\"action-buttons\" color=\"primary\" (click)=\"togglePreview()\" matTooltip=\"Test your transform with live identity data\"\r\n>\r\n    Preview Transform\r\n  </button>\r\n  <button\r\n    class=\"action-buttons\"\r\n    color=\"primary\"\r\n    (click)=\"toggleReadonlyClicked()\"\r\n  >\r\n  {{isReadonly ? \"Enable\" : \"Disable\"}} Editing\r\n  </button>\r\n\r\n  <button\r\n    class=\"action-buttons\"\r\n    color=\"primary\"\r\n    (click)=\"viewTransformDefinition()\"\r\n  >\r\n    View Definition\r\n  </button>\r\n\r\n  <!-- Sync controls -->\r\n  <div class=\"sync-controls\">\r\n    <button\r\n      class=\"action-buttons\"\r\n      color=\"warn\"\r\n      (click)=\"discardLocalChanges()\"\r\n      [disabled]=\"!hasUnsavedChanges || isSyncing\"\r\n      *ngIf=\"hasUnsavedChanges\"\r\n    >\r\n      <mat-icon>delete</mat-icon>\r\n      Discard\r\n    </button>\r\n\r\n    <button\r\n      class=\"action-buttons\"\r\n      color=\"accent\"\r\n      (click)=\"downloadTransform()\"\r\n      [disabled]=\"!definition?.sequence?.[0]\"\r\n      matTooltip=\"Download Transform Definition\"\r\n    >\r\n      <mat-icon>download</mat-icon>\r\n      Download\r\n    </button>\r\n\r\n    <button\r\n      class=\"action-buttons\"\r\n      color=\"primary\"\r\n      (click)=\"saveToCloud()\"\r\n      [matBadge]=\"hasUnsavedChanges ? '!' : null\"\r\n      matBadgeColor=\"warn\"\r\n      matBadgeSize=\"small\"\r\n    >\r\n      <mat-icon>{{ isSyncing ? \"sync\" : \"cloud_upload\" }}</mat-icon>\r\n      {{\r\n        isSyncing ? \"Syncing...\" : isNewTransform ? \"Create Transform\" : \"Save\"\r\n      }}\r\n    </button>\r\n\r\n    <!-- Auto-save status -->\r\n    <div class=\"autosave-status\">\r\n      <mat-icon\r\n        [style.color]=\"\r\n          isSaving ? 'orange' : hasUnsavedChanges ? 'red' : 'green'\r\n        \"\r\n      >\r\n        {{ isSaving ? \"sync\" : hasUnsavedChanges ? \"cloud_off\" : \"cloud_done\" }}\r\n      </mat-icon>\r\n      <span class=\"status-text\">\r\n        <ng-container *ngIf=\"isSaving\">Saving...</ng-container>\r\n        <ng-container *ngIf=\"!isSaving && hasUnsavedChanges\">\r\n          Unsaved\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isSaving && !hasUnsavedChanges\"\r\n          >Saved</ng-container\r\n        >\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!isReady\" class=\"spinner-container\">\r\n  <mat-spinner diameter=\"75\"></mat-spinner>\r\n</div>\r\n\r\n<ng-container *ngIf=\"showDesigner\">\r\n  <sqd-designer\r\n    *ngIf=\"isReady\"\r\n    [theme]=\"designerTheme\"\r\n    [definition]=\"definition\"\r\n    [toolboxConfiguration]=\"toolboxConfiguration\"\r\n    [stepsConfiguration]=\"stepsConfiguration\"\r\n    [validatorConfiguration]=\"validatorConfiguration\"\r\n    [controlBar]=\"true\"\r\n    [isReadonly]=\"isReadonly\"\r\n    [areEditorsHidden]=\"false\"\r\n    [rootEditor]=\"rootEditorProvider\"\r\n    [stepEditor]=\"stepEditorProvider\"\r\n    [isToolboxCollapsed]=\"isToolboxCollapsed\"\r\n    [isEditorCollapsed]=\"isEditorCollapsed\"\r\n    [undoStackSize]=\"5\"\r\n    (onReady)=\"onDesignerReady($event)\"\r\n    (onDefinitionChanged)=\"onDefinitionChanged($event)\"\r\n  >\r\n  </sqd-designer>\r\n</ng-container>\r\n\r\n<ng-template #rootEditorProvider let-editor>\r\n  <h3>Transform</h3>\r\n\r\n  <mat-form-field class=\"full-width\">\r\n    <input\r\n      matInput\r\n      name=\"Transform Name\"\r\n      [(ngModel)]=\"editor.definition.properties.name\"\r\n      [value]=\"editor.definition.properties.name\"\r\n      [readonly]=\"editor.isReadonly\"\r\n      (input)=\"\r\n        updateProperty(\r\n          editor.definition.properties,\r\n          'name',\r\n          $event,\r\n          editor.context\r\n        )\r\n      \"\r\n    />\r\n  </mat-form-field>\r\n    <!-- <mat-form-field class=\"full-width\">\r\n    <mat-label>Description</mat-label>\r\n    <textarea\r\n      matInput\r\n      name=\"Description\"\r\n      [(ngModel)]=\"editor.definition.properties.description\"\r\n      [value]=\"editor.definition.properties.description\"\r\n      [readonly]=\"editor.isReadonly\"\r\n      (input)=\"\r\n        updateProperty(\r\n          editor.definition.properties,\r\n          'description',\r\n          $event,\r\n          editor.context\r\n        )\r\n      \"\r\n    ></textarea>\r\n  </mat-form-field> -->\r\n</ng-template>\r\n\r\n<ng-template #stepEditorProvider let-editor>\r\n  <div style=\"padding: 1rem\">\r\n    <h3>{{ editor.step.name }}</h3>\r\n\r\n    <p class=\"transform-description\">{{editor.step.description}}</p>\r\n    <ng-container *ngIf=\"editor.step.type !== 'dateMath'\">\r\n      <p>Attributes</p>\r\n      <ng-container *ngFor=\"let key of objectKeys(editor.step.properties)\">\r\n        <div\r\n          *ngIf=\"isBoolean(editor.step.properties[key]); else numberCheck\"\r\n          style=\"display: block; margin-top: 1rem\"\r\n        >\r\n          <mat-slide-toggle\r\n            style=\"margin-bottom: 1rem\"\r\n            [(ngModel)]=\"editor.step.properties[key]\"\r\n            matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n            name=\"{{ key }}\"\r\n            [disabled]=\"editor.isReadonly\"\r\n            (change)=\"\r\n              updateProperty(\r\n                editor.step.properties,\r\n                key,\r\n                $event,\r\n                editor.context\r\n              )\r\n            \"\r\n          >\r\n            {{ getLabelForProperty(editor.step.type, key) }}\r\n          </mat-slide-toggle>\r\n        </div>\r\n\r\n        <!-- Number handling -->\r\n        <ng-template #numberCheck>\r\n          <div\r\n            *ngIf=\"isNumber(editor.step.properties[key], key, editor.step.type); else fieldCheck\"\r\n            style=\"display: block; margin-top: 1rem\"\r\n          >\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"number\"\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                name=\"{{ key }}\"\r\n                [readonly]=\"editor.isReadonly\"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                (input)=\"\r\n                  updateNumericProperty(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"\r\n                  editor.step.properties[key] === null ||\r\n                  editor.step.properties[key] === undefined\r\n                \"\r\n              >\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <ng-template #fieldCheck>\r\n          <div\r\n            *ngIf=\"isMap(editor.step.properties[key]); else textField\"\r\n            style=\"display: block; margin-top: 1rem\"\r\n          >\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"editMap(editor.step.properties, key, editor.context)\"\r\n            >\r\n              Edit {{ key }}\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <ng-template #textField>\r\n          <!-- Special handling for sourceName -->\r\n          <ng-container\r\n            *ngIf=\"\r\n              key === 'sourceName' && editor.step.type === 'accountAttribute'\r\n            \"\r\n          >\r\n            <mat-form-field\r\n              appearance=\"fill\"\r\n              style=\"display: block; margin-top: 1rem\"\r\n            >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <mat-select\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                [disabled]=\"editor.isReadonly\"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                name=\"{{ key }}\"\r\n                (selectionChange)=\"\r\n                  onSourceNameChanged(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"\r\n                    let choice of getChoicesForProperty(editor.step.type, key)\r\n                  \"\r\n                  [value]=\"choice\"\r\n                >\r\n                  {{ getChoiceLabel(editor.step.type, choice) }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <!-- Special handling for accountAttribute -->\r\n          <ng-container\r\n            *ngIf=\"\r\n              key === 'attributeName' && editor.step.type === 'accountAttribute'\r\n            \"\r\n          >\r\n            <mat-form-field\r\n              appearance=\"fill\"\r\n              style=\"display: block; margin-top: 1rem\"\r\n            >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <mat-select\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [disabled]=\"\r\n                  editor.isReadonly || isAccountAttributeDisabled(editor)\r\n                \"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                name=\"{{ key }}\"\r\n                (selectionChange)=\"\r\n                  updateProperty(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <!-- Fixed: Use attr directly as both value and display text -->\r\n                <mat-option\r\n                  *ngFor=\"let attr of getAccountAttributes(editor)\"\r\n                  [value]=\"attr\"\r\n                >\r\n                  {{ attr }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint *ngIf=\"isLoadingAccountAttributes(editor)\"\r\n                >Loading attributes...</mat-hint\r\n              >\r\n              <mat-hint\r\n                *ngIf=\"\r\n                  !editor.step.properties['sourceName'] &&\r\n                  !isLoadingAccountAttributes(editor)\r\n                \"\r\n              >\r\n                Please select a source name first\r\n              </mat-hint>\r\n              <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <!-- For getReferenceIdentityAttribute: text input -->\r\n          <ng-container\r\n            *ngIf=\"\r\n              key === 'attributeName' &&\r\n              editor.step.type === 'getReferenceIdentityAttribute'\r\n            \"\r\n          >\r\n            <mat-form-field\r\n              appearance=\"fill\"\r\n              style=\"display: block; margin-top: 1rem\"\r\n            >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <input\r\n                matInput\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                [readonly]=\"editor.isReadonly\"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                name=\"{{ key }}\"\r\n                (input)=\"\r\n                  updateProperty(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              />\r\n              <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <ng-container\r\n            *ngIf=\"key === 'inputFormat' && editor.step.type === 'dateFormat'\"\r\n          >\r\n            <!-- Help section with common patterns -->\r\n\r\n            <mat-form-field\r\n              appearance=\"fill\"\r\n              style=\"display: block; margin-top: 1rem\"\r\n            >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <mat-select\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                [disabled]=\"editor.isReadonly\"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                name=\"{{ key }}\"\r\n                (selectionChange)=\"\r\n                  updateProperty(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"\r\n                    let choice of getChoicesForProperty(editor.step.type, key)\r\n                  \"\r\n                  [value]=\"choice\"\r\n                >\r\n                  {{ getChoiceLabel(editor.step.type, choice) }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <!-- Custom Input Format Field -->\r\n            <div\r\n              *ngIf=\"editor.step.properties['inputFormat'] === 'CUSTOM'\"\r\n              style=\"margin-top: 0.5rem\"\r\n            >\r\n              <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n                <mat-label>Custom Input Format</mat-label>\r\n                <input\r\n                  matInput\r\n                  [(ngModel)]=\"editor.step.properties['customInputFormat']\"\r\n                  [readonly]=\"editor.isReadonly\"\r\n                  [required]=\"true\"\r\n                  placeholder=\"e.g., yyyy-MM-dd HH:mm:ss\"\r\n                  (input)=\"\r\n                    updateProperty(\r\n                      editor.step.properties,\r\n                      'customInputFormat',\r\n                      $event,\r\n                      editor.context\r\n                    )\r\n                  \"\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"editor.step.properties['customInputFormat'] === ''\"\r\n                >\r\n                  Custom input format is required when using CUSTOM\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <!-- Preview for custom input format -->\r\n              <div\r\n                *ngIf=\"editor.step.properties['customInputFormat']\"\r\n                style=\"\r\n                  margin-top: 0.5rem;\r\n                  padding: 0.5rem;\r\n                  background: #f5f5f5;\r\n                  border-radius: 4px;\r\n                  font-size: 0.875rem;\r\n                \"\r\n              >\r\n                {{\r\n                  getDateFormatExample(\r\n                    editor.step.properties[\"customInputFormat\"]\r\n                  )\r\n                }}\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- Output Format handling -->\r\n          <ng-container\r\n            *ngIf=\"key === 'outputFormat' && editor.step.type === 'dateFormat'\"\r\n          >\r\n            <!-- Check if it's a choice field first -->\r\n            <mat-form-field\r\n              appearance=\"fill\"\r\n              style=\"display: block; margin-top: 1rem\"\r\n            >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n              <mat-select\r\n                matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                [(ngModel)]=\"editor.step.properties[key]\"\r\n                [disabled]=\"editor.isReadonly\"\r\n                [required]=\"isRequired(editor.step.type, key)\"\r\n                name=\"{{ key }}\"\r\n                (selectionChange)=\"\r\n                  updateProperty(\r\n                    editor.step.properties,\r\n                    key,\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"\r\n                    let choice of getChoicesForProperty(editor.step.type, key)\r\n                  \"\r\n                  [value]=\"choice\"\r\n                >\r\n                  {{ getChoiceLabel(editor.step.type, choice) }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                {{ key }} is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <!-- Custom Output Format Field -->\r\n            <div\r\n              *ngIf=\"editor.step.properties['outputFormat'] === 'CUSTOM'\"\r\n              style=\"margin-top: 0.5rem\"\r\n            >\r\n              <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n                <mat-label>Custom Output Format</mat-label>\r\n                <input\r\n                  matInput\r\n                  matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                  [(ngModel)]=\"editor.step.properties['customOutputFormat']\"\r\n                  [readonly]=\"editor.isReadonly\"\r\n                  [required]=\"true\"\r\n                  placeholder=\"e.g., dd/MM/yyyy HH:mm\"\r\n                  (input)=\"\r\n                    updateProperty(\r\n                      editor.step.properties,\r\n                      'customOutputFormat',\r\n                      $event,\r\n                      editor.context\r\n                    )\r\n                  \"\r\n                />\r\n                <mat-hint\r\n                  >Use Java SimpleDateFormat pattern (e.g., dd/MM/yyyy, MMM dd,\r\n                  yyyy)</mat-hint\r\n                >\r\n                <mat-error\r\n                  *ngIf=\"editor.step.properties['customOutputFormat'] === ''\"\r\n                >\r\n                  Custom output format is required when using CUSTOM\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <!-- Preview for custom output format -->\r\n              <div\r\n                *ngIf=\"editor.step.properties['customOutputFormat']\"\r\n                style=\"\r\n                  margin-top: 0.5rem;\r\n                  padding: 0.5rem;\r\n                  background: #f5f5f5;\r\n                  border-radius: 4px;\r\n                  font-size: 0.875rem;\r\n                \"\r\n              >\r\n                <strong>Example:</strong>\r\n                {{\r\n                  getDateFormatExample(\r\n                    editor.step.properties[\"customOutputFormat\"]\r\n                  )\r\n                }}\r\n              </div>\r\n            </div>\r\n            <div\r\n              *ngIf=\"\r\n                editor.step.properties['inputFormat'] === 'CUSTOM' ||\r\n                editor.step.properties['outputFormat'] === 'CUSTOM'\r\n              \"\r\n              style=\"\r\n                margin-top: 1rem;\r\n                margin-bottom: 1rem;\r\n                padding: 1rem;\r\n                background: #e3f2fd;\r\n                border-radius: 4px;\r\n                border-left: 4px solid #2196f3;\r\n              \"\r\n            >\r\n              <h4\r\n                style=\"\r\n                  margin: 0 0 0.5rem 0;\r\n                  color: #1976d2;\r\n                  font-size: 0.875rem;\r\n                \"\r\n              >\r\n                Common Date Format Patterns\r\n              </h4>\r\n              <div style=\"font-size: 0.75rem; color: #424242\">\r\n                <div><code>yyyy-MM-dd</code> → 2024-03-15</div>\r\n                <div><code>MM/dd/yyyy</code> → 03/15/2024</div>\r\n                <div><code>dd/MM/yyyy</code> → 15/03/2024</div>\r\n                <div><code>MMM dd, yyyy</code> → Mar 15, 2024</div>\r\n                <div>\r\n                  <code>yyyy-MM-dd HH:mm:ss</code> → 2024-03-15 14:30:45\r\n                </div>\r\n                <div><code>HH:mm:ss</code> → 14:30:45</div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- Default handling for other properties -->\r\n          <ng-container\r\n            *ngIf=\"\r\n              key !== 'sourceName' &&\r\n              key !== 'attributeName' &&\r\n              key !== 'inputFormat' &&\r\n              key !== 'outputFormat' &&\r\n              key !== 'customInputFormat' &&\r\n              key !== 'customOutputFormat'\r\n            \"\r\n          >\r\n            <ng-container\r\n              *ngIf=\"\r\n                getChoicesForProperty(editor.step.type, key) as choices;\r\n                else defaultInput\r\n              \"\r\n            >\r\n              <mat-form-field\r\n                appearance=\"fill\"\r\n                style=\"display: block; margin-top: 1rem\"\r\n              >\r\n              <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n                <mat-select\r\n                  matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                  [(ngModel)]=\"editor.step.properties[key]\"\r\n                  [disabled]=\"editor.isReadonly\"\r\n                  [required]=\"isRequired(editor.step.type, key)\"\r\n                  name=\"{{ key }}\"\r\n                  (selectionChange)=\"\r\n                    updateProperty(\r\n                      editor.step.properties,\r\n                      key,\r\n                      $event.value,\r\n                      editor.context\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option *ngFor=\"let choice of choices\" [value]=\"choice\">{{\r\n                    getChoiceLabel(editor.step.type, choice)\r\n                  }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                  {{ key }} is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n\r\n            \r\n            <ng-template #defaultInput>\r\n              <div class=\"input-with-editor-container\">\r\n                <mat-form-field\r\n                  appearance=\"outline\"\r\n                  class=\"input-field\">\r\n                  <mat-label>{{ getLabelForProperty(editor.step.type, key) }}</mat-label>\r\n                  <input\r\n                    matInput\r\n                    matTooltip=\"{{getHintForProperty(editor.step.type, key)}}\"\r\n                    [(ngModel)]=\"editor.step.properties[key]\"\r\n                    name=\"{{ key }}\"\r\n                    [readonly]=\"editor.isReadonly\"\r\n                    [required]=\"isRequired(editor.step.type, key)\"\r\n                    (input)=\"\r\n                      updateProperty(\r\n                        editor.step.properties,\r\n                        key,\r\n                        $event,\r\n                        editor.context\r\n                      )\r\n                    \"\r\n                  />\r\n                  <mat-error *ngIf=\"editor.step.properties[key] === ''\">\r\n                    {{ key }} is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                \r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  class=\"editor-button\"\r\n                  [disabled]=\"editor.isReadonly\"\r\n                  (click)=\"openVelocityEditor(editor.step.properties, key, $event, editor.context)\"\r\n                  matTooltip=\"Open Code Editor\"\r\n                >\r\n                  <mat-icon>code</mat-icon>\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </ng-container>\r\n\r\n          <!-- Enhanced Date Math Section for stepEditorProvider template -->\r\n          <!-- This should be added to handle dateMath steps specifically -->\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"editor.step.type === 'dateMath'\">\r\n      <!-- Toggle between builder and manual input -->\r\n      <div style=\"margin-top: 1rem\">\r\n        <mat-slide-toggle\r\n          [(ngModel)]=\"editor.step.properties.useBuilder\"\r\n          [disabled]=\"editor.isReadonly\"\r\n          (change)=\"\r\n            onDateMathBuilderToggle(\r\n              editor.step.properties,\r\n              $event.checked,\r\n              editor.context\r\n            )\r\n          \"\r\n        >\r\n          Use Visual Expression Builder\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <!-- Visual Builder Mode -->\r\n      <div *ngIf=\"editor.step.properties.useBuilder\" style=\"margin-top: 1rem\">\r\n        <!-- Base Date Selection -->\r\n        <mat-form-field\r\n          appearance=\"fill\"\r\n          style=\"display: block; margin-top: 1rem\"\r\n        >\r\n          <mat-label>Base Date</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"editor.step.properties.baseDate\"\r\n            [disabled]=\"editor.isReadonly\"\r\n            (selectionChange)=\"\r\n              updateDateMathExpression(editor.step.properties, editor.context)\r\n            \"\r\n          >\r\n            <mat-option value=\"input\">Use Input Date</mat-option>\r\n            <mat-option value=\"now\">Use Current Date/Time</mat-option>\r\n          </mat-select>\r\n          <mat-hint>\r\n            <ng-container *ngIf=\"editor.step.properties.baseDate === 'input'\">\r\n              Start with the date provided as input to this transform\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editor.step.properties.baseDate === 'now'\">\r\n              Start with the current date and time\r\n            </ng-container>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n\r\n        <!-- Operations Builder -->\r\n        <div style=\"margin-top: 1rem\">\r\n          <h4 style=\"margin: 0.5rem 0; color: #424242\">Date/Time Operations</h4>\r\n\r\n          <!-- Existing Operations -->\r\n          <div\r\n            *ngFor=\"\r\n              let operation of getDateMathOperations(editor.step.properties);\r\n              let i = index\r\n            \"\r\n            style=\"\r\n              display: flex;\r\n              align-items: center;\r\n              gap: 0.5rem;\r\n              margin-bottom: 0.5rem;\r\n              padding: 0.5rem;\r\n              border: 1px solid #ddd;\r\n              border-radius: 4px;\r\n            \"\r\n          >\r\n            <!-- Operation Type -->\r\n            <mat-form-field appearance=\"outline\" style=\"flex: 0 0 120px\">\r\n              <mat-label>Operation</mat-label>\r\n              <mat-select\r\n                [ngModel]=\"operation.operation\" (ngModelChange)=\"operation.operation = $event\"\r\n                [disabled]=\"editor.isReadonly\"\r\n                (selectionChange)=\"\r\n                  updateDateMathOperationAt(\r\n                    editor.step.properties,\r\n                    i,\r\n                    'operation',\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <mat-option value=\"+\">Add</mat-option>\r\n                <mat-option value=\"-\">Subtract</mat-option>\r\n                <mat-option value=\"/\">Round to</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- Value (only for + and -) -->\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              style=\"flex: 0 0 80px\"\r\n              *ngIf=\"operation.operation !== '/' && operation.operation !== undefined\"\r\n            >\r\n              <mat-label>Value</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"number\"\r\n                min=\"1\"\r\n                [ngModel]=\"operation.value\" (ngModelChange)=\"operation.value = $event\"\r\n                [readonly]=\"editor.isReadonly\"\r\n                (input)=\"\r\n                  updateDateMathOperationAt(\r\n                    editor.step.properties,\r\n                    i,\r\n                    'value',\r\n                    $event,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <!-- Unit -->\r\n            <mat-form-field appearance=\"outline\" style=\"flex: 0 0 120px\">\r\n              <mat-label>Unit</mat-label>\r\n              <mat-select\r\n                [ngModel]=\"operation.unit\" (ngModelChange)=\"operation.unit = $event\"\r\n                [disabled]=\"editor.isReadonly\"\r\n                (selectionChange)=\"\r\n                  updateDateMathOperationAt(\r\n                    editor.step.properties,\r\n                    i,\r\n                    'unit',\r\n                    $event.value,\r\n                    editor.context\r\n                  )\r\n                \"\r\n              >\r\n                <mat-option value=\"y\">Years</mat-option>\r\n                <mat-option value=\"M\">Months</mat-option>\r\n                <mat-option value=\"w\">Weeks</mat-option>\r\n                <mat-option value=\"d\">Days</mat-option>\r\n                <mat-option value=\"h\">Hours</mat-option>\r\n                <mat-option value=\"m\">Minutes</mat-option>\r\n                <mat-option value=\"s\">Seconds</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- Remove Operation -->\r\n            <button\r\n              mat-icon-button\r\n              color=\"warn\"\r\n              [disabled]=\"editor.isReadonly\"\r\n              (click)=\"\r\n                removeDateMathOperation(\r\n                  editor.step.properties,\r\n                  i,\r\n                  editor.context\r\n                )\r\n              \"\r\n              matTooltip=\"Remove operation\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Add Operation Button -->\r\n          <button\r\n            mat-stroked-button\r\n            color=\"primary\"\r\n            [disabled]=\"editor.isReadonly\"\r\n            (click)=\"\r\n              addDateMathOperation(editor.step.properties, editor.context)\r\n            \"\r\n            style=\"margin-top: 0.5rem\"\r\n          >\r\n            <mat-icon>add</mat-icon>\r\n            Add Operation\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Generated Expression Preview -->\r\n        <div\r\n          style=\"\r\n            margin-top: 1rem;\r\n            padding: 1rem;\r\n            background: #f5f5f5;\r\n            border-radius: 4px;\r\n            border-left: 4px solid #4caf50;\r\n          \"\r\n        >\r\n          <h4 style=\"margin: 0 0 0.5rem 0; color: #2e7d32\">\r\n            Generated Expression\r\n          </h4>\r\n          <code style=\"font-size: 1rem; color: #1565c0\">{{\r\n            getGeneratedExpression(editor.step.properties)\r\n          }}</code>\r\n          <div style=\"margin-top: 0.5rem; font-size: 0.875rem; color: #666\">\r\n            {{ getExpressionDescription(editor.step.properties) }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Manual Expression Mode -->\r\n      <div *ngIf=\"!editor.step.properties.useBuilder\" style=\"margin-top: 1rem\">\r\n        <mat-form-field appearance=\"fill\" style=\"display: block; width: 100%\">\r\n          <mat-label>Date Math Expression</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"editor.step.properties.expression\"\r\n            [readonly]=\"editor.isReadonly\"\r\n            [required]=\"true\"\r\n            placeholder=\"e.g., now+1w, +3M, now/d\"\r\n            (input)=\"\r\n              updateProperty(\r\n                editor.step.properties,\r\n                'expression',\r\n                $event,\r\n                editor.context\r\n              )\r\n            \"\r\n          />\r\n          <mat-hint>Enter a date math expression manually</mat-hint>\r\n          <mat-error *ngIf=\"editor.step.properties.expression === ''\">\r\n            Expression is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!-- Examples and Help -->\r\n        <div\r\n          style=\"\r\n            margin-top: 1rem;\r\n            padding: 1rem;\r\n            background: #e3f2fd;\r\n            border-radius: 4px;\r\n            border-left: 4px solid #2196f3;\r\n          \"\r\n        >\r\n          <h4 style=\"margin: 0 0 0.5rem 0; color: #1976d2\">\r\n            Expression Examples\r\n          </h4>\r\n          <div style=\"font-size: 0.875rem; color: #424242\">\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>now</code> - Current date and time\r\n            </div>\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>now/h</code> - Current time rounded to the hour\r\n            </div>\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>now+1w</code> - One week from now\r\n            </div>\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>+3M</code> - Add 3 months to input date\r\n            </div>\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>-1d</code> - Subtract 1 day from input date\r\n            </div>\r\n            <div style=\"margin-bottom: 0.25rem\">\r\n              <code>/d</code> - Round input date to start of day\r\n            </div>\r\n            <div><code>now+1y+1M+2d-4h/s</code> - Complex calculation</div>\r\n          </div>\r\n\r\n          <div style=\"margin-top: 1rem; font-size: 0.75rem; color: #666\">\r\n            <strong>Units:</strong> y=years, M=months, w=weeks, d=days, h=hours,\r\n            m=minutes, s=seconds<br />\r\n            <strong>Operations:</strong> +=add, -=subtract, /=round to\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Round Up Option -->\r\n      <div style=\"margin-top: 1rem\">\r\n        <mat-slide-toggle\r\n            matTooltip=\"{{getHintForProperty(editor.step.type, 'roundUp')}}\"\r\n          [(ngModel)]=\"editor.step.properties.roundUp\"\r\n          [disabled]=\"editor.isReadonly\"\r\n          (change)=\"\r\n            updateProperty(\r\n              editor.step.properties,\r\n              'roundUp',\r\n              $event,\r\n              editor.context\r\n            )\r\n          \"\r\n        >\r\n          Round Up\r\n        </mat-slide-toggle>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div *ngIf=\"editor?.step?.branches\">\r\n      <div\r\n        *ngFor=\"\r\n          let branchName of getBranchNames(editor.step.branches);\r\n          let i = index\r\n        \"\r\n        class=\"branch-row\"\r\n      >\r\n        <div *ngIf=\"showBranch(editor?.step, branchName)\">\r\n          <mat-form-field appearance=\"outline\" class=\"branch-field\">\r\n            <input\r\n              matInput\r\n              [value]=\"branchName\"\r\n              [readonly]=\"editor.isReadonly\"\r\n              placeholder=\"Branch Name\"\r\n              (change)=\"\r\n                renameBranchAtIndex(\r\n                  editor.step.branches,\r\n                  branchName,\r\n                  $any($event.target).value,\r\n                  editor.context\r\n                )\r\n              \"\r\n            />\r\n          </mat-form-field>\r\n          <button\r\n            mat-icon-button\r\n            color=\"warn\"\r\n            (click)=\"\r\n              removeBranch(editor.step.branches, i, $event, editor.context)\r\n            \"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        mat-stroked-button\r\n        color=\"primary\"\r\n        (click)=\"addBranch(editor.step.branches, editor.context)\"\r\n        *ngIf=\"branchingEnabled(editor.step)\"\r\n      >\r\n        <mat-icon>add</mat-icon>\r\n        Add Branch\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  TransformReadV2025,\r\n  TransformsV2025ApiDeleteTransformRequest,\r\n} from 'sailpoint-api-client';\r\nimport { GenericDialogComponent } from '../generic-dialog/generic-dialog.component';\r\nimport { SailPointSDKService } from '../sailpoint-sdk.service';\r\nimport { TransformBuilderComponent } from './transform-builder/transform-builder.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-transforms',\r\n  standalone: true,\r\n  imports: [\r\n    MatTableModule,\r\n    CommonModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    TransformBuilderComponent,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n  ],\r\n  templateUrl: './transforms.component.html',\r\n  styleUrl: './transforms.component.scss',\r\n})\r\nexport class TransformsComponent implements OnInit {\r\n  title = 'Transforms';\r\n  transforms: TransformReadV2025[] = [];\r\n  dataSource: MatTableDataSource<TransformReadV2025> = new MatTableDataSource();\r\n  displayedColumns: string[] = ['id', 'name', 'type', 'internal', 'actions'];\r\n  loading = false;\r\n  hasDataLoaded = false; // ✅ Track data load state\r\n  transform: TransformReadV2025 | undefined;\r\n  editing = false;\r\n  @ViewChild(TransformBuilderComponent)\r\n  transformBuilder?: TransformBuilderComponent;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private sdk: SailPointSDKService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    void this.loadTransforms();\r\n  }\r\n\r\n  private async loadTransforms(): Promise<void> {\r\n    this.loading = true;\r\n    this.hasDataLoaded = false;\r\n\r\n    try {\r\n      const response = await this.sdk.listTransforms();\r\n      this.transforms =\r\n        response.data.filter((transform) => transform.internal !== true) ?? [];\r\n      this.dataSource = new MatTableDataSource(this.transforms);\r\n      this.hasDataLoaded = true;\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : String(error);\r\n      this.openMessageDialog(`Error loading transforms: ${message}`, 'Error');\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  openMessageDialog(errorMessage: string, title: string): void {\r\n    this.dialog.open(GenericDialogComponent, {\r\n      data: {\r\n        title: title,\r\n        message: errorMessage,\r\n      },\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // async onEdit(transform: any) {\r\n  //   await this.router.navigate(['/transform-builder'], { state: { transform } })\r\n  // }\r\n\r\n  confirmBack(): void {\r\n    if (this.transformBuilder?.hasUnsavedChanges) {\r\n      const dialogRef = this.dialog.open(GenericDialogComponent, {\r\n        width: '400px',\r\n        data: {\r\n          title: 'Unsaved Changes',\r\n          message:'You have unsaved changes. Do you want to save them before leaving?',\r\n          confirmText: 'Save',\r\n          cancelText: 'Discard',\r\n          neutralText: 'Cancel',\r\n        },\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        if (result === 'confirm') {\r\n          void this.transformBuilder?.saveToCloud?.();\r\n          this.editing = false;\r\n        } else if (result === 'discard') {\r\n          this.transformBuilder?.discardLocalChanges();\r\n          this.editing = false; \r\n        }\r\n      });\r\n    } else {\r\n      this.editing = false;\r\n    }\r\n  }\r\n\r\n  onEdit(transform?: TransformReadV2025): void {\r\n    if (transform?.type === 'usernameGenerator') {\r\n      this.dialog.open(GenericDialogComponent, {\r\n        data: {\r\n          title: 'Not Supported',\r\n          message:\r\n            'The usernameGenerator transform type cannot be edited using the transform builder.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.transform = transform;\r\n    this.editing = true;\r\n  }\r\n\r\n  onDelete(transform: TransformReadV2025): void {\r\n    this.dialog\r\n      .open(GenericDialogComponent, {\r\n        data: {\r\n          title: 'Delete Transform',\r\n          message: `Are you sure you want to delete the transform \"${transform.name}\"? This action cannot be undone.`,\r\n          showCancel: true,\r\n          cancelText: 'Cancel',\r\n          confirmText: 'Yes',\r\n          isConfirmation: true,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirmed) => {\r\n        if (confirmed) {\r\n          console.log('Deleting transform:', transform);\r\n\r\n          const transformDeleteRequest: TransformsV2025ApiDeleteTransformRequest = {\r\n            id: transform.id,\r\n          };\r\n          void this.sdk.deleteTransform(transformDeleteRequest).then(() => {\r\n            this.transforms =\r\n              this.transforms.filter(\r\n                (transformFilter) =>\r\n                  transformFilter.internal !== true &&\r\n                  transformFilter.id !== transform.id\r\n              ) ?? [];\r\n            this.dataSource = new MatTableDataSource(this.transforms);\r\n            this.hasDataLoaded = true;\r\n            this.snackBar.open(\r\n              `${transform.name} transform successfully deleted`,\r\n              'Close',\r\n              { duration: 3000 }\r\n            );\r\n          }).catch((error: unknown) => {\r\n            const message =\r\n              error instanceof Error ? error.message : String(error);\r\n            this.openMessageDialog(\r\n              `Error deleting transform: ${message}`,\r\n              'Error'\r\n            );\r\n          }).finally(() => {\r\n            this.loading = false;\r\n          });\r\n        }\r\n      });\r\n  }\r\n}","<!-- Filter -->\r\n<div *ngIf=\"!editing\" class=\"transforms-container\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-icon>transform</mat-icon>\r\n    <span class=\"toolbar-title\">{{ title }}</span>\r\n  </mat-toolbar>\r\n  <div class=\"content\">\r\n    <!-- Filter Input -->\r\n    <mat-form-field appearance=\"fill\" class=\"custom-fill-field\">\r\n      <mat-label>Filter</mat-label>\r\n      <input\r\n        matInput\r\n        (keyup)=\"applyFilter($event)\"\r\n        placeholder=\"Ex. ium\"\r\n        #input\r\n      />\r\n    </mat-form-field>\r\n    <button\r\n      id=\"new-transform-button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"onEdit(undefined)\"\r\n    >\r\n      Create New\r\n    </button>\r\n    <!-- <button id=\"new-transform-button\" mat-raised-button color=\"primary\" (click)=\"onEdit(undefined)\">Import Transform</button> -->\r\n\r\n    <!-- Spinner -->\r\n    <div *ngIf=\"loading\" class=\"spinner-container\">\r\n      <mat-spinner diameter=\"75\"></mat-spinner>\r\n    </div>\r\n\r\n    <!-- Table -->\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"dataSource\"\r\n      class=\"mat-elevation-z8\"\r\n      *ngIf=\"!loading && transforms.length\"\r\n      width=\"100%\"\r\n    >\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef>ID</th>\r\n        <td mat-cell *matCellDef=\"let transform\">{{ transform.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef>Name</th>\r\n        <td mat-cell *matCellDef=\"let transform\">{{ transform.name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Type Column -->\r\n      <ng-container matColumnDef=\"type\">\r\n        <th mat-header-cell *matHeaderCellDef>Type</th>\r\n        <td mat-cell *matCellDef=\"let transform\">{{ transform.type }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Internal Column -->\r\n      <ng-container matColumnDef=\"internal\">\r\n        <th mat-header-cell *matHeaderCellDef>Internal</th>\r\n        <td mat-cell *matCellDef=\"let transform\">{{ transform.internal }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Actions Column -->\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n        <td mat-cell *matCellDef=\"let transform\">\r\n          <button\r\n            id=\"edit-transform-button\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"onEdit(transform)\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            id=\"delete-transform-button\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"onDelete(transform)\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Header and Rows -->\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n      <!-- No Data Row -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"5\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <!-- Empty State -->\r\n    <div\r\n      *ngIf=\"!loading && hasDataLoaded && transforms.length === 0\"\r\n      class=\"empty-message\"\r\n    >\r\n      No Transforms found.\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"editing\" class=\"transform-builder-container\">\r\n  <button id=\"backButton\" mat-button (click)=\"confirmBack()\">Back</button>\r\n  <app-transform-builder [transform]=\"transform\"></app-transform-builder>\r\n</div>\r\n","/*\r\n * Public API Surface of sailpoint-components\r\n */\r\n\r\nexport * from './lib/identities/identities.component';\r\nexport * from './lib/report-example/identity-detail-view/identity-detail-view.component';\r\nexport * from './lib/report-example/report-data.service';\r\nexport * from './lib/report-example/report-example-routes';\r\nexport * from './lib/report-example/report-example.component';\r\nexport * from './lib/sailpoint-components.component';\r\nexport * from './lib/sailpoint-components.service';\r\nexport * from './lib/sailpoint-sdk.service';\r\nexport * from './lib/theme-picker/theme-picker.component';\r\nexport * from './lib/theme/theme.service';\r\nexport * from './lib/transforms/transform-builder/transform-builder.component';\r\nexport * from './lib/transforms/transforms.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i4","i5","i6","i1","i3","i2.SailPointSDKService","i7","i2.ReportDataService","i8","i11","i2.ThemeService","i1.SailPointSDKService","i3.ThemeService","i9","i10","i1.ThemeService","description","serializeStatic","takeUntil","switchMap","catchError","i1.IdentityService","i12","i3.SailPointSDKService","i4.AutoSaveService","i6.ThemeService","i14","i15","i16","i18"],"mappings":"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,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAC1D,YAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAA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"}